#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.17929
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace bsx.DirLaguna.Dal
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DirLagunaDb")]
	public partial class DirLagunaModelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertAccountConcept(AccountConcept instance);
    partial void UpdateAccountConcept(AccountConcept instance);
    partial void DeleteAccountConcept(AccountConcept instance);
    partial void InsertTag(Tag instance);
    partial void UpdateTag(Tag instance);
    partial void DeleteTag(Tag instance);
    partial void InsertAccountDetail(AccountDetail instance);
    partial void UpdateAccountDetail(AccountDetail instance);
    partial void DeleteAccountDetail(AccountDetail instance);
    partial void InsertAdvertiserCategory(AdvertiserCategory instance);
    partial void UpdateAdvertiserCategory(AdvertiserCategory instance);
    partial void DeleteAdvertiserCategory(AdvertiserCategory instance);
    partial void InsertAnnounce(Announce instance);
    partial void UpdateAnnounce(Announce instance);
    partial void DeleteAnnounce(Announce instance);
    partial void Insertaspnet_Application(aspnet_Application instance);
    partial void Updateaspnet_Application(aspnet_Application instance);
    partial void Deleteaspnet_Application(aspnet_Application instance);
    partial void Insertaspnet_Membership(aspnet_Membership instance);
    partial void Updateaspnet_Membership(aspnet_Membership instance);
    partial void Deleteaspnet_Membership(aspnet_Membership instance);
    partial void Insertaspnet_Path(aspnet_Path instance);
    partial void Updateaspnet_Path(aspnet_Path instance);
    partial void Deleteaspnet_Path(aspnet_Path instance);
    partial void Insertaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
    partial void Updateaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
    partial void Deleteaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
    partial void Insertaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
    partial void Updateaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
    partial void Deleteaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
    partial void Insertaspnet_Profile(aspnet_Profile instance);
    partial void Updateaspnet_Profile(aspnet_Profile instance);
    partial void Deleteaspnet_Profile(aspnet_Profile instance);
    partial void Insertaspnet_Role(aspnet_Role instance);
    partial void Updateaspnet_Role(aspnet_Role instance);
    partial void Deleteaspnet_Role(aspnet_Role instance);
    partial void Insertaspnet_SchemaVersion(aspnet_SchemaVersion instance);
    partial void Updateaspnet_SchemaVersion(aspnet_SchemaVersion instance);
    partial void Deleteaspnet_SchemaVersion(aspnet_SchemaVersion instance);
    partial void Insertaspnet_User(aspnet_User instance);
    partial void Updateaspnet_User(aspnet_User instance);
    partial void Deleteaspnet_User(aspnet_User instance);
    partial void Insertaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Updateaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Deleteaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Insertaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
    partial void Updateaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
    partial void Deleteaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
    partial void InsertBanner(Banner instance);
    partial void UpdateBanner(Banner instance);
    partial void DeleteBanner(Banner instance);
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertCatPublicity(CatPublicity instance);
    partial void UpdateCatPublicity(CatPublicity instance);
    partial void DeleteCatPublicity(CatPublicity instance);
    partial void InsertContract(Contract instance);
    partial void UpdateContract(Contract instance);
    partial void DeleteContract(Contract instance);
    partial void InsertCouponCategory(CouponCategory instance);
    partial void UpdateCouponCategory(CouponCategory instance);
    partial void DeleteCouponCategory(CouponCategory instance);
    partial void InsertCouponSet(CouponSet instance);
    partial void UpdateCouponSet(CouponSet instance);
    partial void DeleteCouponSet(CouponSet instance);
    partial void InsertCouponStatus(CouponStatus instance);
    partial void UpdateCouponStatus(CouponStatus instance);
    partial void DeleteCouponStatus(CouponStatus instance);
    partial void InsertEmail(Email instance);
    partial void UpdateEmail(Email instance);
    partial void DeleteEmail(Email instance);
    partial void InsertEstado(Estado instance);
    partial void UpdateEstado(Estado instance);
    partial void DeleteEstado(Estado instance);
    partial void InsertFiscalDetail(FiscalDetail instance);
    partial void UpdateFiscalDetail(FiscalDetail instance);
    partial void DeleteFiscalDetail(FiscalDetail instance);
    partial void InsertFranchisee(Franchisee instance);
    partial void UpdateFranchisee(Franchisee instance);
    partial void DeleteFranchisee(Franchisee instance);
    partial void InsertGallery(Gallery instance);
    partial void UpdateGallery(Gallery instance);
    partial void DeleteGallery(Gallery instance);
    partial void InsertGeneralSetUp(GeneralSetUp instance);
    partial void UpdateGeneralSetUp(GeneralSetUp instance);
    partial void DeleteGeneralSetUp(GeneralSetUp instance);
    partial void InsertGenPublicity(GenPublicity instance);
    partial void UpdateGenPublicity(GenPublicity instance);
    partial void DeleteGenPublicity(GenPublicity instance);
    partial void InsertMunicipio(Municipio instance);
    partial void UpdateMunicipio(Municipio instance);
    partial void DeleteMunicipio(Municipio instance);
    partial void InsertOffice(Office instance);
    partial void UpdateOffice(Office instance);
    partial void DeleteOffice(Office instance);
    partial void InsertPage(Page instance);
    partial void UpdatePage(Page instance);
    partial void DeletePage(Page instance);
    partial void InsertPersonal(Personal instance);
    partial void UpdatePersonal(Personal instance);
    partial void DeletePersonal(Personal instance);
    partial void InsertPersonalType(PersonalType instance);
    partial void UpdatePersonalType(PersonalType instance);
    partial void DeletePersonalType(PersonalType instance);
    partial void InsertPhone(Phone instance);
    partial void UpdatePhone(Phone instance);
    partial void DeletePhone(Phone instance);
    partial void InsertPhoneType(PhoneType instance);
    partial void UpdatePhoneType(PhoneType instance);
    partial void DeletePhoneType(PhoneType instance);
    partial void InsertPicture(Picture instance);
    partial void UpdatePicture(Picture instance);
    partial void DeletePicture(Picture instance);
    partial void InsertShareLevel(ShareLevel instance);
    partial void UpdateShareLevel(ShareLevel instance);
    partial void DeleteShareLevel(ShareLevel instance);
    partial void InsertSqliteUpdate(SqliteUpdate instance);
    partial void UpdateSqliteUpdate(SqliteUpdate instance);
    partial void DeleteSqliteUpdate(SqliteUpdate instance);
    partial void InsertStatus(Status instance);
    partial void UpdateStatus(Status instance);
    partial void DeleteStatus(Status instance);
    partial void InsertCoupon(Coupon instance);
    partial void UpdateCoupon(Coupon instance);
    partial void DeleteCoupon(Coupon instance);
    partial void InsertPublicityAdvertiser(PublicityAdvertiser instance);
    partial void UpdatePublicityAdvertiser(PublicityAdvertiser instance);
    partial void DeletePublicityAdvertiser(PublicityAdvertiser instance);
    partial void InsertAdvertiser(Advertiser instance);
    partial void UpdateAdvertiser(Advertiser instance);
    partial void DeleteAdvertiser(Advertiser instance);
    partial void InsertClubCard(ClubCard instance);
    partial void UpdateClubCard(ClubCard instance);
    partial void DeleteClubCard(ClubCard instance);
    partial void InsertCity(City instance);
    partial void UpdateCity(City instance);
    partial void DeleteCity(City instance);
    partial void InsertZonaMetropolitana(ZonaMetropolitana instance);
    partial void UpdateZonaMetropolitana(ZonaMetropolitana instance);
    partial void DeleteZonaMetropolitana(ZonaMetropolitana instance);
    partial void InsertPublicity(Publicity instance);
    partial void UpdatePublicity(Publicity instance);
    partial void DeletePublicity(Publicity instance);
    #endregion
		
		public DirLagunaModelDataContext() : 
				base("Data Source=NACHT-PC;Initial Catalog=DirLagunaDb;User ID=sa;Password=admin1", mappingSource)
		{
			OnCreated();
		}
		
		public DirLagunaModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DirLagunaModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DirLagunaModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DirLagunaModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AccountConcept> AccountConcepts
		{
			get
			{
				return this.GetTable<AccountConcept>();
			}
		}
		
		public System.Data.Linq.Table<Tag> Tags
		{
			get
			{
				return this.GetTable<Tag>();
			}
		}
		
		public System.Data.Linq.Table<AccountDetail> AccountDetails
		{
			get
			{
				return this.GetTable<AccountDetail>();
			}
		}
		
		public System.Data.Linq.Table<AdvertiserCategory> AdvertiserCategories
		{
			get
			{
				return this.GetTable<AdvertiserCategory>();
			}
		}
		
		public System.Data.Linq.Table<Announce> Announces
		{
			get
			{
				return this.GetTable<Announce>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Application> aspnet_Applications
		{
			get
			{
				return this.GetTable<aspnet_Application>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this.GetTable<aspnet_Membership>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Path> aspnet_Paths
		{
			get
			{
				return this.GetTable<aspnet_Path>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_PersonalizationAllUser> aspnet_PersonalizationAllUsers
		{
			get
			{
				return this.GetTable<aspnet_PersonalizationAllUser>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
		{
			get
			{
				return this.GetTable<aspnet_PersonalizationPerUser>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Profile> aspnet_Profiles
		{
			get
			{
				return this.GetTable<aspnet_Profile>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Role> aspnet_Roles
		{
			get
			{
				return this.GetTable<aspnet_Role>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_SchemaVersion> aspnet_SchemaVersions
		{
			get
			{
				return this.GetTable<aspnet_SchemaVersion>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_User> aspnet_Users
		{
			get
			{
				return this.GetTable<aspnet_User>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this.GetTable<aspnet_UsersInRole>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_WebEvent_Event> aspnet_WebEvent_Events
		{
			get
			{
				return this.GetTable<aspnet_WebEvent_Event>();
			}
		}
		
		public System.Data.Linq.Table<Banner> Banners
		{
			get
			{
				return this.GetTable<Banner>();
			}
		}
		
		public System.Data.Linq.Table<Category> Categories
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<CatPublicity> CatPublicities
		{
			get
			{
				return this.GetTable<CatPublicity>();
			}
		}
		
		public System.Data.Linq.Table<Contract> Contracts
		{
			get
			{
				return this.GetTable<Contract>();
			}
		}
		
		public System.Data.Linq.Table<CouponCategory> CouponCategories
		{
			get
			{
				return this.GetTable<CouponCategory>();
			}
		}
		
		public System.Data.Linq.Table<CouponSet> CouponSets
		{
			get
			{
				return this.GetTable<CouponSet>();
			}
		}
		
		public System.Data.Linq.Table<CouponStatus> CouponStatus
		{
			get
			{
				return this.GetTable<CouponStatus>();
			}
		}
		
		public System.Data.Linq.Table<Email> Emails
		{
			get
			{
				return this.GetTable<Email>();
			}
		}
		
		public System.Data.Linq.Table<Estado> Estados
		{
			get
			{
				return this.GetTable<Estado>();
			}
		}
		
		public System.Data.Linq.Table<FiscalDetail> FiscalDetails
		{
			get
			{
				return this.GetTable<FiscalDetail>();
			}
		}
		
		public System.Data.Linq.Table<Franchisee> Franchisees
		{
			get
			{
				return this.GetTable<Franchisee>();
			}
		}
		
		public System.Data.Linq.Table<Gallery> Galleries
		{
			get
			{
				return this.GetTable<Gallery>();
			}
		}
		
		public System.Data.Linq.Table<GeneralSetUp> GeneralSetUps
		{
			get
			{
				return this.GetTable<GeneralSetUp>();
			}
		}
		
		public System.Data.Linq.Table<GenPublicity> GenPublicities
		{
			get
			{
				return this.GetTable<GenPublicity>();
			}
		}
		
		public System.Data.Linq.Table<Municipio> Municipios
		{
			get
			{
				return this.GetTable<Municipio>();
			}
		}
		
		public System.Data.Linq.Table<Office> Offices
		{
			get
			{
				return this.GetTable<Office>();
			}
		}
		
		public System.Data.Linq.Table<Page> Pages
		{
			get
			{
				return this.GetTable<Page>();
			}
		}
		
		public System.Data.Linq.Table<Personal> Personals
		{
			get
			{
				return this.GetTable<Personal>();
			}
		}
		
		public System.Data.Linq.Table<PersonalType> PersonalTypes
		{
			get
			{
				return this.GetTable<PersonalType>();
			}
		}
		
		public System.Data.Linq.Table<Phone> Phones
		{
			get
			{
				return this.GetTable<Phone>();
			}
		}
		
		public System.Data.Linq.Table<PhoneType> PhoneTypes
		{
			get
			{
				return this.GetTable<PhoneType>();
			}
		}
		
		public System.Data.Linq.Table<Picture> Pictures
		{
			get
			{
				return this.GetTable<Picture>();
			}
		}
		
		public System.Data.Linq.Table<ShareLevel> ShareLevels
		{
			get
			{
				return this.GetTable<ShareLevel>();
			}
		}
		
		public System.Data.Linq.Table<SqliteUpdate> SqliteUpdates
		{
			get
			{
				return this.GetTable<SqliteUpdate>();
			}
		}
		
		public System.Data.Linq.Table<Status> Status
		{
			get
			{
				return this.GetTable<Status>();
			}
		}
		
		public System.Data.Linq.Table<VwCategory> VwCategories
		{
			get
			{
				return this.GetTable<VwCategory>();
			}
		}
		
		public System.Data.Linq.Table<Coupon> Coupon
		{
			get
			{
				return this.GetTable<Coupon>();
			}
		}
		
		public System.Data.Linq.Table<PublicityAdvertiser> PublicityAdvertiser
		{
			get
			{
				return this.GetTable<PublicityAdvertiser>();
			}
		}
		
		public System.Data.Linq.Table<VwAdvertiser> VwAdvertiser
		{
			get
			{
				return this.GetTable<VwAdvertiser>();
			}
		}
		
		public System.Data.Linq.Table<Advertiser> Advertiser
		{
			get
			{
				return this.GetTable<Advertiser>();
			}
		}
		
		public System.Data.Linq.Table<ClubCard> ClubCard
		{
			get
			{
				return this.GetTable<ClubCard>();
			}
		}
		
		public System.Data.Linq.Table<VwCardClubGuest> VwCardClubGuest
		{
			get
			{
				return this.GetTable<VwCardClubGuest>();
			}
		}
		
		public System.Data.Linq.Table<City> City
		{
			get
			{
				return this.GetTable<City>();
			}
		}
		
		public System.Data.Linq.Table<ZonaMetropolitana> ZonaMetropolitana
		{
			get
			{
				return this.GetTable<ZonaMetropolitana>();
			}
		}
		
		public System.Data.Linq.Table<Publicity> Publicity
		{
			get
			{
				return this.GetTable<Publicity>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountConcept")]
	public partial class AccountConcept : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountConceptId;
		
		private string _ConceptKey;
		
		private System.Nullable<int> _GorilaId;
		
		private int _TotalMax;
		
		private bool _Deleted;
		
		private int _MinValue;
		
		private string _Description;
		
		private EntitySet<AccountDetail> _AccountDetails;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountConceptIdChanging(int value);
    partial void OnAccountConceptIdChanged();
    partial void OnConceptKeyChanging(string value);
    partial void OnConceptKeyChanged();
    partial void OnGorilaIdChanging(System.Nullable<int> value);
    partial void OnGorilaIdChanged();
    partial void OnTotalMaxChanging(int value);
    partial void OnTotalMaxChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnMinValueChanging(int value);
    partial void OnMinValueChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public AccountConcept()
		{
			this._AccountDetails = new EntitySet<AccountDetail>(new Action<AccountDetail>(this.attach_AccountDetails), new Action<AccountDetail>(this.detach_AccountDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountConceptId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AccountConceptId
		{
			get
			{
				return this._AccountConceptId;
			}
			set
			{
				if ((this._AccountConceptId != value))
				{
					this.OnAccountConceptIdChanging(value);
					this.SendPropertyChanging();
					this._AccountConceptId = value;
					this.SendPropertyChanged("AccountConceptId");
					this.OnAccountConceptIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConceptKey", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string ConceptKey
		{
			get
			{
				return this._ConceptKey;
			}
			set
			{
				if ((this._ConceptKey != value))
				{
					this.OnConceptKeyChanging(value);
					this.SendPropertyChanging();
					this._ConceptKey = value;
					this.SendPropertyChanged("ConceptKey");
					this.OnConceptKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GorilaId", DbType="Int")]
		public System.Nullable<int> GorilaId
		{
			get
			{
				return this._GorilaId;
			}
			set
			{
				if ((this._GorilaId != value))
				{
					this.OnGorilaIdChanging(value);
					this.SendPropertyChanging();
					this._GorilaId = value;
					this.SendPropertyChanged("GorilaId");
					this.OnGorilaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalMax", DbType="Int NOT NULL")]
		public int TotalMax
		{
			get
			{
				return this._TotalMax;
			}
			set
			{
				if ((this._TotalMax != value))
				{
					this.OnTotalMaxChanging(value);
					this.SendPropertyChanging();
					this._TotalMax = value;
					this.SendPropertyChanged("TotalMax");
					this.OnTotalMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinValue", DbType="Int NOT NULL")]
		public int MinValue
		{
			get
			{
				return this._MinValue;
			}
			set
			{
				if ((this._MinValue != value))
				{
					this.OnMinValueChanging(value);
					this.SendPropertyChanging();
					this._MinValue = value;
					this.SendPropertyChanged("MinValue");
					this.OnMinValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccountConcept_AccountDetail", Storage="_AccountDetails", ThisKey="AccountConceptId", OtherKey="AccountConceptId")]
		public EntitySet<AccountDetail> AccountDetails
		{
			get
			{
				return this._AccountDetails;
			}
			set
			{
				this._AccountDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AccountDetails(AccountDetail entity)
		{
			this.SendPropertyChanging();
			entity.AccountConcept = this;
		}
		
		private void detach_AccountDetails(AccountDetail entity)
		{
			this.SendPropertyChanging();
			entity.AccountConcept = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tag")]
	public partial class Tag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TagId;
		
		private int _AdvertiserId;
		
		private string _Name;
		
		private bool _Deleted;
		
		private int _FranchiseeId;
		
		private EntityRef<Franchisee> _Franchisee;
		
		private EntityRef<Advertiser> _Advertiser;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTagIdChanging(int value);
    partial void OnTagIdChanged();
    partial void OnAdvertiserIdChanging(int value);
    partial void OnAdvertiserIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnFranchiseeIdChanging(int value);
    partial void OnFranchiseeIdChanged();
    #endregion
		
		public Tag()
		{
			this._Franchisee = default(EntityRef<Franchisee>);
			this._Advertiser = default(EntityRef<Advertiser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TagId
		{
			get
			{
				return this._TagId;
			}
			set
			{
				if ((this._TagId != value))
				{
					this.OnTagIdChanging(value);
					this.SendPropertyChanging();
					this._TagId = value;
					this.SendPropertyChanged("TagId");
					this.OnTagIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertiserId", DbType="Int NOT NULL")]
		public int AdvertiserId
		{
			get
			{
				return this._AdvertiserId;
			}
			set
			{
				if ((this._AdvertiserId != value))
				{
					if (this._Advertiser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdvertiserIdChanging(value);
					this.SendPropertyChanging();
					this._AdvertiserId = value;
					this.SendPropertyChanged("AdvertiserId");
					this.OnAdvertiserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FranchiseeId", DbType="Int NOT NULL")]
		public int FranchiseeId
		{
			get
			{
				return this._FranchiseeId;
			}
			set
			{
				if ((this._FranchiseeId != value))
				{
					if (this._Franchisee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFranchiseeIdChanging(value);
					this.SendPropertyChanging();
					this._FranchiseeId = value;
					this.SendPropertyChanged("FranchiseeId");
					this.OnFranchiseeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Franchisee_Tag", Storage="_Franchisee", ThisKey="FranchiseeId", OtherKey="FranchiseeId", IsForeignKey=true)]
		public Franchisee Franchisee
		{
			get
			{
				return this._Franchisee.Entity;
			}
			set
			{
				Franchisee previousValue = this._Franchisee.Entity;
				if (((previousValue != value) 
							|| (this._Franchisee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Franchisee.Entity = null;
						previousValue.Tags.Remove(this);
					}
					this._Franchisee.Entity = value;
					if ((value != null))
					{
						value.Tags.Add(this);
						this._FranchiseeId = value.FranchiseeId;
					}
					else
					{
						this._FranchiseeId = default(int);
					}
					this.SendPropertyChanged("Franchisee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Advertiser_Tag", Storage="_Advertiser", ThisKey="AdvertiserId", OtherKey="AdvertiserId", IsForeignKey=true)]
		public Advertiser Advertiser
		{
			get
			{
				return this._Advertiser.Entity;
			}
			set
			{
				Advertiser previousValue = this._Advertiser.Entity;
				if (((previousValue != value) 
							|| (this._Advertiser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Advertiser.Entity = null;
						previousValue.Tag.Remove(this);
					}
					this._Advertiser.Entity = value;
					if ((value != null))
					{
						value.Tag.Add(this);
						this._AdvertiserId = value.AdvertiserId;
					}
					else
					{
						this._AdvertiserId = default(int);
					}
					this.SendPropertyChanged("Advertiser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountDetail")]
	public partial class AccountDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountDetailId;
		
		private int _ContractId;
		
		private int _AccountConceptId;
		
		private int _Quantity;
		
		private bool _Deleted;
		
		private int _AdvertiserId;
		
		private EntityRef<AccountConcept> _AccountConcept;
		
		private EntityRef<Contract> _Contract;
		
		private EntityRef<Advertiser> _Advertiser;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountDetailIdChanging(int value);
    partial void OnAccountDetailIdChanged();
    partial void OnContractIdChanging(int value);
    partial void OnContractIdChanged();
    partial void OnAccountConceptIdChanging(int value);
    partial void OnAccountConceptIdChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnAdvertiserIdChanging(int value);
    partial void OnAdvertiserIdChanged();
    #endregion
		
		public AccountDetail()
		{
			this._AccountConcept = default(EntityRef<AccountConcept>);
			this._Contract = default(EntityRef<Contract>);
			this._Advertiser = default(EntityRef<Advertiser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountDetailId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AccountDetailId
		{
			get
			{
				return this._AccountDetailId;
			}
			set
			{
				if ((this._AccountDetailId != value))
				{
					this.OnAccountDetailIdChanging(value);
					this.SendPropertyChanging();
					this._AccountDetailId = value;
					this.SendPropertyChanged("AccountDetailId");
					this.OnAccountDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractId", DbType="Int NOT NULL")]
		public int ContractId
		{
			get
			{
				return this._ContractId;
			}
			set
			{
				if ((this._ContractId != value))
				{
					if (this._Contract.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContractIdChanging(value);
					this.SendPropertyChanging();
					this._ContractId = value;
					this.SendPropertyChanged("ContractId");
					this.OnContractIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountConceptId", DbType="Int NOT NULL")]
		public int AccountConceptId
		{
			get
			{
				return this._AccountConceptId;
			}
			set
			{
				if ((this._AccountConceptId != value))
				{
					if (this._AccountConcept.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountConceptIdChanging(value);
					this.SendPropertyChanging();
					this._AccountConceptId = value;
					this.SendPropertyChanged("AccountConceptId");
					this.OnAccountConceptIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertiserId", DbType="Int NOT NULL")]
		public int AdvertiserId
		{
			get
			{
				return this._AdvertiserId;
			}
			set
			{
				if ((this._AdvertiserId != value))
				{
					if (this._Advertiser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdvertiserIdChanging(value);
					this.SendPropertyChanging();
					this._AdvertiserId = value;
					this.SendPropertyChanged("AdvertiserId");
					this.OnAdvertiserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccountConcept_AccountDetail", Storage="_AccountConcept", ThisKey="AccountConceptId", OtherKey="AccountConceptId", IsForeignKey=true)]
		public AccountConcept AccountConcept
		{
			get
			{
				return this._AccountConcept.Entity;
			}
			set
			{
				AccountConcept previousValue = this._AccountConcept.Entity;
				if (((previousValue != value) 
							|| (this._AccountConcept.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountConcept.Entity = null;
						previousValue.AccountDetails.Remove(this);
					}
					this._AccountConcept.Entity = value;
					if ((value != null))
					{
						value.AccountDetails.Add(this);
						this._AccountConceptId = value.AccountConceptId;
					}
					else
					{
						this._AccountConceptId = default(int);
					}
					this.SendPropertyChanged("AccountConcept");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_AccountDetail", Storage="_Contract", ThisKey="ContractId", OtherKey="ContractId", IsForeignKey=true)]
		public Contract Contract
		{
			get
			{
				return this._Contract.Entity;
			}
			set
			{
				Contract previousValue = this._Contract.Entity;
				if (((previousValue != value) 
							|| (this._Contract.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contract.Entity = null;
						previousValue.AccountDetails.Remove(this);
					}
					this._Contract.Entity = value;
					if ((value != null))
					{
						value.AccountDetails.Add(this);
						this._ContractId = value.ContractId;
					}
					else
					{
						this._ContractId = default(int);
					}
					this.SendPropertyChanged("Contract");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Advertiser_AccountDetail", Storage="_Advertiser", ThisKey="AdvertiserId", OtherKey="AdvertiserId", IsForeignKey=true)]
		public Advertiser Advertiser
		{
			get
			{
				return this._Advertiser.Entity;
			}
			set
			{
				Advertiser previousValue = this._Advertiser.Entity;
				if (((previousValue != value) 
							|| (this._Advertiser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Advertiser.Entity = null;
						previousValue.AccountDetail.Remove(this);
					}
					this._Advertiser.Entity = value;
					if ((value != null))
					{
						value.AccountDetail.Add(this);
						this._AdvertiserId = value.AdvertiserId;
					}
					else
					{
						this._AdvertiserId = default(int);
					}
					this.SendPropertyChanged("Advertiser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdvertiserCategory")]
	public partial class AdvertiserCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AdvertiserCategoryId;
		
		private int _CategoryId;
		
		private int _AdvertiserId;
		
		private bool _Deleted;
		
		private int _FranchiseeId;
		
		private System.DateTime _CreatedOn;
		
		private EntityRef<Category> _Category;
		
		private EntityRef<Franchisee> _Franchisee;
		
		private EntityRef<Advertiser> _Advertiser;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdvertiserCategoryIdChanging(int value);
    partial void OnAdvertiserCategoryIdChanged();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnAdvertiserIdChanging(int value);
    partial void OnAdvertiserIdChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnFranchiseeIdChanging(int value);
    partial void OnFranchiseeIdChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    #endregion
		
		public AdvertiserCategory()
		{
			this._Category = default(EntityRef<Category>);
			this._Franchisee = default(EntityRef<Franchisee>);
			this._Advertiser = default(EntityRef<Advertiser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertiserCategoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AdvertiserCategoryId
		{
			get
			{
				return this._AdvertiserCategoryId;
			}
			set
			{
				if ((this._AdvertiserCategoryId != value))
				{
					this.OnAdvertiserCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._AdvertiserCategoryId = value;
					this.SendPropertyChanged("AdvertiserCategoryId");
					this.OnAdvertiserCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int NOT NULL")]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertiserId", DbType="Int NOT NULL")]
		public int AdvertiserId
		{
			get
			{
				return this._AdvertiserId;
			}
			set
			{
				if ((this._AdvertiserId != value))
				{
					if (this._Advertiser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdvertiserIdChanging(value);
					this.SendPropertyChanging();
					this._AdvertiserId = value;
					this.SendPropertyChanged("AdvertiserId");
					this.OnAdvertiserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FranchiseeId", DbType="Int NOT NULL")]
		public int FranchiseeId
		{
			get
			{
				return this._FranchiseeId;
			}
			set
			{
				if ((this._FranchiseeId != value))
				{
					if (this._Franchisee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFranchiseeIdChanging(value);
					this.SendPropertyChanging();
					this._FranchiseeId = value;
					this.SendPropertyChanged("FranchiseeId");
					this.OnFranchiseeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_AdvertiserCategory", Storage="_Category", ThisKey="CategoryId", OtherKey="CategoryId", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.AdvertiserCategories.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.AdvertiserCategories.Add(this);
						this._CategoryId = value.CategoryId;
					}
					else
					{
						this._CategoryId = default(int);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Franchisee_AdvertiserCategory", Storage="_Franchisee", ThisKey="FranchiseeId", OtherKey="FranchiseeId", IsForeignKey=true)]
		public Franchisee Franchisee
		{
			get
			{
				return this._Franchisee.Entity;
			}
			set
			{
				Franchisee previousValue = this._Franchisee.Entity;
				if (((previousValue != value) 
							|| (this._Franchisee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Franchisee.Entity = null;
						previousValue.AdvertiserCategories.Remove(this);
					}
					this._Franchisee.Entity = value;
					if ((value != null))
					{
						value.AdvertiserCategories.Add(this);
						this._FranchiseeId = value.FranchiseeId;
					}
					else
					{
						this._FranchiseeId = default(int);
					}
					this.SendPropertyChanged("Franchisee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Advertiser_AdvertiserCategory", Storage="_Advertiser", ThisKey="AdvertiserId", OtherKey="AdvertiserId", IsForeignKey=true)]
		public Advertiser Advertiser
		{
			get
			{
				return this._Advertiser.Entity;
			}
			set
			{
				Advertiser previousValue = this._Advertiser.Entity;
				if (((previousValue != value) 
							|| (this._Advertiser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Advertiser.Entity = null;
						previousValue.AdvertiserCategory.Remove(this);
					}
					this._Advertiser.Entity = value;
					if ((value != null))
					{
						value.AdvertiserCategory.Add(this);
						this._AdvertiserId = value.AdvertiserId;
					}
					else
					{
						this._AdvertiserId = default(int);
					}
					this.SendPropertyChanged("Advertiser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Announce")]
	public partial class Announce : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AnnounceId;
		
		private int _AdvertiserId;
		
		private int _PageId;
		
		private System.DateTime _CreatedOn;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private bool _Deleted;
		
		private int _FranchiseeId;
		
		private EntityRef<Franchisee> _Franchisee;
		
		private EntityRef<Page> _Page;
		
		private EntityRef<Advertiser> _Advertiser;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAnnounceIdChanging(int value);
    partial void OnAnnounceIdChanged();
    partial void OnAdvertiserIdChanging(int value);
    partial void OnAdvertiserIdChanged();
    partial void OnPageIdChanging(int value);
    partial void OnPageIdChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnFranchiseeIdChanging(int value);
    partial void OnFranchiseeIdChanged();
    #endregion
		
		public Announce()
		{
			this._Franchisee = default(EntityRef<Franchisee>);
			this._Page = default(EntityRef<Page>);
			this._Advertiser = default(EntityRef<Advertiser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnnounceId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AnnounceId
		{
			get
			{
				return this._AnnounceId;
			}
			set
			{
				if ((this._AnnounceId != value))
				{
					this.OnAnnounceIdChanging(value);
					this.SendPropertyChanging();
					this._AnnounceId = value;
					this.SendPropertyChanged("AnnounceId");
					this.OnAnnounceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertiserId", DbType="Int NOT NULL")]
		public int AdvertiserId
		{
			get
			{
				return this._AdvertiserId;
			}
			set
			{
				if ((this._AdvertiserId != value))
				{
					if (this._Advertiser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdvertiserIdChanging(value);
					this.SendPropertyChanging();
					this._AdvertiserId = value;
					this.SendPropertyChanged("AdvertiserId");
					this.OnAdvertiserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageId", DbType="Int NOT NULL")]
		public int PageId
		{
			get
			{
				return this._PageId;
			}
			set
			{
				if ((this._PageId != value))
				{
					if (this._Page.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPageIdChanging(value);
					this.SendPropertyChanging();
					this._PageId = value;
					this.SendPropertyChanged("PageId");
					this.OnPageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FranchiseeId", DbType="Int NOT NULL")]
		public int FranchiseeId
		{
			get
			{
				return this._FranchiseeId;
			}
			set
			{
				if ((this._FranchiseeId != value))
				{
					if (this._Franchisee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFranchiseeIdChanging(value);
					this.SendPropertyChanging();
					this._FranchiseeId = value;
					this.SendPropertyChanged("FranchiseeId");
					this.OnFranchiseeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Franchisee_Announce", Storage="_Franchisee", ThisKey="FranchiseeId", OtherKey="FranchiseeId", IsForeignKey=true)]
		public Franchisee Franchisee
		{
			get
			{
				return this._Franchisee.Entity;
			}
			set
			{
				Franchisee previousValue = this._Franchisee.Entity;
				if (((previousValue != value) 
							|| (this._Franchisee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Franchisee.Entity = null;
						previousValue.Announces.Remove(this);
					}
					this._Franchisee.Entity = value;
					if ((value != null))
					{
						value.Announces.Add(this);
						this._FranchiseeId = value.FranchiseeId;
					}
					else
					{
						this._FranchiseeId = default(int);
					}
					this.SendPropertyChanged("Franchisee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Page_Announce", Storage="_Page", ThisKey="PageId", OtherKey="PageId", IsForeignKey=true)]
		public Page Page
		{
			get
			{
				return this._Page.Entity;
			}
			set
			{
				Page previousValue = this._Page.Entity;
				if (((previousValue != value) 
							|| (this._Page.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Page.Entity = null;
						previousValue.Announces.Remove(this);
					}
					this._Page.Entity = value;
					if ((value != null))
					{
						value.Announces.Add(this);
						this._PageId = value.PageId;
					}
					else
					{
						this._PageId = default(int);
					}
					this.SendPropertyChanged("Page");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Advertiser_Announce", Storage="_Advertiser", ThisKey="AdvertiserId", OtherKey="AdvertiserId", IsForeignKey=true)]
		public Advertiser Advertiser
		{
			get
			{
				return this._Advertiser.Entity;
			}
			set
			{
				Advertiser previousValue = this._Advertiser.Entity;
				if (((previousValue != value) 
							|| (this._Advertiser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Advertiser.Entity = null;
						previousValue.Announce.Remove(this);
					}
					this._Advertiser.Entity = value;
					if ((value != null))
					{
						value.Announce.Add(this);
						this._AdvertiserId = value.AdvertiserId;
					}
					else
					{
						this._AdvertiserId = default(int);
					}
					this.SendPropertyChanged("Advertiser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Applications")]
	public partial class aspnet_Application : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ApplicationName;
		
		private string _LoweredApplicationName;
		
		private System.Guid _ApplicationId;
		
		private string _Description;
		
		private EntitySet<aspnet_Membership> _aspnet_Memberships;
		
		private EntitySet<aspnet_Path> _aspnet_Paths;
		
		private EntitySet<aspnet_Role> _aspnet_Roles;
		
		private EntitySet<aspnet_User> _aspnet_Users;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnLoweredApplicationNameChanging(string value);
    partial void OnLoweredApplicationNameChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Application()
		{
			this._aspnet_Memberships = new EntitySet<aspnet_Membership>(new Action<aspnet_Membership>(this.attach_aspnet_Memberships), new Action<aspnet_Membership>(this.detach_aspnet_Memberships));
			this._aspnet_Paths = new EntitySet<aspnet_Path>(new Action<aspnet_Path>(this.attach_aspnet_Paths), new Action<aspnet_Path>(this.detach_aspnet_Paths));
			this._aspnet_Roles = new EntitySet<aspnet_Role>(new Action<aspnet_Role>(this.attach_aspnet_Roles), new Action<aspnet_Role>(this.detach_aspnet_Roles));
			this._aspnet_Users = new EntitySet<aspnet_User>(new Action<aspnet_User>(this.attach_aspnet_Users), new Action<aspnet_User>(this.detach_aspnet_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredApplicationName
		{
			get
			{
				return this._LoweredApplicationName;
			}
			set
			{
				if ((this._LoweredApplicationName != value))
				{
					this.OnLoweredApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredApplicationName = value;
					this.SendPropertyChanged("LoweredApplicationName");
					this.OnLoweredApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Memberships", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this._aspnet_Memberships;
			}
			set
			{
				this._aspnet_Memberships.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Path", Storage="_aspnet_Paths", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Path> aspnet_Paths
		{
			get
			{
				return this._aspnet_Paths;
			}
			set
			{
				this._aspnet_Paths.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Role", Storage="_aspnet_Roles", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Role> aspnet_Roles
		{
			get
			{
				return this._aspnet_Roles;
			}
			set
			{
				this._aspnet_Roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Users", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_User> aspnet_Users
		{
			get
			{
				return this._aspnet_Users;
			}
			set
			{
				this._aspnet_Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_Memberships(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Memberships(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Paths(aspnet_Path entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Paths(aspnet_Path entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Roles(aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Roles(aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Users(aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Users(aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Membership")]
	public partial class aspnet_Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _Password;
		
		private int _PasswordFormat;
		
		private string _PasswordSalt;
		
		private string _MobilePIN;
		
		private string _Email;
		
		private string _LoweredEmail;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _LastPasswordChangedDate;
		
		private System.DateTime _LastLockoutDate;
		
		private int _FailedPasswordAttemptCount;
		
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
		private int _FailedPasswordAnswerAttemptCount;
		
		private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
		
		private string _Comment;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnMobilePINChanging(string value);
    partial void OnMobilePINChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLoweredEmailChanging(string value);
    partial void OnLoweredEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public aspnet_Membership()
		{
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		public int PasswordFormat
		{
			get
			{
				return this._PasswordFormat;
			}
			set
			{
				if ((this._PasswordFormat != value))
				{
					this.OnPasswordFormatChanging(value);
					this.SendPropertyChanging();
					this._PasswordFormat = value;
					this.SendPropertyChanged("PasswordFormat");
					this.OnPasswordFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePIN", DbType="NVarChar(16)")]
		public string MobilePIN
		{
			get
			{
				return this._MobilePIN;
			}
			set
			{
				if ((this._MobilePIN != value))
				{
					this.OnMobilePINChanging(value);
					this.SendPropertyChanging();
					this._MobilePIN = value;
					this.SendPropertyChanged("MobilePIN");
					this.OnMobilePINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredEmail", DbType="NVarChar(256)")]
		public string LoweredEmail
		{
			get
			{
				return this._LoweredEmail;
			}
			set
			{
				if ((this._LoweredEmail != value))
				{
					this.OnLoweredEmailChanging(value);
					this.SendPropertyChanging();
					this._LoweredEmail = value;
					this.SendPropertyChanged("LoweredEmail");
					this.OnLoweredEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this.OnLastPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChangedDate = value;
					this.SendPropertyChanged("LastPasswordChangedDate");
					this.OnLastPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLockoutDate
		{
			get
			{
				return this._LastLockoutDate;
			}
			set
			{
				if ((this._LastLockoutDate != value))
				{
					this.OnLastLockoutDateChanging(value);
					this.SendPropertyChanging();
					this._LastLockoutDate = value;
					this.SendPropertyChanged("LastLockoutDate");
					this.OnLastLockoutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this.OnFailedPasswordAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAttemptCount");
					this.OnFailedPasswordAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAttemptWindowStart != value))
				{
					this.OnFailedPasswordAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
					this.OnFailedPasswordAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAnswerAttemptCount
		{
			get
			{
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptCount != value))
				{
					this.OnFailedPasswordAnswerAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
					this.OnFailedPasswordAnswerAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAnswerAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAnswerAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptWindowStart != value))
				{
					this.OnFailedPasswordAnswerAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
					this.OnFailedPasswordAnswerAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Memberships.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Memberships.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Membership = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Membership = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Paths")]
	public partial class aspnet_Path : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _PathId;
		
		private string _Path;
		
		private string _LoweredPath;
		
		private EntityRef<aspnet_PersonalizationAllUser> _aspnet_PersonalizationAllUser;
		
		private EntitySet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUsers;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnPathIdChanging(System.Guid value);
    partial void OnPathIdChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnLoweredPathChanging(string value);
    partial void OnLoweredPathChanged();
    #endregion
		
		public aspnet_Path()
		{
			this._aspnet_PersonalizationAllUser = default(EntityRef<aspnet_PersonalizationAllUser>);
			this._aspnet_PersonalizationPerUsers = new EntitySet<aspnet_PersonalizationPerUser>(new Action<aspnet_PersonalizationPerUser>(this.attach_aspnet_PersonalizationPerUsers), new Action<aspnet_PersonalizationPerUser>(this.detach_aspnet_PersonalizationPerUsers));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredPath", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredPath
		{
			get
			{
				return this._LoweredPath;
			}
			set
			{
				if ((this._LoweredPath != value))
				{
					this.OnLoweredPathChanging(value);
					this.SendPropertyChanging();
					this._LoweredPath = value;
					this.SendPropertyChanged("LoweredPath");
					this.OnLoweredPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationAllUser", Storage="_aspnet_PersonalizationAllUser", ThisKey="PathId", OtherKey="PathId", IsUnique=true, IsForeignKey=false)]
		public aspnet_PersonalizationAllUser aspnet_PersonalizationAllUser
		{
			get
			{
				return this._aspnet_PersonalizationAllUser.Entity;
			}
			set
			{
				aspnet_PersonalizationAllUser previousValue = this._aspnet_PersonalizationAllUser.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_PersonalizationAllUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_PersonalizationAllUser.Entity = null;
						previousValue.aspnet_Path = null;
					}
					this._aspnet_PersonalizationAllUser.Entity = value;
					if ((value != null))
					{
						value.aspnet_Path = this;
					}
					this.SendPropertyChanged("aspnet_PersonalizationAllUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationPerUser", Storage="_aspnet_PersonalizationPerUsers", ThisKey="PathId", OtherKey="PathId")]
		public EntitySet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
		{
			get
			{
				return this._aspnet_PersonalizationPerUsers;
			}
			set
			{
				this._aspnet_PersonalizationPerUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Path", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Paths.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Paths.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Path = this;
		}
		
		private void detach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Path = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_PersonalizationAllUsers")]
	public partial class aspnet_PersonalizationAllUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PathId;
		
		private System.Data.Linq.Binary _PageSettings;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_Path> _aspnet_Path;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPathIdChanging(System.Guid value);
    partial void OnPathIdChanged();
    partial void OnPageSettingsChanging(System.Data.Linq.Binary value);
    partial void OnPageSettingsChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_PersonalizationAllUser()
		{
			this._aspnet_Path = default(EntityRef<aspnet_Path>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					if (this._aspnet_Path.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSettings", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PageSettings
		{
			get
			{
				return this._PageSettings;
			}
			set
			{
				if ((this._PageSettings != value))
				{
					this.OnPageSettingsChanging(value);
					this.SendPropertyChanging();
					this._PageSettings = value;
					this.SendPropertyChanged("PageSettings");
					this.OnPageSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationAllUser", Storage="_aspnet_Path", ThisKey="PathId", OtherKey="PathId", IsForeignKey=true)]
		public aspnet_Path aspnet_Path
		{
			get
			{
				return this._aspnet_Path.Entity;
			}
			set
			{
				aspnet_Path previousValue = this._aspnet_Path.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Path.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Path.Entity = null;
						previousValue.aspnet_PersonalizationAllUser = null;
					}
					this._aspnet_Path.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationAllUser = this;
						this._PathId = value.PathId;
					}
					else
					{
						this._PathId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Path");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_PersonalizationPerUser")]
	public partial class aspnet_PersonalizationPerUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _PathId;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Data.Linq.Binary _PageSettings;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_Path> _aspnet_Path;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnPathIdChanging(System.Nullable<System.Guid> value);
    partial void OnPathIdChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnPageSettingsChanging(System.Data.Linq.Binary value);
    partial void OnPageSettingsChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_PersonalizationPerUser()
		{
			this._aspnet_Path = default(EntityRef<aspnet_Path>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					if (this._aspnet_Path.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSettings", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PageSettings
		{
			get
			{
				return this._PageSettings;
			}
			set
			{
				if ((this._PageSettings != value))
				{
					this.OnPageSettingsChanging(value);
					this.SendPropertyChanging();
					this._PageSettings = value;
					this.SendPropertyChanged("PageSettings");
					this.OnPageSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationPerUser", Storage="_aspnet_Path", ThisKey="PathId", OtherKey="PathId", IsForeignKey=true)]
		public aspnet_Path aspnet_Path
		{
			get
			{
				return this._aspnet_Path.Entity;
			}
			set
			{
				aspnet_Path previousValue = this._aspnet_Path.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Path.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Path.Entity = null;
						previousValue.aspnet_PersonalizationPerUsers.Remove(this);
					}
					this._aspnet_Path.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationPerUsers.Add(this);
						this._PathId = value.PathId;
					}
					else
					{
						this._PathId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_Path");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_PersonalizationPerUser", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_PersonalizationPerUsers.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationPerUsers.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Profile")]
	public partial class aspnet_Profile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private string _PropertyNames;
		
		private string _PropertyValuesString;
		
		private System.Data.Linq.Binary _PropertyValuesBinary;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPropertyNamesChanging(string value);
    partial void OnPropertyNamesChanged();
    partial void OnPropertyValuesStringChanging(string value);
    partial void OnPropertyValuesStringChanged();
    partial void OnPropertyValuesBinaryChanging(System.Data.Linq.Binary value);
    partial void OnPropertyValuesBinaryChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_Profile()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyNames", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PropertyNames
		{
			get
			{
				return this._PropertyNames;
			}
			set
			{
				if ((this._PropertyNames != value))
				{
					this.OnPropertyNamesChanging(value);
					this.SendPropertyChanging();
					this._PropertyNames = value;
					this.SendPropertyChanged("PropertyNames");
					this.OnPropertyNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesString", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PropertyValuesString
		{
			get
			{
				return this._PropertyValuesString;
			}
			set
			{
				if ((this._PropertyValuesString != value))
				{
					this.OnPropertyValuesStringChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesString = value;
					this.SendPropertyChanged("PropertyValuesString");
					this.OnPropertyValuesStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesBinary", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PropertyValuesBinary
		{
			get
			{
				return this._PropertyValuesBinary;
			}
			set
			{
				if ((this._PropertyValuesBinary != value))
				{
					this.OnPropertyValuesBinaryChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesBinary = value;
					this.SendPropertyChanged("PropertyValuesBinary");
					this.OnPropertyValuesBinaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Profile = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Profile = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Roles")]
	public partial class aspnet_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _RoleId;
		
		private string _RoleName;
		
		private string _LoweredRoleName;
		
		private string _Description;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnLoweredRoleNameChanging(string value);
    partial void OnLoweredRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Role()
		{
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredRoleName
		{
			get
			{
				return this._LoweredRoleName;
			}
			set
			{
				if ((this._LoweredRoleName != value))
				{
					this.OnLoweredRoleNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredRoleName = value;
					this.SendPropertyChanged("LoweredRoleName");
					this.OnLoweredRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Role", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Roles.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Roles.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_SchemaVersions")]
	public partial class aspnet_SchemaVersion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Feature;
		
		private string _CompatibleSchemaVersion;
		
		private bool _IsCurrentVersion;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeatureChanging(string value);
    partial void OnFeatureChanged();
    partial void OnCompatibleSchemaVersionChanging(string value);
    partial void OnCompatibleSchemaVersionChanged();
    partial void OnIsCurrentVersionChanging(bool value);
    partial void OnIsCurrentVersionChanged();
    #endregion
		
		public aspnet_SchemaVersion()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feature", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Feature
		{
			get
			{
				return this._Feature;
			}
			set
			{
				if ((this._Feature != value))
				{
					this.OnFeatureChanging(value);
					this.SendPropertyChanging();
					this._Feature = value;
					this.SendPropertyChanged("Feature");
					this.OnFeatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompatibleSchemaVersion", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CompatibleSchemaVersion
		{
			get
			{
				return this._CompatibleSchemaVersion;
			}
			set
			{
				if ((this._CompatibleSchemaVersion != value))
				{
					this.OnCompatibleSchemaVersionChanging(value);
					this.SendPropertyChanging();
					this._CompatibleSchemaVersion = value;
					this.SendPropertyChanged("CompatibleSchemaVersion");
					this.OnCompatibleSchemaVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCurrentVersion", DbType="Bit NOT NULL")]
		public bool IsCurrentVersion
		{
			get
			{
				return this._IsCurrentVersion;
			}
			set
			{
				if ((this._IsCurrentVersion != value))
				{
					this.OnIsCurrentVersionChanging(value);
					this.SendPropertyChanging();
					this._IsCurrentVersion = value;
					this.SendPropertyChanged("IsCurrentVersion");
					this.OnIsCurrentVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Users")]
	public partial class aspnet_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private EntityRef<aspnet_Membership> _aspnet_Membership;
		
		private EntitySet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUsers;
		
		private EntityRef<aspnet_Profile> _aspnet_Profile;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
		private EntitySet<Advertiser> _Advertiser;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
		
		public aspnet_User()
		{
			this._aspnet_Membership = default(EntityRef<aspnet_Membership>);
			this._aspnet_PersonalizationPerUsers = new EntitySet<aspnet_PersonalizationPerUser>(new Action<aspnet_PersonalizationPerUser>(this.attach_aspnet_PersonalizationPerUsers), new Action<aspnet_PersonalizationPerUser>(this.detach_aspnet_PersonalizationPerUsers));
			this._aspnet_Profile = default(EntityRef<aspnet_Profile>);
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			this._Advertiser = new EntitySet<Advertiser>(new Action<Advertiser>(this.attach_Advertiser), new Action<Advertiser>(this.detach_Advertiser));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredUserName
		{
			get
			{
				return this._LoweredUserName;
			}
			set
			{
				if ((this._LoweredUserName != value))
				{
					this.OnLoweredUserNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredUserName = value;
					this.SendPropertyChanged("LoweredUserName");
					this.OnLoweredUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this.OnMobileAliasChanging(value);
					this.SendPropertyChanging();
					this._MobileAlias = value;
					this.SendPropertyChanged("MobileAlias");
					this.OnMobileAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_Membership", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Membership aspnet_Membership
		{
			get
			{
				return this._aspnet_Membership.Entity;
			}
			set
			{
				aspnet_Membership previousValue = this._aspnet_Membership.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Membership.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Membership.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Membership");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_PersonalizationPerUser", Storage="_aspnet_PersonalizationPerUsers", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
		{
			get
			{
				return this._aspnet_PersonalizationPerUsers;
			}
			set
			{
				this._aspnet_PersonalizationPerUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_Profile", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Profile aspnet_Profile
		{
			get
			{
				return this._aspnet_Profile.Entity;
			}
			set
			{
				aspnet_Profile previousValue = this._aspnet_Profile.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Profile.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Profile.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Profile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_Advertiser", Storage="_Advertiser", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<Advertiser> Advertiser
		{
			get
			{
				return this._Advertiser;
			}
			set
			{
				this._Advertiser.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Users.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Users.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
		
		private void attach_Advertiser(Advertiser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_Advertiser(Advertiser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_UsersInRoles")]
	public partial class aspnet_UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Guid _RoleId;
		
		private EntityRef<aspnet_Role> _aspnet_Role;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
		
		public aspnet_UsersInRole()
		{
			this._aspnet_Role = default(EntityRef<aspnet_Role>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._aspnet_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public aspnet_Role aspnet_Role
		{
			get
			{
				return this._aspnet_Role.Entity;
			}
			set
			{
				aspnet_Role previousValue = this._aspnet_Role.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Role.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_Role.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_WebEvent_Events")]
	public partial class aspnet_WebEvent_Event : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EventId;
		
		private System.DateTime _EventTimeUtc;
		
		private System.DateTime _EventTime;
		
		private string _EventType;
		
		private decimal _EventSequence;
		
		private decimal _EventOccurrence;
		
		private int _EventCode;
		
		private int _EventDetailCode;
		
		private string _Message;
		
		private string _ApplicationPath;
		
		private string _ApplicationVirtualPath;
		
		private string _MachineName;
		
		private string _RequestUrl;
		
		private string _ExceptionType;
		
		private string _Details;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIdChanging(string value);
    partial void OnEventIdChanged();
    partial void OnEventTimeUtcChanging(System.DateTime value);
    partial void OnEventTimeUtcChanged();
    partial void OnEventTimeChanging(System.DateTime value);
    partial void OnEventTimeChanged();
    partial void OnEventTypeChanging(string value);
    partial void OnEventTypeChanged();
    partial void OnEventSequenceChanging(decimal value);
    partial void OnEventSequenceChanged();
    partial void OnEventOccurrenceChanging(decimal value);
    partial void OnEventOccurrenceChanged();
    partial void OnEventCodeChanging(int value);
    partial void OnEventCodeChanged();
    partial void OnEventDetailCodeChanging(int value);
    partial void OnEventDetailCodeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnApplicationPathChanging(string value);
    partial void OnApplicationPathChanged();
    partial void OnApplicationVirtualPathChanging(string value);
    partial void OnApplicationVirtualPathChanged();
    partial void OnMachineNameChanging(string value);
    partial void OnMachineNameChanged();
    partial void OnRequestUrlChanging(string value);
    partial void OnRequestUrlChanged();
    partial void OnExceptionTypeChanging(string value);
    partial void OnExceptionTypeChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    #endregion
		
		public aspnet_WebEvent_Event()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventId", DbType="Char(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EventId
		{
			get
			{
				return this._EventId;
			}
			set
			{
				if ((this._EventId != value))
				{
					this.OnEventIdChanging(value);
					this.SendPropertyChanging();
					this._EventId = value;
					this.SendPropertyChanged("EventId");
					this.OnEventIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTimeUtc", DbType="DateTime NOT NULL")]
		public System.DateTime EventTimeUtc
		{
			get
			{
				return this._EventTimeUtc;
			}
			set
			{
				if ((this._EventTimeUtc != value))
				{
					this.OnEventTimeUtcChanging(value);
					this.SendPropertyChanging();
					this._EventTimeUtc = value;
					this.SendPropertyChanged("EventTimeUtc");
					this.OnEventTimeUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTime", DbType="DateTime NOT NULL")]
		public System.DateTime EventTime
		{
			get
			{
				return this._EventTime;
			}
			set
			{
				if ((this._EventTime != value))
				{
					this.OnEventTimeChanging(value);
					this.SendPropertyChanging();
					this._EventTime = value;
					this.SendPropertyChanged("EventTime");
					this.OnEventTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventType", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string EventType
		{
			get
			{
				return this._EventType;
			}
			set
			{
				if ((this._EventType != value))
				{
					this.OnEventTypeChanging(value);
					this.SendPropertyChanging();
					this._EventType = value;
					this.SendPropertyChanged("EventType");
					this.OnEventTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventSequence", DbType="Decimal(19,0) NOT NULL")]
		public decimal EventSequence
		{
			get
			{
				return this._EventSequence;
			}
			set
			{
				if ((this._EventSequence != value))
				{
					this.OnEventSequenceChanging(value);
					this.SendPropertyChanging();
					this._EventSequence = value;
					this.SendPropertyChanged("EventSequence");
					this.OnEventSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventOccurrence", DbType="Decimal(19,0) NOT NULL")]
		public decimal EventOccurrence
		{
			get
			{
				return this._EventOccurrence;
			}
			set
			{
				if ((this._EventOccurrence != value))
				{
					this.OnEventOccurrenceChanging(value);
					this.SendPropertyChanging();
					this._EventOccurrence = value;
					this.SendPropertyChanged("EventOccurrence");
					this.OnEventOccurrenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventCode", DbType="Int NOT NULL")]
		public int EventCode
		{
			get
			{
				return this._EventCode;
			}
			set
			{
				if ((this._EventCode != value))
				{
					this.OnEventCodeChanging(value);
					this.SendPropertyChanging();
					this._EventCode = value;
					this.SendPropertyChanged("EventCode");
					this.OnEventCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDetailCode", DbType="Int NOT NULL")]
		public int EventDetailCode
		{
			get
			{
				return this._EventDetailCode;
			}
			set
			{
				if ((this._EventDetailCode != value))
				{
					this.OnEventDetailCodeChanging(value);
					this.SendPropertyChanging();
					this._EventDetailCode = value;
					this.SendPropertyChanged("EventDetailCode");
					this.OnEventDetailCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(1024)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationPath", DbType="NVarChar(256)")]
		public string ApplicationPath
		{
			get
			{
				return this._ApplicationPath;
			}
			set
			{
				if ((this._ApplicationPath != value))
				{
					this.OnApplicationPathChanging(value);
					this.SendPropertyChanging();
					this._ApplicationPath = value;
					this.SendPropertyChanged("ApplicationPath");
					this.OnApplicationPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationVirtualPath", DbType="NVarChar(256)")]
		public string ApplicationVirtualPath
		{
			get
			{
				return this._ApplicationVirtualPath;
			}
			set
			{
				if ((this._ApplicationVirtualPath != value))
				{
					this.OnApplicationVirtualPathChanging(value);
					this.SendPropertyChanging();
					this._ApplicationVirtualPath = value;
					this.SendPropertyChanged("ApplicationVirtualPath");
					this.OnApplicationVirtualPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string MachineName
		{
			get
			{
				return this._MachineName;
			}
			set
			{
				if ((this._MachineName != value))
				{
					this.OnMachineNameChanging(value);
					this.SendPropertyChanging();
					this._MachineName = value;
					this.SendPropertyChanged("MachineName");
					this.OnMachineNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestUrl", DbType="NVarChar(1024)")]
		public string RequestUrl
		{
			get
			{
				return this._RequestUrl;
			}
			set
			{
				if ((this._RequestUrl != value))
				{
					this.OnRequestUrlChanging(value);
					this.SendPropertyChanging();
					this._RequestUrl = value;
					this.SendPropertyChanged("RequestUrl");
					this.OnRequestUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionType", DbType="NVarChar(256)")]
		public string ExceptionType
		{
			get
			{
				return this._ExceptionType;
			}
			set
			{
				if ((this._ExceptionType != value))
				{
					this.OnExceptionTypeChanging(value);
					this.SendPropertyChanging();
					this._ExceptionType = value;
					this.SendPropertyChanged("ExceptionType");
					this.OnExceptionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Banner")]
	public partial class Banner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BannerId;
		
		private string _Picture;
		
		private string _Link;
		
		private int _Priority;
		
		private bool _Deleted;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBannerIdChanging(int value);
    partial void OnBannerIdChanged();
    partial void OnPictureChanging(string value);
    partial void OnPictureChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    partial void OnPriorityChanging(int value);
    partial void OnPriorityChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public Banner()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BannerId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BannerId
		{
			get
			{
				return this._BannerId;
			}
			set
			{
				if ((this._BannerId != value))
				{
					this.OnBannerIdChanging(value);
					this.SendPropertyChanging();
					this._BannerId = value;
					this.SendPropertyChanged("BannerId");
					this.OnBannerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="VarChar(512)")]
		public string Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="VarChar(512)")]
		public string Link
		{
			get
			{
				return this._Link;
			}
			set
			{
				if ((this._Link != value))
				{
					this.OnLinkChanging(value);
					this.SendPropertyChanging();
					this._Link = value;
					this.SendPropertyChanged("Link");
					this.OnLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int NOT NULL")]
		public int Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Category")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CategoryId;
		
		private string _Name;
		
		private string _Letter;
		
		private bool _Featured;
		
		private int _Weight;
		
		private bool _Deleted;
		
		private EntitySet<AdvertiserCategory> _AdvertiserCategories;
		
		private EntitySet<CatPublicity> _CatPublicities;
		
		private EntitySet<CouponCategory> _CouponCategories;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLetterChanging(string value);
    partial void OnLetterChanged();
    partial void OnFeaturedChanging(bool value);
    partial void OnFeaturedChanged();
    partial void OnWeightChanging(int value);
    partial void OnWeightChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public Category()
		{
			this._AdvertiserCategories = new EntitySet<AdvertiserCategory>(new Action<AdvertiserCategory>(this.attach_AdvertiserCategories), new Action<AdvertiserCategory>(this.detach_AdvertiserCategories));
			this._CatPublicities = new EntitySet<CatPublicity>(new Action<CatPublicity>(this.attach_CatPublicities), new Action<CatPublicity>(this.detach_CatPublicities));
			this._CouponCategories = new EntitySet<CouponCategory>(new Action<CouponCategory>(this.attach_CouponCategories), new Action<CouponCategory>(this.detach_CouponCategories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Letter", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Letter
		{
			get
			{
				return this._Letter;
			}
			set
			{
				if ((this._Letter != value))
				{
					this.OnLetterChanging(value);
					this.SendPropertyChanging();
					this._Letter = value;
					this.SendPropertyChanged("Letter");
					this.OnLetterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Featured", DbType="Bit NOT NULL")]
		public bool Featured
		{
			get
			{
				return this._Featured;
			}
			set
			{
				if ((this._Featured != value))
				{
					this.OnFeaturedChanging(value);
					this.SendPropertyChanging();
					this._Featured = value;
					this.SendPropertyChanged("Featured");
					this.OnFeaturedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Int NOT NULL")]
		public int Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_AdvertiserCategory", Storage="_AdvertiserCategories", ThisKey="CategoryId", OtherKey="CategoryId")]
		public EntitySet<AdvertiserCategory> AdvertiserCategories
		{
			get
			{
				return this._AdvertiserCategories;
			}
			set
			{
				this._AdvertiserCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_CatPublicity", Storage="_CatPublicities", ThisKey="CategoryId", OtherKey="CategoryId")]
		public EntitySet<CatPublicity> CatPublicities
		{
			get
			{
				return this._CatPublicities;
			}
			set
			{
				this._CatPublicities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_CouponCategory", Storage="_CouponCategories", ThisKey="CategoryId", OtherKey="CategoryId")]
		public EntitySet<CouponCategory> CouponCategories
		{
			get
			{
				return this._CouponCategories;
			}
			set
			{
				this._CouponCategories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdvertiserCategories(AdvertiserCategory entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_AdvertiserCategories(AdvertiserCategory entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
		
		private void attach_CatPublicities(CatPublicity entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_CatPublicities(CatPublicity entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
		
		private void attach_CouponCategories(CouponCategory entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_CouponCategories(CouponCategory entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CatPublicity")]
	public partial class CatPublicity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CatPublicityId;
		
		private int _CategoryId;
		
		private string _Name;
		
		private string _Description;
		
		private string _PublicityFile;
		
		private bool _Available;
		
		private System.DateTime _FromDate;
		
		private System.Nullable<System.DateTime> _ToDate;
		
		private bool _Deleted;
		
		private EntityRef<Category> _Category;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCatPublicityIdChanging(int value);
    partial void OnCatPublicityIdChanged();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPublicityFileChanging(string value);
    partial void OnPublicityFileChanged();
    partial void OnAvailableChanging(bool value);
    partial void OnAvailableChanged();
    partial void OnFromDateChanging(System.DateTime value);
    partial void OnFromDateChanged();
    partial void OnToDateChanging(System.Nullable<System.DateTime> value);
    partial void OnToDateChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public CatPublicity()
		{
			this._Category = default(EntityRef<Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatPublicityId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CatPublicityId
		{
			get
			{
				return this._CatPublicityId;
			}
			set
			{
				if ((this._CatPublicityId != value))
				{
					this.OnCatPublicityIdChanging(value);
					this.SendPropertyChanging();
					this._CatPublicityId = value;
					this.SendPropertyChanged("CatPublicityId");
					this.OnCatPublicityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int NOT NULL")]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicityFile", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string PublicityFile
		{
			get
			{
				return this._PublicityFile;
			}
			set
			{
				if ((this._PublicityFile != value))
				{
					this.OnPublicityFileChanging(value);
					this.SendPropertyChanging();
					this._PublicityFile = value;
					this.SendPropertyChanged("PublicityFile");
					this.OnPublicityFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Available", DbType="Bit NOT NULL")]
		public bool Available
		{
			get
			{
				return this._Available;
			}
			set
			{
				if ((this._Available != value))
				{
					this.OnAvailableChanging(value);
					this.SendPropertyChanging();
					this._Available = value;
					this.SendPropertyChanged("Available");
					this.OnAvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDate", DbType="DateTime NOT NULL")]
		public System.DateTime FromDate
		{
			get
			{
				return this._FromDate;
			}
			set
			{
				if ((this._FromDate != value))
				{
					this.OnFromDateChanging(value);
					this.SendPropertyChanging();
					this._FromDate = value;
					this.SendPropertyChanged("FromDate");
					this.OnFromDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ToDate
		{
			get
			{
				return this._ToDate;
			}
			set
			{
				if ((this._ToDate != value))
				{
					this.OnToDateChanging(value);
					this.SendPropertyChanging();
					this._ToDate = value;
					this.SendPropertyChanged("ToDate");
					this.OnToDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_CatPublicity", Storage="_Category", ThisKey="CategoryId", OtherKey="CategoryId", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.CatPublicities.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.CatPublicities.Add(this);
						this._CategoryId = value.CategoryId;
					}
					else
					{
						this._CategoryId = default(int);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contract")]
	public partial class Contract : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContractId;
		
		private int _AdvertiserId;
		
		private System.DateTime _ContractDate;
		
		private int _Months;
		
		private System.DateTime _EndDate;
		
		private int _PersonalId;
		
		private System.DateTime _CreationDate;
		
		private bool _IsPaid;
		
		private System.Nullable<int> _InvoiceId;
		
		private string _PayPalTransactionId;
		
		private bool _IsActive;
		
		private System.Nullable<decimal> _PaymentAmount;
		
		private bool _Deleted;
		
		private string _UsedReference;
		
		private bool _WebSite;
		
		private bool _iOs;
		
		private bool _Android;
		
		private bool _Featured;
		
		private System.Nullable<System.DateTime> _PromiseDate;
		
		private string _Folio;
		
		private System.Nullable<int> _InvoiceCreator;
		
		private System.Nullable<System.DateTime> _InvoiceCreation;
		
		private System.Nullable<int> _PaymentUser;
		
		private System.Nullable<System.DateTime> _PaymentDate;
		
		private EntitySet<AccountDetail> _AccountDetails;
		
		private EntityRef<Advertiser> _Advertiser;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContractIdChanging(int value);
    partial void OnContractIdChanged();
    partial void OnAdvertiserIdChanging(int value);
    partial void OnAdvertiserIdChanged();
    partial void OnContractDateChanging(System.DateTime value);
    partial void OnContractDateChanged();
    partial void OnMonthsChanging(int value);
    partial void OnMonthsChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnPersonalIdChanging(int value);
    partial void OnPersonalIdChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    partial void OnIsPaidChanging(bool value);
    partial void OnIsPaidChanged();
    partial void OnInvoiceIdChanging(System.Nullable<int> value);
    partial void OnInvoiceIdChanged();
    partial void OnPayPalTransactionIdChanging(string value);
    partial void OnPayPalTransactionIdChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnPaymentAmountChanging(System.Nullable<decimal> value);
    partial void OnPaymentAmountChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnUsedReferenceChanging(string value);
    partial void OnUsedReferenceChanged();
    partial void OnWebSiteChanging(bool value);
    partial void OnWebSiteChanged();
    partial void OniOsChanging(bool value);
    partial void OniOsChanged();
    partial void OnAndroidChanging(bool value);
    partial void OnAndroidChanged();
    partial void OnFeaturedChanging(bool value);
    partial void OnFeaturedChanged();
    partial void OnPromiseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPromiseDateChanged();
    partial void OnFolioChanging(string value);
    partial void OnFolioChanged();
    partial void OnInvoiceCreatorChanging(System.Nullable<int> value);
    partial void OnInvoiceCreatorChanged();
    partial void OnInvoiceCreationChanging(System.Nullable<System.DateTime> value);
    partial void OnInvoiceCreationChanged();
    partial void OnPaymentUserChanging(System.Nullable<int> value);
    partial void OnPaymentUserChanged();
    partial void OnPaymentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPaymentDateChanged();
    #endregion
		
		public Contract()
		{
			this._AccountDetails = new EntitySet<AccountDetail>(new Action<AccountDetail>(this.attach_AccountDetails), new Action<AccountDetail>(this.detach_AccountDetails));
			this._Advertiser = default(EntityRef<Advertiser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContractId
		{
			get
			{
				return this._ContractId;
			}
			set
			{
				if ((this._ContractId != value))
				{
					this.OnContractIdChanging(value);
					this.SendPropertyChanging();
					this._ContractId = value;
					this.SendPropertyChanged("ContractId");
					this.OnContractIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertiserId", DbType="Int NOT NULL")]
		public int AdvertiserId
		{
			get
			{
				return this._AdvertiserId;
			}
			set
			{
				if ((this._AdvertiserId != value))
				{
					if (this._Advertiser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdvertiserIdChanging(value);
					this.SendPropertyChanging();
					this._AdvertiserId = value;
					this.SendPropertyChanged("AdvertiserId");
					this.OnAdvertiserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractDate", DbType="DateTime NOT NULL")]
		public System.DateTime ContractDate
		{
			get
			{
				return this._ContractDate;
			}
			set
			{
				if ((this._ContractDate != value))
				{
					this.OnContractDateChanging(value);
					this.SendPropertyChanging();
					this._ContractDate = value;
					this.SendPropertyChanged("ContractDate");
					this.OnContractDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Months", DbType="Int NOT NULL")]
		public int Months
		{
			get
			{
				return this._Months;
			}
			set
			{
				if ((this._Months != value))
				{
					this.OnMonthsChanging(value);
					this.SendPropertyChanging();
					this._Months = value;
					this.SendPropertyChanged("Months");
					this.OnMonthsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalId", DbType="Int NOT NULL")]
		public int PersonalId
		{
			get
			{
				return this._PersonalId;
			}
			set
			{
				if ((this._PersonalId != value))
				{
					this.OnPersonalIdChanging(value);
					this.SendPropertyChanging();
					this._PersonalId = value;
					this.SendPropertyChanged("PersonalId");
					this.OnPersonalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPaid", DbType="Bit NOT NULL")]
		public bool IsPaid
		{
			get
			{
				return this._IsPaid;
			}
			set
			{
				if ((this._IsPaid != value))
				{
					this.OnIsPaidChanging(value);
					this.SendPropertyChanging();
					this._IsPaid = value;
					this.SendPropertyChanged("IsPaid");
					this.OnIsPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceId", DbType="Int")]
		public System.Nullable<int> InvoiceId
		{
			get
			{
				return this._InvoiceId;
			}
			set
			{
				if ((this._InvoiceId != value))
				{
					this.OnInvoiceIdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceId = value;
					this.SendPropertyChanged("InvoiceId");
					this.OnInvoiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayPalTransactionId", DbType="VarChar(100)")]
		public string PayPalTransactionId
		{
			get
			{
				return this._PayPalTransactionId;
			}
			set
			{
				if ((this._PayPalTransactionId != value))
				{
					this.OnPayPalTransactionIdChanging(value);
					this.SendPropertyChanging();
					this._PayPalTransactionId = value;
					this.SendPropertyChanged("PayPalTransactionId");
					this.OnPayPalTransactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentAmount", DbType="Decimal(18,8)")]
		public System.Nullable<decimal> PaymentAmount
		{
			get
			{
				return this._PaymentAmount;
			}
			set
			{
				if ((this._PaymentAmount != value))
				{
					this.OnPaymentAmountChanging(value);
					this.SendPropertyChanging();
					this._PaymentAmount = value;
					this.SendPropertyChanged("PaymentAmount");
					this.OnPaymentAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsedReference", DbType="VarChar(100)")]
		public string UsedReference
		{
			get
			{
				return this._UsedReference;
			}
			set
			{
				if ((this._UsedReference != value))
				{
					this.OnUsedReferenceChanging(value);
					this.SendPropertyChanging();
					this._UsedReference = value;
					this.SendPropertyChanged("UsedReference");
					this.OnUsedReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebSite", DbType="Bit NOT NULL")]
		public bool WebSite
		{
			get
			{
				return this._WebSite;
			}
			set
			{
				if ((this._WebSite != value))
				{
					this.OnWebSiteChanging(value);
					this.SendPropertyChanging();
					this._WebSite = value;
					this.SendPropertyChanged("WebSite");
					this.OnWebSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iOs", DbType="Bit NOT NULL")]
		public bool iOs
		{
			get
			{
				return this._iOs;
			}
			set
			{
				if ((this._iOs != value))
				{
					this.OniOsChanging(value);
					this.SendPropertyChanging();
					this._iOs = value;
					this.SendPropertyChanged("iOs");
					this.OniOsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Android", DbType="Bit NOT NULL")]
		public bool Android
		{
			get
			{
				return this._Android;
			}
			set
			{
				if ((this._Android != value))
				{
					this.OnAndroidChanging(value);
					this.SendPropertyChanging();
					this._Android = value;
					this.SendPropertyChanged("Android");
					this.OnAndroidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Featured", DbType="Bit NOT NULL")]
		public bool Featured
		{
			get
			{
				return this._Featured;
			}
			set
			{
				if ((this._Featured != value))
				{
					this.OnFeaturedChanging(value);
					this.SendPropertyChanging();
					this._Featured = value;
					this.SendPropertyChanged("Featured");
					this.OnFeaturedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromiseDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PromiseDate
		{
			get
			{
				return this._PromiseDate;
			}
			set
			{
				if ((this._PromiseDate != value))
				{
					this.OnPromiseDateChanging(value);
					this.SendPropertyChanging();
					this._PromiseDate = value;
					this.SendPropertyChanged("PromiseDate");
					this.OnPromiseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Folio", DbType="VarChar(10)")]
		public string Folio
		{
			get
			{
				return this._Folio;
			}
			set
			{
				if ((this._Folio != value))
				{
					this.OnFolioChanging(value);
					this.SendPropertyChanging();
					this._Folio = value;
					this.SendPropertyChanged("Folio");
					this.OnFolioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceCreator", DbType="Int")]
		public System.Nullable<int> InvoiceCreator
		{
			get
			{
				return this._InvoiceCreator;
			}
			set
			{
				if ((this._InvoiceCreator != value))
				{
					this.OnInvoiceCreatorChanging(value);
					this.SendPropertyChanging();
					this._InvoiceCreator = value;
					this.SendPropertyChanged("InvoiceCreator");
					this.OnInvoiceCreatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceCreation", DbType="DateTime")]
		public System.Nullable<System.DateTime> InvoiceCreation
		{
			get
			{
				return this._InvoiceCreation;
			}
			set
			{
				if ((this._InvoiceCreation != value))
				{
					this.OnInvoiceCreationChanging(value);
					this.SendPropertyChanging();
					this._InvoiceCreation = value;
					this.SendPropertyChanged("InvoiceCreation");
					this.OnInvoiceCreationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentUser", DbType="Int")]
		public System.Nullable<int> PaymentUser
		{
			get
			{
				return this._PaymentUser;
			}
			set
			{
				if ((this._PaymentUser != value))
				{
					this.OnPaymentUserChanging(value);
					this.SendPropertyChanging();
					this._PaymentUser = value;
					this.SendPropertyChanged("PaymentUser");
					this.OnPaymentUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this.OnPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDate = value;
					this.SendPropertyChanged("PaymentDate");
					this.OnPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contract_AccountDetail", Storage="_AccountDetails", ThisKey="ContractId", OtherKey="ContractId")]
		public EntitySet<AccountDetail> AccountDetails
		{
			get
			{
				return this._AccountDetails;
			}
			set
			{
				this._AccountDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Advertiser_Contract", Storage="_Advertiser", ThisKey="AdvertiserId", OtherKey="AdvertiserId", IsForeignKey=true)]
		public Advertiser Advertiser
		{
			get
			{
				return this._Advertiser.Entity;
			}
			set
			{
				Advertiser previousValue = this._Advertiser.Entity;
				if (((previousValue != value) 
							|| (this._Advertiser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Advertiser.Entity = null;
						previousValue.Contract.Remove(this);
					}
					this._Advertiser.Entity = value;
					if ((value != null))
					{
						value.Contract.Add(this);
						this._AdvertiserId = value.AdvertiserId;
					}
					else
					{
						this._AdvertiserId = default(int);
					}
					this.SendPropertyChanged("Advertiser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AccountDetails(AccountDetail entity)
		{
			this.SendPropertyChanging();
			entity.Contract = this;
		}
		
		private void detach_AccountDetails(AccountDetail entity)
		{
			this.SendPropertyChanging();
			entity.Contract = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CouponCategory")]
	public partial class CouponCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CouponCategoryId;
		
		private int _CouponId;
		
		private int _CategoryId;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedOn;
		
		private int _ModifiedBy;
		
		private System.DateTime _ModifiedOn;
		
		private bool _Deleted;
		
		private EntityRef<Category> _Category;
		
		private EntityRef<Coupon> _Coupon;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCouponCategoryIdChanging(int value);
    partial void OnCouponCategoryIdChanged();
    partial void OnCouponIdChanging(int value);
    partial void OnCouponIdChanged();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnModifiedByChanging(int value);
    partial void OnModifiedByChanged();
    partial void OnModifiedOnChanging(System.DateTime value);
    partial void OnModifiedOnChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public CouponCategory()
		{
			this._Category = default(EntityRef<Category>);
			this._Coupon = default(EntityRef<Coupon>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CouponCategoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CouponCategoryId
		{
			get
			{
				return this._CouponCategoryId;
			}
			set
			{
				if ((this._CouponCategoryId != value))
				{
					this.OnCouponCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CouponCategoryId = value;
					this.SendPropertyChanged("CouponCategoryId");
					this.OnCouponCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CouponId", DbType="Int NOT NULL")]
		public int CouponId
		{
			get
			{
				return this._CouponId;
			}
			set
			{
				if ((this._CouponId != value))
				{
					if (this._Coupon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCouponIdChanging(value);
					this.SendPropertyChanging();
					this._CouponId = value;
					this.SendPropertyChanged("CouponId");
					this.OnCouponIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int NOT NULL")]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int NOT NULL")]
		public int ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_CouponCategory", Storage="_Category", ThisKey="CategoryId", OtherKey="CategoryId", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.CouponCategories.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.CouponCategories.Add(this);
						this._CategoryId = value.CategoryId;
					}
					else
					{
						this._CategoryId = default(int);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Coupon_CouponCategory", Storage="_Coupon", ThisKey="CouponId", OtherKey="CouponId", IsForeignKey=true)]
		public Coupon Coupon
		{
			get
			{
				return this._Coupon.Entity;
			}
			set
			{
				Coupon previousValue = this._Coupon.Entity;
				if (((previousValue != value) 
							|| (this._Coupon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Coupon.Entity = null;
						previousValue.CouponCategory.Remove(this);
					}
					this._Coupon.Entity = value;
					if ((value != null))
					{
						value.CouponCategory.Add(this);
						this._CouponId = value.CouponId;
					}
					else
					{
						this._CouponId = default(int);
					}
					this.SendPropertyChanged("Coupon");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CouponSet")]
	public partial class CouponSet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CouponSetId;
		
		private int _FranchiseeId;
		
		private int _AdvertiserId;
		
		private string _Name;
		
		private string _Description;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedOn;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private bool _Deleted;
		
		private EntitySet<Coupon> _Coupon;
		
		private EntityRef<Franchisee> _Franchisee;
		
		private EntityRef<Personal> _Personal;
		
		private EntityRef<Personal> _Personal1;
		
		private EntityRef<Advertiser> _Advertiser;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCouponSetIdChanging(int value);
    partial void OnCouponSetIdChanged();
    partial void OnFranchiseeIdChanging(int value);
    partial void OnFranchiseeIdChanged();
    partial void OnAdvertiserIdChanging(int value);
    partial void OnAdvertiserIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public CouponSet()
		{
			this._Coupon = new EntitySet<Coupon>(new Action<Coupon>(this.attach_Coupon), new Action<Coupon>(this.detach_Coupon));
			this._Franchisee = default(EntityRef<Franchisee>);
			this._Personal = default(EntityRef<Personal>);
			this._Personal1 = default(EntityRef<Personal>);
			this._Advertiser = default(EntityRef<Advertiser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CouponSetId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CouponSetId
		{
			get
			{
				return this._CouponSetId;
			}
			set
			{
				if ((this._CouponSetId != value))
				{
					this.OnCouponSetIdChanging(value);
					this.SendPropertyChanging();
					this._CouponSetId = value;
					this.SendPropertyChanged("CouponSetId");
					this.OnCouponSetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FranchiseeId", DbType="Int NOT NULL")]
		public int FranchiseeId
		{
			get
			{
				return this._FranchiseeId;
			}
			set
			{
				if ((this._FranchiseeId != value))
				{
					if (this._Franchisee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFranchiseeIdChanging(value);
					this.SendPropertyChanging();
					this._FranchiseeId = value;
					this.SendPropertyChanged("FranchiseeId");
					this.OnFranchiseeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertiserId", DbType="Int NOT NULL")]
		public int AdvertiserId
		{
			get
			{
				return this._AdvertiserId;
			}
			set
			{
				if ((this._AdvertiserId != value))
				{
					if (this._Advertiser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdvertiserIdChanging(value);
					this.SendPropertyChanging();
					this._AdvertiserId = value;
					this.SendPropertyChanged("AdvertiserId");
					this.OnAdvertiserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._Personal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					if (this._Personal1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CouponSet_Coupon", Storage="_Coupon", ThisKey="CouponSetId", OtherKey="CouponSetId")]
		public EntitySet<Coupon> Coupon
		{
			get
			{
				return this._Coupon;
			}
			set
			{
				this._Coupon.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Franchisee_CouponSet", Storage="_Franchisee", ThisKey="FranchiseeId", OtherKey="FranchiseeId", IsForeignKey=true)]
		public Franchisee Franchisee
		{
			get
			{
				return this._Franchisee.Entity;
			}
			set
			{
				Franchisee previousValue = this._Franchisee.Entity;
				if (((previousValue != value) 
							|| (this._Franchisee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Franchisee.Entity = null;
						previousValue.CouponSets.Remove(this);
					}
					this._Franchisee.Entity = value;
					if ((value != null))
					{
						value.CouponSets.Add(this);
						this._FranchiseeId = value.FranchiseeId;
					}
					else
					{
						this._FranchiseeId = default(int);
					}
					this.SendPropertyChanged("Franchisee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personal_CouponSet", Storage="_Personal", ThisKey="CreatedBy", OtherKey="PersonalId", IsForeignKey=true)]
		public Personal Personal
		{
			get
			{
				return this._Personal.Entity;
			}
			set
			{
				Personal previousValue = this._Personal.Entity;
				if (((previousValue != value) 
							|| (this._Personal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personal.Entity = null;
						previousValue.CouponSets.Remove(this);
					}
					this._Personal.Entity = value;
					if ((value != null))
					{
						value.CouponSets.Add(this);
						this._CreatedBy = value.PersonalId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("Personal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personal_CouponSet1", Storage="_Personal1", ThisKey="ModifiedBy", OtherKey="PersonalId", IsForeignKey=true)]
		public Personal Personal1
		{
			get
			{
				return this._Personal1.Entity;
			}
			set
			{
				Personal previousValue = this._Personal1.Entity;
				if (((previousValue != value) 
							|| (this._Personal1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personal1.Entity = null;
						previousValue.CouponSets1.Remove(this);
					}
					this._Personal1.Entity = value;
					if ((value != null))
					{
						value.CouponSets1.Add(this);
						this._ModifiedBy = value.PersonalId;
					}
					else
					{
						this._ModifiedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("Personal1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Advertiser_CouponSet", Storage="_Advertiser", ThisKey="AdvertiserId", OtherKey="AdvertiserId", IsForeignKey=true)]
		public Advertiser Advertiser
		{
			get
			{
				return this._Advertiser.Entity;
			}
			set
			{
				Advertiser previousValue = this._Advertiser.Entity;
				if (((previousValue != value) 
							|| (this._Advertiser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Advertiser.Entity = null;
						previousValue.CouponSet.Remove(this);
					}
					this._Advertiser.Entity = value;
					if ((value != null))
					{
						value.CouponSet.Add(this);
						this._AdvertiserId = value.AdvertiserId;
					}
					else
					{
						this._AdvertiserId = default(int);
					}
					this.SendPropertyChanged("Advertiser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Coupon(Coupon entity)
		{
			this.SendPropertyChanging();
			entity.CouponSet = this;
		}
		
		private void detach_Coupon(Coupon entity)
		{
			this.SendPropertyChanging();
			entity.CouponSet = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CouponStatus")]
	public partial class CouponStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CouponStatusId;
		
		private string _Description;
		
		private bool _Deleted;
		
		private EntitySet<Coupon> _Coupon;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCouponStatusIdChanging(int value);
    partial void OnCouponStatusIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public CouponStatus()
		{
			this._Coupon = new EntitySet<Coupon>(new Action<Coupon>(this.attach_Coupon), new Action<Coupon>(this.detach_Coupon));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CouponStatusId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CouponStatusId
		{
			get
			{
				return this._CouponStatusId;
			}
			set
			{
				if ((this._CouponStatusId != value))
				{
					this.OnCouponStatusIdChanging(value);
					this.SendPropertyChanging();
					this._CouponStatusId = value;
					this.SendPropertyChanged("CouponStatusId");
					this.OnCouponStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CouponStatus_Coupon", Storage="_Coupon", ThisKey="CouponStatusId", OtherKey="CouponStatusId")]
		public EntitySet<Coupon> Coupon
		{
			get
			{
				return this._Coupon;
			}
			set
			{
				this._Coupon.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Coupon(Coupon entity)
		{
			this.SendPropertyChanging();
			entity.CouponStatus = this;
		}
		
		private void detach_Coupon(Coupon entity)
		{
			this.SendPropertyChanging();
			entity.CouponStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Email")]
	public partial class Email : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmailId;
		
		private int _AdvertiserId;
		
		private string _Address;
		
		private bool _Deleted;
		
		private EntityRef<Advertiser> _Advertiser;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmailIdChanging(int value);
    partial void OnEmailIdChanged();
    partial void OnAdvertiserIdChanging(int value);
    partial void OnAdvertiserIdChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public Email()
		{
			this._Advertiser = default(EntityRef<Advertiser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EmailId
		{
			get
			{
				return this._EmailId;
			}
			set
			{
				if ((this._EmailId != value))
				{
					this.OnEmailIdChanging(value);
					this.SendPropertyChanging();
					this._EmailId = value;
					this.SendPropertyChanged("EmailId");
					this.OnEmailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertiserId", DbType="Int NOT NULL")]
		public int AdvertiserId
		{
			get
			{
				return this._AdvertiserId;
			}
			set
			{
				if ((this._AdvertiserId != value))
				{
					if (this._Advertiser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdvertiserIdChanging(value);
					this.SendPropertyChanging();
					this._AdvertiserId = value;
					this.SendPropertyChanged("AdvertiserId");
					this.OnAdvertiserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Advertiser_Email", Storage="_Advertiser", ThisKey="AdvertiserId", OtherKey="AdvertiserId", IsForeignKey=true)]
		public Advertiser Advertiser
		{
			get
			{
				return this._Advertiser.Entity;
			}
			set
			{
				Advertiser previousValue = this._Advertiser.Entity;
				if (((previousValue != value) 
							|| (this._Advertiser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Advertiser.Entity = null;
						previousValue.Email.Remove(this);
					}
					this._Advertiser.Entity = value;
					if ((value != null))
					{
						value.Email.Add(this);
						this._AdvertiserId = value.AdvertiserId;
					}
					else
					{
						this._AdvertiserId = default(int);
					}
					this.SendPropertyChanged("Advertiser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Estado")]
	public partial class Estado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EstadoId;
		
		private string _Name;
		
		private bool _Deleted;
		
		private EntitySet<FiscalDetail> _FiscalDetails;
		
		private EntitySet<Municipio> _Municipios;
		
		private EntitySet<PublicityAdvertiser> _PublicityAdvertiser;
		
		private EntitySet<Advertiser> _Advertiser;
		
		private EntitySet<City> _City;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEstadoIdChanging(int value);
    partial void OnEstadoIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public Estado()
		{
			this._FiscalDetails = new EntitySet<FiscalDetail>(new Action<FiscalDetail>(this.attach_FiscalDetails), new Action<FiscalDetail>(this.detach_FiscalDetails));
			this._Municipios = new EntitySet<Municipio>(new Action<Municipio>(this.attach_Municipios), new Action<Municipio>(this.detach_Municipios));
			this._PublicityAdvertiser = new EntitySet<PublicityAdvertiser>(new Action<PublicityAdvertiser>(this.attach_PublicityAdvertiser), new Action<PublicityAdvertiser>(this.detach_PublicityAdvertiser));
			this._Advertiser = new EntitySet<Advertiser>(new Action<Advertiser>(this.attach_Advertiser), new Action<Advertiser>(this.detach_Advertiser));
			this._City = new EntitySet<City>(new Action<City>(this.attach_City), new Action<City>(this.detach_City));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstadoId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EstadoId
		{
			get
			{
				return this._EstadoId;
			}
			set
			{
				if ((this._EstadoId != value))
				{
					this.OnEstadoIdChanging(value);
					this.SendPropertyChanging();
					this._EstadoId = value;
					this.SendPropertyChanged("EstadoId");
					this.OnEstadoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_FiscalDetail", Storage="_FiscalDetails", ThisKey="EstadoId", OtherKey="EstadoId")]
		public EntitySet<FiscalDetail> FiscalDetails
		{
			get
			{
				return this._FiscalDetails;
			}
			set
			{
				this._FiscalDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_Municipio", Storage="_Municipios", ThisKey="EstadoId", OtherKey="EstadoId")]
		public EntitySet<Municipio> Municipios
		{
			get
			{
				return this._Municipios;
			}
			set
			{
				this._Municipios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_PublicityAdvertiser", Storage="_PublicityAdvertiser", ThisKey="EstadoId", OtherKey="EstadoId")]
		public EntitySet<PublicityAdvertiser> PublicityAdvertiser
		{
			get
			{
				return this._PublicityAdvertiser;
			}
			set
			{
				this._PublicityAdvertiser.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_Advertiser", Storage="_Advertiser", ThisKey="EstadoId", OtherKey="EstadoId")]
		public EntitySet<Advertiser> Advertiser
		{
			get
			{
				return this._Advertiser;
			}
			set
			{
				this._Advertiser.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_City", Storage="_City", ThisKey="EstadoId", OtherKey="EstadoId")]
		public EntitySet<City> City
		{
			get
			{
				return this._City;
			}
			set
			{
				this._City.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FiscalDetails(FiscalDetail entity)
		{
			this.SendPropertyChanging();
			entity.Estado = this;
		}
		
		private void detach_FiscalDetails(FiscalDetail entity)
		{
			this.SendPropertyChanging();
			entity.Estado = null;
		}
		
		private void attach_Municipios(Municipio entity)
		{
			this.SendPropertyChanging();
			entity.Estado = this;
		}
		
		private void detach_Municipios(Municipio entity)
		{
			this.SendPropertyChanging();
			entity.Estado = null;
		}
		
		private void attach_PublicityAdvertiser(PublicityAdvertiser entity)
		{
			this.SendPropertyChanging();
			entity.Estado = this;
		}
		
		private void detach_PublicityAdvertiser(PublicityAdvertiser entity)
		{
			this.SendPropertyChanging();
			entity.Estado = null;
		}
		
		private void attach_Advertiser(Advertiser entity)
		{
			this.SendPropertyChanging();
			entity.Estado = this;
		}
		
		private void detach_Advertiser(Advertiser entity)
		{
			this.SendPropertyChanging();
			entity.Estado = null;
		}
		
		private void attach_City(City entity)
		{
			this.SendPropertyChanging();
			entity.Estado = this;
		}
		
		private void detach_City(City entity)
		{
			this.SendPropertyChanging();
			entity.Estado = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FiscalDetail")]
	public partial class FiscalDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FiscalDetailId;
		
		private int _Id;
		
		private string _Name;
		
		private string _RFC;
		
		private bool _IsMoralPerson;
		
		private int _EstadoId;
		
		private int _MunicipioId;
		
		private string _Poblacion;
		
		private string _Street;
		
		private string _ExteriorNumber;
		
		private string _InteriorNumber;
		
		private string _Colony;
		
		private string _ZipCode;
		
		private string _ContactEmail;
		
		private bool _Deleted;
		
		private EntitySet<Franchisee> _Franchisees;
		
		private EntitySet<Advertiser> _Advertiser;
		
		private EntityRef<Estado> _Estado;
		
		private EntityRef<Municipio> _Municipio;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFiscalDetailIdChanging(int value);
    partial void OnFiscalDetailIdChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnRFCChanging(string value);
    partial void OnRFCChanged();
    partial void OnIsMoralPersonChanging(bool value);
    partial void OnIsMoralPersonChanged();
    partial void OnEstadoIdChanging(int value);
    partial void OnEstadoIdChanged();
    partial void OnMunicipioIdChanging(int value);
    partial void OnMunicipioIdChanged();
    partial void OnPoblacionChanging(string value);
    partial void OnPoblacionChanged();
    partial void OnStreetChanging(string value);
    partial void OnStreetChanged();
    partial void OnExteriorNumberChanging(string value);
    partial void OnExteriorNumberChanged();
    partial void OnInteriorNumberChanging(string value);
    partial void OnInteriorNumberChanged();
    partial void OnColonyChanging(string value);
    partial void OnColonyChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    partial void OnContactEmailChanging(string value);
    partial void OnContactEmailChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public FiscalDetail()
		{
			this._Franchisees = new EntitySet<Franchisee>(new Action<Franchisee>(this.attach_Franchisees), new Action<Franchisee>(this.detach_Franchisees));
			this._Advertiser = new EntitySet<Advertiser>(new Action<Advertiser>(this.attach_Advertiser), new Action<Advertiser>(this.detach_Advertiser));
			this._Estado = default(EntityRef<Estado>);
			this._Municipio = default(EntityRef<Municipio>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FiscalDetailId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FiscalDetailId
		{
			get
			{
				return this._FiscalDetailId;
			}
			set
			{
				if ((this._FiscalDetailId != value))
				{
					this.OnFiscalDetailIdChanging(value);
					this.SendPropertyChanging();
					this._FiscalDetailId = value;
					this.SendPropertyChanged("FiscalDetailId");
					this.OnFiscalDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RFC", DbType="VarChar(13) NOT NULL", CanBeNull=false)]
		public string RFC
		{
			get
			{
				return this._RFC;
			}
			set
			{
				if ((this._RFC != value))
				{
					this.OnRFCChanging(value);
					this.SendPropertyChanging();
					this._RFC = value;
					this.SendPropertyChanged("RFC");
					this.OnRFCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMoralPerson", DbType="Bit NOT NULL")]
		public bool IsMoralPerson
		{
			get
			{
				return this._IsMoralPerson;
			}
			set
			{
				if ((this._IsMoralPerson != value))
				{
					this.OnIsMoralPersonChanging(value);
					this.SendPropertyChanging();
					this._IsMoralPerson = value;
					this.SendPropertyChanged("IsMoralPerson");
					this.OnIsMoralPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstadoId", DbType="Int NOT NULL")]
		public int EstadoId
		{
			get
			{
				return this._EstadoId;
			}
			set
			{
				if ((this._EstadoId != value))
				{
					if (this._Estado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstadoIdChanging(value);
					this.SendPropertyChanging();
					this._EstadoId = value;
					this.SendPropertyChanged("EstadoId");
					this.OnEstadoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MunicipioId", DbType="Int NOT NULL")]
		public int MunicipioId
		{
			get
			{
				return this._MunicipioId;
			}
			set
			{
				if ((this._MunicipioId != value))
				{
					if (this._Municipio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMunicipioIdChanging(value);
					this.SendPropertyChanging();
					this._MunicipioId = value;
					this.SendPropertyChanged("MunicipioId");
					this.OnMunicipioIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Poblacion", DbType="VarChar(50)")]
		public string Poblacion
		{
			get
			{
				return this._Poblacion;
			}
			set
			{
				if ((this._Poblacion != value))
				{
					this.OnPoblacionChanging(value);
					this.SendPropertyChanging();
					this._Poblacion = value;
					this.SendPropertyChanged("Poblacion");
					this.OnPoblacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Street
		{
			get
			{
				return this._Street;
			}
			set
			{
				if ((this._Street != value))
				{
					this.OnStreetChanging(value);
					this.SendPropertyChanging();
					this._Street = value;
					this.SendPropertyChanged("Street");
					this.OnStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExteriorNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ExteriorNumber
		{
			get
			{
				return this._ExteriorNumber;
			}
			set
			{
				if ((this._ExteriorNumber != value))
				{
					this.OnExteriorNumberChanging(value);
					this.SendPropertyChanging();
					this._ExteriorNumber = value;
					this.SendPropertyChanged("ExteriorNumber");
					this.OnExteriorNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InteriorNumber", DbType="VarChar(50)")]
		public string InteriorNumber
		{
			get
			{
				return this._InteriorNumber;
			}
			set
			{
				if ((this._InteriorNumber != value))
				{
					this.OnInteriorNumberChanging(value);
					this.SendPropertyChanging();
					this._InteriorNumber = value;
					this.SendPropertyChanged("InteriorNumber");
					this.OnInteriorNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Colony", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Colony
		{
			get
			{
				return this._Colony;
			}
			set
			{
				if ((this._Colony != value))
				{
					this.OnColonyChanging(value);
					this.SendPropertyChanging();
					this._Colony = value;
					this.SendPropertyChanged("Colony");
					this.OnColonyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactEmail", DbType="VarChar(50)")]
		public string ContactEmail
		{
			get
			{
				return this._ContactEmail;
			}
			set
			{
				if ((this._ContactEmail != value))
				{
					this.OnContactEmailChanging(value);
					this.SendPropertyChanging();
					this._ContactEmail = value;
					this.SendPropertyChanged("ContactEmail");
					this.OnContactEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FiscalDetail_Franchisee", Storage="_Franchisees", ThisKey="FiscalDetailId", OtherKey="FiscalDetailId")]
		public EntitySet<Franchisee> Franchisees
		{
			get
			{
				return this._Franchisees;
			}
			set
			{
				this._Franchisees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FiscalDetail_Advertiser", Storage="_Advertiser", ThisKey="FiscalDetailId", OtherKey="FiscalDetailId")]
		public EntitySet<Advertiser> Advertiser
		{
			get
			{
				return this._Advertiser;
			}
			set
			{
				this._Advertiser.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_FiscalDetail", Storage="_Estado", ThisKey="EstadoId", OtherKey="EstadoId", IsForeignKey=true)]
		public Estado Estado
		{
			get
			{
				return this._Estado.Entity;
			}
			set
			{
				Estado previousValue = this._Estado.Entity;
				if (((previousValue != value) 
							|| (this._Estado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estado.Entity = null;
						previousValue.FiscalDetails.Remove(this);
					}
					this._Estado.Entity = value;
					if ((value != null))
					{
						value.FiscalDetails.Add(this);
						this._EstadoId = value.EstadoId;
					}
					else
					{
						this._EstadoId = default(int);
					}
					this.SendPropertyChanged("Estado");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Municipio_FiscalDetail", Storage="_Municipio", ThisKey="MunicipioId", OtherKey="MunicipioId", IsForeignKey=true)]
		public Municipio Municipio
		{
			get
			{
				return this._Municipio.Entity;
			}
			set
			{
				Municipio previousValue = this._Municipio.Entity;
				if (((previousValue != value) 
							|| (this._Municipio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Municipio.Entity = null;
						previousValue.FiscalDetails.Remove(this);
					}
					this._Municipio.Entity = value;
					if ((value != null))
					{
						value.FiscalDetails.Add(this);
						this._MunicipioId = value.MunicipioId;
					}
					else
					{
						this._MunicipioId = default(int);
					}
					this.SendPropertyChanged("Municipio");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Franchisees(Franchisee entity)
		{
			this.SendPropertyChanging();
			entity.FiscalDetail = this;
		}
		
		private void detach_Franchisees(Franchisee entity)
		{
			this.SendPropertyChanging();
			entity.FiscalDetail = null;
		}
		
		private void attach_Advertiser(Advertiser entity)
		{
			this.SendPropertyChanging();
			entity.FiscalDetail = this;
		}
		
		private void detach_Advertiser(Advertiser entity)
		{
			this.SendPropertyChanging();
			entity.FiscalDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Franchisee")]
	public partial class Franchisee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FranchiseeId;
		
		private System.Nullable<int> _FiscalDetailId;
		
		private string _Name;
		
		private bool _IsPrimary;
		
		private string _Rfc;
		
		private string _GorilaKey;
		
		private string _Address;
		
		private string _Phone;
		
		private string _CellPhone;
		
		private string _Email;
		
		private bool _Deleted;
		
		private int _ShareLevelId;
		
		private int _MunicipioId;
		
		private System.Nullable<int> _ExternalKey;
		
		private string _BankReference;
		
		private string _DV;
		
		private System.Nullable<int> _GorilaOfficeId;
		
		private System.Nullable<int> _GorilaBankId;
		
		private EntitySet<Tag> _Tags;
		
		private EntitySet<AdvertiserCategory> _AdvertiserCategories;
		
		private EntitySet<Announce> _Announces;
		
		private EntitySet<CouponSet> _CouponSets;
		
		private EntitySet<Gallery> _Galleries;
		
		private EntitySet<Office> _Offices;
		
		private EntitySet<Personal> _Personals;
		
		private EntitySet<Phone> _Phones;
		
		private EntitySet<Picture> _Pictures;
		
		private EntitySet<Coupon> _Coupon;
		
		private EntitySet<Advertiser> _Advertiser;
		
		private EntityRef<FiscalDetail> _FiscalDetail;
		
		private EntityRef<Municipio> _Municipio;
		
		private EntityRef<ShareLevel> _ShareLevel;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFranchiseeIdChanging(int value);
    partial void OnFranchiseeIdChanged();
    partial void OnFiscalDetailIdChanging(System.Nullable<int> value);
    partial void OnFiscalDetailIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsPrimaryChanging(bool value);
    partial void OnIsPrimaryChanged();
    partial void OnRfcChanging(string value);
    partial void OnRfcChanged();
    partial void OnGorilaKeyChanging(string value);
    partial void OnGorilaKeyChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnCellPhoneChanging(string value);
    partial void OnCellPhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnShareLevelIdChanging(int value);
    partial void OnShareLevelIdChanged();
    partial void OnMunicipioIdChanging(int value);
    partial void OnMunicipioIdChanged();
    partial void OnExternalKeyChanging(System.Nullable<int> value);
    partial void OnExternalKeyChanged();
    partial void OnBankReferenceChanging(string value);
    partial void OnBankReferenceChanged();
    partial void OnDVChanging(string value);
    partial void OnDVChanged();
    partial void OnGorilaOfficeIdChanging(System.Nullable<int> value);
    partial void OnGorilaOfficeIdChanged();
    partial void OnGorilaBankIdChanging(System.Nullable<int> value);
    partial void OnGorilaBankIdChanged();
    #endregion
		
		public Franchisee()
		{
			this._Tags = new EntitySet<Tag>(new Action<Tag>(this.attach_Tags), new Action<Tag>(this.detach_Tags));
			this._AdvertiserCategories = new EntitySet<AdvertiserCategory>(new Action<AdvertiserCategory>(this.attach_AdvertiserCategories), new Action<AdvertiserCategory>(this.detach_AdvertiserCategories));
			this._Announces = new EntitySet<Announce>(new Action<Announce>(this.attach_Announces), new Action<Announce>(this.detach_Announces));
			this._CouponSets = new EntitySet<CouponSet>(new Action<CouponSet>(this.attach_CouponSets), new Action<CouponSet>(this.detach_CouponSets));
			this._Galleries = new EntitySet<Gallery>(new Action<Gallery>(this.attach_Galleries), new Action<Gallery>(this.detach_Galleries));
			this._Offices = new EntitySet<Office>(new Action<Office>(this.attach_Offices), new Action<Office>(this.detach_Offices));
			this._Personals = new EntitySet<Personal>(new Action<Personal>(this.attach_Personals), new Action<Personal>(this.detach_Personals));
			this._Phones = new EntitySet<Phone>(new Action<Phone>(this.attach_Phones), new Action<Phone>(this.detach_Phones));
			this._Pictures = new EntitySet<Picture>(new Action<Picture>(this.attach_Pictures), new Action<Picture>(this.detach_Pictures));
			this._Coupon = new EntitySet<Coupon>(new Action<Coupon>(this.attach_Coupon), new Action<Coupon>(this.detach_Coupon));
			this._Advertiser = new EntitySet<Advertiser>(new Action<Advertiser>(this.attach_Advertiser), new Action<Advertiser>(this.detach_Advertiser));
			this._FiscalDetail = default(EntityRef<FiscalDetail>);
			this._Municipio = default(EntityRef<Municipio>);
			this._ShareLevel = default(EntityRef<ShareLevel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FranchiseeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FranchiseeId
		{
			get
			{
				return this._FranchiseeId;
			}
			set
			{
				if ((this._FranchiseeId != value))
				{
					this.OnFranchiseeIdChanging(value);
					this.SendPropertyChanging();
					this._FranchiseeId = value;
					this.SendPropertyChanged("FranchiseeId");
					this.OnFranchiseeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FiscalDetailId", DbType="Int")]
		public System.Nullable<int> FiscalDetailId
		{
			get
			{
				return this._FiscalDetailId;
			}
			set
			{
				if ((this._FiscalDetailId != value))
				{
					if (this._FiscalDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFiscalDetailIdChanging(value);
					this.SendPropertyChanging();
					this._FiscalDetailId = value;
					this.SendPropertyChanged("FiscalDetailId");
					this.OnFiscalDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrimary", DbType="Bit NOT NULL")]
		public bool IsPrimary
		{
			get
			{
				return this._IsPrimary;
			}
			set
			{
				if ((this._IsPrimary != value))
				{
					this.OnIsPrimaryChanging(value);
					this.SendPropertyChanging();
					this._IsPrimary = value;
					this.SendPropertyChanged("IsPrimary");
					this.OnIsPrimaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rfc", DbType="VarChar(13)")]
		public string Rfc
		{
			get
			{
				return this._Rfc;
			}
			set
			{
				if ((this._Rfc != value))
				{
					this.OnRfcChanging(value);
					this.SendPropertyChanging();
					this._Rfc = value;
					this.SendPropertyChanged("Rfc");
					this.OnRfcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GorilaKey", DbType="VarChar(100)")]
		public string GorilaKey
		{
			get
			{
				return this._GorilaKey;
			}
			set
			{
				if ((this._GorilaKey != value))
				{
					this.OnGorilaKeyChanging(value);
					this.SendPropertyChanging();
					this._GorilaKey = value;
					this.SendPropertyChanged("GorilaKey");
					this.OnGorilaKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellPhone", DbType="VarChar(50)")]
		public string CellPhone
		{
			get
			{
				return this._CellPhone;
			}
			set
			{
				if ((this._CellPhone != value))
				{
					this.OnCellPhoneChanging(value);
					this.SendPropertyChanging();
					this._CellPhone = value;
					this.SendPropertyChanged("CellPhone");
					this.OnCellPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShareLevelId", DbType="Int NOT NULL")]
		public int ShareLevelId
		{
			get
			{
				return this._ShareLevelId;
			}
			set
			{
				if ((this._ShareLevelId != value))
				{
					if (this._ShareLevel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShareLevelIdChanging(value);
					this.SendPropertyChanging();
					this._ShareLevelId = value;
					this.SendPropertyChanged("ShareLevelId");
					this.OnShareLevelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MunicipioId", DbType="Int NOT NULL")]
		public int MunicipioId
		{
			get
			{
				return this._MunicipioId;
			}
			set
			{
				if ((this._MunicipioId != value))
				{
					if (this._Municipio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMunicipioIdChanging(value);
					this.SendPropertyChanging();
					this._MunicipioId = value;
					this.SendPropertyChanged("MunicipioId");
					this.OnMunicipioIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalKey", DbType="Int")]
		public System.Nullable<int> ExternalKey
		{
			get
			{
				return this._ExternalKey;
			}
			set
			{
				if ((this._ExternalKey != value))
				{
					this.OnExternalKeyChanging(value);
					this.SendPropertyChanging();
					this._ExternalKey = value;
					this.SendPropertyChanged("ExternalKey");
					this.OnExternalKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankReference", DbType="VarChar(50)")]
		public string BankReference
		{
			get
			{
				return this._BankReference;
			}
			set
			{
				if ((this._BankReference != value))
				{
					this.OnBankReferenceChanging(value);
					this.SendPropertyChanging();
					this._BankReference = value;
					this.SendPropertyChanged("BankReference");
					this.OnBankReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DV", DbType="VarChar(5)")]
		public string DV
		{
			get
			{
				return this._DV;
			}
			set
			{
				if ((this._DV != value))
				{
					this.OnDVChanging(value);
					this.SendPropertyChanging();
					this._DV = value;
					this.SendPropertyChanged("DV");
					this.OnDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GorilaOfficeId", DbType="Int")]
		public System.Nullable<int> GorilaOfficeId
		{
			get
			{
				return this._GorilaOfficeId;
			}
			set
			{
				if ((this._GorilaOfficeId != value))
				{
					this.OnGorilaOfficeIdChanging(value);
					this.SendPropertyChanging();
					this._GorilaOfficeId = value;
					this.SendPropertyChanged("GorilaOfficeId");
					this.OnGorilaOfficeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GorilaBankId", DbType="Int")]
		public System.Nullable<int> GorilaBankId
		{
			get
			{
				return this._GorilaBankId;
			}
			set
			{
				if ((this._GorilaBankId != value))
				{
					this.OnGorilaBankIdChanging(value);
					this.SendPropertyChanging();
					this._GorilaBankId = value;
					this.SendPropertyChanged("GorilaBankId");
					this.OnGorilaBankIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Franchisee_Tag", Storage="_Tags", ThisKey="FranchiseeId", OtherKey="FranchiseeId")]
		public EntitySet<Tag> Tags
		{
			get
			{
				return this._Tags;
			}
			set
			{
				this._Tags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Franchisee_AdvertiserCategory", Storage="_AdvertiserCategories", ThisKey="FranchiseeId", OtherKey="FranchiseeId")]
		public EntitySet<AdvertiserCategory> AdvertiserCategories
		{
			get
			{
				return this._AdvertiserCategories;
			}
			set
			{
				this._AdvertiserCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Franchisee_Announce", Storage="_Announces", ThisKey="FranchiseeId", OtherKey="FranchiseeId")]
		public EntitySet<Announce> Announces
		{
			get
			{
				return this._Announces;
			}
			set
			{
				this._Announces.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Franchisee_CouponSet", Storage="_CouponSets", ThisKey="FranchiseeId", OtherKey="FranchiseeId")]
		public EntitySet<CouponSet> CouponSets
		{
			get
			{
				return this._CouponSets;
			}
			set
			{
				this._CouponSets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Franchisee_Gallery", Storage="_Galleries", ThisKey="FranchiseeId", OtherKey="FranchiseeId")]
		public EntitySet<Gallery> Galleries
		{
			get
			{
				return this._Galleries;
			}
			set
			{
				this._Galleries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Franchisee_Office", Storage="_Offices", ThisKey="FranchiseeId", OtherKey="FranchiseeId")]
		public EntitySet<Office> Offices
		{
			get
			{
				return this._Offices;
			}
			set
			{
				this._Offices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Franchisee_Personal", Storage="_Personals", ThisKey="FranchiseeId", OtherKey="FranchiseeId")]
		public EntitySet<Personal> Personals
		{
			get
			{
				return this._Personals;
			}
			set
			{
				this._Personals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Franchisee_Phone", Storage="_Phones", ThisKey="FranchiseeId", OtherKey="FranchiseeId")]
		public EntitySet<Phone> Phones
		{
			get
			{
				return this._Phones;
			}
			set
			{
				this._Phones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Franchisee_Picture", Storage="_Pictures", ThisKey="FranchiseeId", OtherKey="FranchiseeId")]
		public EntitySet<Picture> Pictures
		{
			get
			{
				return this._Pictures;
			}
			set
			{
				this._Pictures.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Franchisee_Coupon", Storage="_Coupon", ThisKey="FranchiseeId", OtherKey="FranchiseeId")]
		public EntitySet<Coupon> Coupon
		{
			get
			{
				return this._Coupon;
			}
			set
			{
				this._Coupon.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Franchisee_Advertiser", Storage="_Advertiser", ThisKey="FranchiseeId", OtherKey="FranchiseeId")]
		public EntitySet<Advertiser> Advertiser
		{
			get
			{
				return this._Advertiser;
			}
			set
			{
				this._Advertiser.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FiscalDetail_Franchisee", Storage="_FiscalDetail", ThisKey="FiscalDetailId", OtherKey="FiscalDetailId", IsForeignKey=true)]
		public FiscalDetail FiscalDetail
		{
			get
			{
				return this._FiscalDetail.Entity;
			}
			set
			{
				FiscalDetail previousValue = this._FiscalDetail.Entity;
				if (((previousValue != value) 
							|| (this._FiscalDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FiscalDetail.Entity = null;
						previousValue.Franchisees.Remove(this);
					}
					this._FiscalDetail.Entity = value;
					if ((value != null))
					{
						value.Franchisees.Add(this);
						this._FiscalDetailId = value.FiscalDetailId;
					}
					else
					{
						this._FiscalDetailId = default(Nullable<int>);
					}
					this.SendPropertyChanged("FiscalDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Municipio_Franchisee", Storage="_Municipio", ThisKey="MunicipioId", OtherKey="MunicipioId", IsForeignKey=true)]
		public Municipio Municipio
		{
			get
			{
				return this._Municipio.Entity;
			}
			set
			{
				Municipio previousValue = this._Municipio.Entity;
				if (((previousValue != value) 
							|| (this._Municipio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Municipio.Entity = null;
						previousValue.Franchisees.Remove(this);
					}
					this._Municipio.Entity = value;
					if ((value != null))
					{
						value.Franchisees.Add(this);
						this._MunicipioId = value.MunicipioId;
					}
					else
					{
						this._MunicipioId = default(int);
					}
					this.SendPropertyChanged("Municipio");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShareLevel_Franchisee", Storage="_ShareLevel", ThisKey="ShareLevelId", OtherKey="ShareLevelId", IsForeignKey=true)]
		public ShareLevel ShareLevel
		{
			get
			{
				return this._ShareLevel.Entity;
			}
			set
			{
				ShareLevel previousValue = this._ShareLevel.Entity;
				if (((previousValue != value) 
							|| (this._ShareLevel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShareLevel.Entity = null;
						previousValue.Franchisees.Remove(this);
					}
					this._ShareLevel.Entity = value;
					if ((value != null))
					{
						value.Franchisees.Add(this);
						this._ShareLevelId = value.ShareLevelId;
					}
					else
					{
						this._ShareLevelId = default(int);
					}
					this.SendPropertyChanged("ShareLevel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tags(Tag entity)
		{
			this.SendPropertyChanging();
			entity.Franchisee = this;
		}
		
		private void detach_Tags(Tag entity)
		{
			this.SendPropertyChanging();
			entity.Franchisee = null;
		}
		
		private void attach_AdvertiserCategories(AdvertiserCategory entity)
		{
			this.SendPropertyChanging();
			entity.Franchisee = this;
		}
		
		private void detach_AdvertiserCategories(AdvertiserCategory entity)
		{
			this.SendPropertyChanging();
			entity.Franchisee = null;
		}
		
		private void attach_Announces(Announce entity)
		{
			this.SendPropertyChanging();
			entity.Franchisee = this;
		}
		
		private void detach_Announces(Announce entity)
		{
			this.SendPropertyChanging();
			entity.Franchisee = null;
		}
		
		private void attach_CouponSets(CouponSet entity)
		{
			this.SendPropertyChanging();
			entity.Franchisee = this;
		}
		
		private void detach_CouponSets(CouponSet entity)
		{
			this.SendPropertyChanging();
			entity.Franchisee = null;
		}
		
		private void attach_Galleries(Gallery entity)
		{
			this.SendPropertyChanging();
			entity.Franchisee = this;
		}
		
		private void detach_Galleries(Gallery entity)
		{
			this.SendPropertyChanging();
			entity.Franchisee = null;
		}
		
		private void attach_Offices(Office entity)
		{
			this.SendPropertyChanging();
			entity.Franchisee = this;
		}
		
		private void detach_Offices(Office entity)
		{
			this.SendPropertyChanging();
			entity.Franchisee = null;
		}
		
		private void attach_Personals(Personal entity)
		{
			this.SendPropertyChanging();
			entity.Franchisee = this;
		}
		
		private void detach_Personals(Personal entity)
		{
			this.SendPropertyChanging();
			entity.Franchisee = null;
		}
		
		private void attach_Phones(Phone entity)
		{
			this.SendPropertyChanging();
			entity.Franchisee = this;
		}
		
		private void detach_Phones(Phone entity)
		{
			this.SendPropertyChanging();
			entity.Franchisee = null;
		}
		
		private void attach_Pictures(Picture entity)
		{
			this.SendPropertyChanging();
			entity.Franchisee = this;
		}
		
		private void detach_Pictures(Picture entity)
		{
			this.SendPropertyChanging();
			entity.Franchisee = null;
		}
		
		private void attach_Coupon(Coupon entity)
		{
			this.SendPropertyChanging();
			entity.Franchisee = this;
		}
		
		private void detach_Coupon(Coupon entity)
		{
			this.SendPropertyChanging();
			entity.Franchisee = null;
		}
		
		private void attach_Advertiser(Advertiser entity)
		{
			this.SendPropertyChanging();
			entity.Franchisee = this;
		}
		
		private void detach_Advertiser(Advertiser entity)
		{
			this.SendPropertyChanging();
			entity.Franchisee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Gallery")]
	public partial class Gallery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GalleryId;
		
		private int _AdvertiserId;
		
		private string _Name;
		
		private bool _Deleted;
		
		private int _FranchiseeId;
		
		private EntitySet<Picture> _Pictures;
		
		private EntityRef<Franchisee> _Franchisee;
		
		private EntityRef<Advertiser> _Advertiser;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGalleryIdChanging(int value);
    partial void OnGalleryIdChanged();
    partial void OnAdvertiserIdChanging(int value);
    partial void OnAdvertiserIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnFranchiseeIdChanging(int value);
    partial void OnFranchiseeIdChanged();
    #endregion
		
		public Gallery()
		{
			this._Pictures = new EntitySet<Picture>(new Action<Picture>(this.attach_Pictures), new Action<Picture>(this.detach_Pictures));
			this._Franchisee = default(EntityRef<Franchisee>);
			this._Advertiser = default(EntityRef<Advertiser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GalleryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GalleryId
		{
			get
			{
				return this._GalleryId;
			}
			set
			{
				if ((this._GalleryId != value))
				{
					this.OnGalleryIdChanging(value);
					this.SendPropertyChanging();
					this._GalleryId = value;
					this.SendPropertyChanged("GalleryId");
					this.OnGalleryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertiserId", DbType="Int NOT NULL")]
		public int AdvertiserId
		{
			get
			{
				return this._AdvertiserId;
			}
			set
			{
				if ((this._AdvertiserId != value))
				{
					if (this._Advertiser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdvertiserIdChanging(value);
					this.SendPropertyChanging();
					this._AdvertiserId = value;
					this.SendPropertyChanged("AdvertiserId");
					this.OnAdvertiserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FranchiseeId", DbType="Int NOT NULL")]
		public int FranchiseeId
		{
			get
			{
				return this._FranchiseeId;
			}
			set
			{
				if ((this._FranchiseeId != value))
				{
					if (this._Franchisee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFranchiseeIdChanging(value);
					this.SendPropertyChanging();
					this._FranchiseeId = value;
					this.SendPropertyChanged("FranchiseeId");
					this.OnFranchiseeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gallery_Picture", Storage="_Pictures", ThisKey="GalleryId", OtherKey="GalleryId")]
		public EntitySet<Picture> Pictures
		{
			get
			{
				return this._Pictures;
			}
			set
			{
				this._Pictures.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Franchisee_Gallery", Storage="_Franchisee", ThisKey="FranchiseeId", OtherKey="FranchiseeId", IsForeignKey=true)]
		public Franchisee Franchisee
		{
			get
			{
				return this._Franchisee.Entity;
			}
			set
			{
				Franchisee previousValue = this._Franchisee.Entity;
				if (((previousValue != value) 
							|| (this._Franchisee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Franchisee.Entity = null;
						previousValue.Galleries.Remove(this);
					}
					this._Franchisee.Entity = value;
					if ((value != null))
					{
						value.Galleries.Add(this);
						this._FranchiseeId = value.FranchiseeId;
					}
					else
					{
						this._FranchiseeId = default(int);
					}
					this.SendPropertyChanged("Franchisee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Advertiser_Gallery", Storage="_Advertiser", ThisKey="AdvertiserId", OtherKey="AdvertiserId", IsForeignKey=true)]
		public Advertiser Advertiser
		{
			get
			{
				return this._Advertiser.Entity;
			}
			set
			{
				Advertiser previousValue = this._Advertiser.Entity;
				if (((previousValue != value) 
							|| (this._Advertiser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Advertiser.Entity = null;
						previousValue.Gallery.Remove(this);
					}
					this._Advertiser.Entity = value;
					if ((value != null))
					{
						value.Gallery.Add(this);
						this._AdvertiserId = value.AdvertiserId;
					}
					else
					{
						this._AdvertiserId = default(int);
					}
					this.SendPropertyChanged("Advertiser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pictures(Picture entity)
		{
			this.SendPropertyChanging();
			entity.Gallery = this;
		}
		
		private void detach_Pictures(Picture entity)
		{
			this.SendPropertyChanging();
			entity.Gallery = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GeneralSetUp")]
	public partial class GeneralSetUp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GeneralSetUpId;
		
		private bool _Deleted;
		
		private string _FrontPageMarkup;
		
		private string _FrontPageMarkupIphone;
		
		private string _FranchiseeMarkup;
		
		private string _AdvertiserMarkup;
		
		private EntitySet<GenPublicity> _GenPublicities;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGeneralSetUpIdChanging(int value);
    partial void OnGeneralSetUpIdChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnFrontPageMarkupChanging(string value);
    partial void OnFrontPageMarkupChanged();
    partial void OnFrontPageMarkupIphoneChanging(string value);
    partial void OnFrontPageMarkupIphoneChanged();
    partial void OnFranchiseeMarkupChanging(string value);
    partial void OnFranchiseeMarkupChanged();
    partial void OnAdvertiserMarkupChanging(string value);
    partial void OnAdvertiserMarkupChanged();
    #endregion
		
		public GeneralSetUp()
		{
			this._GenPublicities = new EntitySet<GenPublicity>(new Action<GenPublicity>(this.attach_GenPublicities), new Action<GenPublicity>(this.detach_GenPublicities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeneralSetUpId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GeneralSetUpId
		{
			get
			{
				return this._GeneralSetUpId;
			}
			set
			{
				if ((this._GeneralSetUpId != value))
				{
					this.OnGeneralSetUpIdChanging(value);
					this.SendPropertyChanging();
					this._GeneralSetUpId = value;
					this.SendPropertyChanged("GeneralSetUpId");
					this.OnGeneralSetUpIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrontPageMarkup", DbType="VarChar(MAX)")]
		public string FrontPageMarkup
		{
			get
			{
				return this._FrontPageMarkup;
			}
			set
			{
				if ((this._FrontPageMarkup != value))
				{
					this.OnFrontPageMarkupChanging(value);
					this.SendPropertyChanging();
					this._FrontPageMarkup = value;
					this.SendPropertyChanged("FrontPageMarkup");
					this.OnFrontPageMarkupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrontPageMarkupIphone", DbType="VarChar(MAX)")]
		public string FrontPageMarkupIphone
		{
			get
			{
				return this._FrontPageMarkupIphone;
			}
			set
			{
				if ((this._FrontPageMarkupIphone != value))
				{
					this.OnFrontPageMarkupIphoneChanging(value);
					this.SendPropertyChanging();
					this._FrontPageMarkupIphone = value;
					this.SendPropertyChanged("FrontPageMarkupIphone");
					this.OnFrontPageMarkupIphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FranchiseeMarkup", DbType="VarChar(MAX)")]
		public string FranchiseeMarkup
		{
			get
			{
				return this._FranchiseeMarkup;
			}
			set
			{
				if ((this._FranchiseeMarkup != value))
				{
					this.OnFranchiseeMarkupChanging(value);
					this.SendPropertyChanging();
					this._FranchiseeMarkup = value;
					this.SendPropertyChanged("FranchiseeMarkup");
					this.OnFranchiseeMarkupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertiserMarkup", DbType="VarChar(MAX)")]
		public string AdvertiserMarkup
		{
			get
			{
				return this._AdvertiserMarkup;
			}
			set
			{
				if ((this._AdvertiserMarkup != value))
				{
					this.OnAdvertiserMarkupChanging(value);
					this.SendPropertyChanging();
					this._AdvertiserMarkup = value;
					this.SendPropertyChanged("AdvertiserMarkup");
					this.OnAdvertiserMarkupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeneralSetUp_GenPublicity", Storage="_GenPublicities", ThisKey="GeneralSetUpId", OtherKey="GeneralSetUpId")]
		public EntitySet<GenPublicity> GenPublicities
		{
			get
			{
				return this._GenPublicities;
			}
			set
			{
				this._GenPublicities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GenPublicities(GenPublicity entity)
		{
			this.SendPropertyChanging();
			entity.GeneralSetUp = this;
		}
		
		private void detach_GenPublicities(GenPublicity entity)
		{
			this.SendPropertyChanging();
			entity.GeneralSetUp = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GenPublicity")]
	public partial class GenPublicity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GenPublicityId;
		
		private int _GeneralSetUpId;
		
		private string _Name;
		
		private string _Description;
		
		private string _PublicityFile;
		
		private bool _Available;
		
		private System.DateTime _FromDate;
		
		private System.Nullable<System.DateTime> _ToDate;
		
		private bool _Deleted;
		
		private EntityRef<GeneralSetUp> _GeneralSetUp;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGenPublicityIdChanging(int value);
    partial void OnGenPublicityIdChanged();
    partial void OnGeneralSetUpIdChanging(int value);
    partial void OnGeneralSetUpIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPublicityFileChanging(string value);
    partial void OnPublicityFileChanged();
    partial void OnAvailableChanging(bool value);
    partial void OnAvailableChanged();
    partial void OnFromDateChanging(System.DateTime value);
    partial void OnFromDateChanged();
    partial void OnToDateChanging(System.Nullable<System.DateTime> value);
    partial void OnToDateChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public GenPublicity()
		{
			this._GeneralSetUp = default(EntityRef<GeneralSetUp>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenPublicityId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GenPublicityId
		{
			get
			{
				return this._GenPublicityId;
			}
			set
			{
				if ((this._GenPublicityId != value))
				{
					this.OnGenPublicityIdChanging(value);
					this.SendPropertyChanging();
					this._GenPublicityId = value;
					this.SendPropertyChanged("GenPublicityId");
					this.OnGenPublicityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeneralSetUpId", DbType="Int NOT NULL")]
		public int GeneralSetUpId
		{
			get
			{
				return this._GeneralSetUpId;
			}
			set
			{
				if ((this._GeneralSetUpId != value))
				{
					if (this._GeneralSetUp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGeneralSetUpIdChanging(value);
					this.SendPropertyChanging();
					this._GeneralSetUpId = value;
					this.SendPropertyChanged("GeneralSetUpId");
					this.OnGeneralSetUpIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicityFile", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string PublicityFile
		{
			get
			{
				return this._PublicityFile;
			}
			set
			{
				if ((this._PublicityFile != value))
				{
					this.OnPublicityFileChanging(value);
					this.SendPropertyChanging();
					this._PublicityFile = value;
					this.SendPropertyChanged("PublicityFile");
					this.OnPublicityFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Available", DbType="Bit NOT NULL")]
		public bool Available
		{
			get
			{
				return this._Available;
			}
			set
			{
				if ((this._Available != value))
				{
					this.OnAvailableChanging(value);
					this.SendPropertyChanging();
					this._Available = value;
					this.SendPropertyChanged("Available");
					this.OnAvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDate", DbType="DateTime NOT NULL")]
		public System.DateTime FromDate
		{
			get
			{
				return this._FromDate;
			}
			set
			{
				if ((this._FromDate != value))
				{
					this.OnFromDateChanging(value);
					this.SendPropertyChanging();
					this._FromDate = value;
					this.SendPropertyChanged("FromDate");
					this.OnFromDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ToDate
		{
			get
			{
				return this._ToDate;
			}
			set
			{
				if ((this._ToDate != value))
				{
					this.OnToDateChanging(value);
					this.SendPropertyChanging();
					this._ToDate = value;
					this.SendPropertyChanged("ToDate");
					this.OnToDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeneralSetUp_GenPublicity", Storage="_GeneralSetUp", ThisKey="GeneralSetUpId", OtherKey="GeneralSetUpId", IsForeignKey=true)]
		public GeneralSetUp GeneralSetUp
		{
			get
			{
				return this._GeneralSetUp.Entity;
			}
			set
			{
				GeneralSetUp previousValue = this._GeneralSetUp.Entity;
				if (((previousValue != value) 
							|| (this._GeneralSetUp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GeneralSetUp.Entity = null;
						previousValue.GenPublicities.Remove(this);
					}
					this._GeneralSetUp.Entity = value;
					if ((value != null))
					{
						value.GenPublicities.Add(this);
						this._GeneralSetUpId = value.GeneralSetUpId;
					}
					else
					{
						this._GeneralSetUpId = default(int);
					}
					this.SendPropertyChanged("GeneralSetUp");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Municipio")]
	public partial class Municipio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MunicipioId;
		
		private int _EstadoId;
		
		private string _Name;
		
		private bool _Deleted;
		
		private EntitySet<FiscalDetail> _FiscalDetails;
		
		private EntitySet<Franchisee> _Franchisees;
		
		private EntitySet<Office> _Offices;
		
		private EntitySet<PublicityAdvertiser> _PublicityAdvertiser;
		
		private EntitySet<Advertiser> _Advertiser;
		
		private EntityRef<Estado> _Estado;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMunicipioIdChanging(int value);
    partial void OnMunicipioIdChanged();
    partial void OnEstadoIdChanging(int value);
    partial void OnEstadoIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public Municipio()
		{
			this._FiscalDetails = new EntitySet<FiscalDetail>(new Action<FiscalDetail>(this.attach_FiscalDetails), new Action<FiscalDetail>(this.detach_FiscalDetails));
			this._Franchisees = new EntitySet<Franchisee>(new Action<Franchisee>(this.attach_Franchisees), new Action<Franchisee>(this.detach_Franchisees));
			this._Offices = new EntitySet<Office>(new Action<Office>(this.attach_Offices), new Action<Office>(this.detach_Offices));
			this._PublicityAdvertiser = new EntitySet<PublicityAdvertiser>(new Action<PublicityAdvertiser>(this.attach_PublicityAdvertiser), new Action<PublicityAdvertiser>(this.detach_PublicityAdvertiser));
			this._Advertiser = new EntitySet<Advertiser>(new Action<Advertiser>(this.attach_Advertiser), new Action<Advertiser>(this.detach_Advertiser));
			this._Estado = default(EntityRef<Estado>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MunicipioId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MunicipioId
		{
			get
			{
				return this._MunicipioId;
			}
			set
			{
				if ((this._MunicipioId != value))
				{
					this.OnMunicipioIdChanging(value);
					this.SendPropertyChanging();
					this._MunicipioId = value;
					this.SendPropertyChanged("MunicipioId");
					this.OnMunicipioIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstadoId", DbType="Int NOT NULL")]
		public int EstadoId
		{
			get
			{
				return this._EstadoId;
			}
			set
			{
				if ((this._EstadoId != value))
				{
					if (this._Estado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstadoIdChanging(value);
					this.SendPropertyChanging();
					this._EstadoId = value;
					this.SendPropertyChanged("EstadoId");
					this.OnEstadoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Municipio_FiscalDetail", Storage="_FiscalDetails", ThisKey="MunicipioId", OtherKey="MunicipioId")]
		public EntitySet<FiscalDetail> FiscalDetails
		{
			get
			{
				return this._FiscalDetails;
			}
			set
			{
				this._FiscalDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Municipio_Franchisee", Storage="_Franchisees", ThisKey="MunicipioId", OtherKey="MunicipioId")]
		public EntitySet<Franchisee> Franchisees
		{
			get
			{
				return this._Franchisees;
			}
			set
			{
				this._Franchisees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Municipio_Office", Storage="_Offices", ThisKey="MunicipioId", OtherKey="MunicipioId")]
		public EntitySet<Office> Offices
		{
			get
			{
				return this._Offices;
			}
			set
			{
				this._Offices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Municipio_PublicityAdvertiser", Storage="_PublicityAdvertiser", ThisKey="MunicipioId", OtherKey="MunicipioId")]
		public EntitySet<PublicityAdvertiser> PublicityAdvertiser
		{
			get
			{
				return this._PublicityAdvertiser;
			}
			set
			{
				this._PublicityAdvertiser.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Municipio_Advertiser", Storage="_Advertiser", ThisKey="MunicipioId", OtherKey="MunicipioId")]
		public EntitySet<Advertiser> Advertiser
		{
			get
			{
				return this._Advertiser;
			}
			set
			{
				this._Advertiser.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_Municipio", Storage="_Estado", ThisKey="EstadoId", OtherKey="EstadoId", IsForeignKey=true)]
		public Estado Estado
		{
			get
			{
				return this._Estado.Entity;
			}
			set
			{
				Estado previousValue = this._Estado.Entity;
				if (((previousValue != value) 
							|| (this._Estado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estado.Entity = null;
						previousValue.Municipios.Remove(this);
					}
					this._Estado.Entity = value;
					if ((value != null))
					{
						value.Municipios.Add(this);
						this._EstadoId = value.EstadoId;
					}
					else
					{
						this._EstadoId = default(int);
					}
					this.SendPropertyChanged("Estado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FiscalDetails(FiscalDetail entity)
		{
			this.SendPropertyChanging();
			entity.Municipio = this;
		}
		
		private void detach_FiscalDetails(FiscalDetail entity)
		{
			this.SendPropertyChanging();
			entity.Municipio = null;
		}
		
		private void attach_Franchisees(Franchisee entity)
		{
			this.SendPropertyChanging();
			entity.Municipio = this;
		}
		
		private void detach_Franchisees(Franchisee entity)
		{
			this.SendPropertyChanging();
			entity.Municipio = null;
		}
		
		private void attach_Offices(Office entity)
		{
			this.SendPropertyChanging();
			entity.Municipio = this;
		}
		
		private void detach_Offices(Office entity)
		{
			this.SendPropertyChanging();
			entity.Municipio = null;
		}
		
		private void attach_PublicityAdvertiser(PublicityAdvertiser entity)
		{
			this.SendPropertyChanging();
			entity.Municipio = this;
		}
		
		private void detach_PublicityAdvertiser(PublicityAdvertiser entity)
		{
			this.SendPropertyChanging();
			entity.Municipio = null;
		}
		
		private void attach_Advertiser(Advertiser entity)
		{
			this.SendPropertyChanging();
			entity.Municipio = this;
		}
		
		private void detach_Advertiser(Advertiser entity)
		{
			this.SendPropertyChanging();
			entity.Municipio = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Office")]
	public partial class Office : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OfficeId;
		
		private int _AdvertiserId;
		
		private int _CityId;
		
		private string _Name;
		
		private string _Address;
		
		private System.Nullable<double> _MapReferenceX;
		
		private System.Nullable<double> _MapReferenceY;
		
		private bool _Deleted;
		
		private int _FranchiseeId;
		
		private int _MunicipioId;
		
		private string _Number;
		
		private string _ZipCode;
		
		private string _Neibornhod;
		
		private bool _Featured;
		
		private EntityRef<Franchisee> _Franchisee;
		
		private EntityRef<Municipio> _Municipio;
		
		private EntityRef<Advertiser> _Advertiser;
		
		private EntityRef<City> _City;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOfficeIdChanging(int value);
    partial void OnOfficeIdChanged();
    partial void OnAdvertiserIdChanging(int value);
    partial void OnAdvertiserIdChanged();
    partial void OnCityIdChanging(int value);
    partial void OnCityIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnMapReferenceXChanging(System.Nullable<double> value);
    partial void OnMapReferenceXChanged();
    partial void OnMapReferenceYChanging(System.Nullable<double> value);
    partial void OnMapReferenceYChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnFranchiseeIdChanging(int value);
    partial void OnFranchiseeIdChanged();
    partial void OnMunicipioIdChanging(int value);
    partial void OnMunicipioIdChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    partial void OnNeibornhodChanging(string value);
    partial void OnNeibornhodChanged();
    partial void OnFeaturedChanging(bool value);
    partial void OnFeaturedChanged();
    #endregion
		
		public Office()
		{
			this._Franchisee = default(EntityRef<Franchisee>);
			this._Municipio = default(EntityRef<Municipio>);
			this._Advertiser = default(EntityRef<Advertiser>);
			this._City = default(EntityRef<City>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OfficeId
		{
			get
			{
				return this._OfficeId;
			}
			set
			{
				if ((this._OfficeId != value))
				{
					this.OnOfficeIdChanging(value);
					this.SendPropertyChanging();
					this._OfficeId = value;
					this.SendPropertyChanged("OfficeId");
					this.OnOfficeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertiserId", DbType="Int NOT NULL")]
		public int AdvertiserId
		{
			get
			{
				return this._AdvertiserId;
			}
			set
			{
				if ((this._AdvertiserId != value))
				{
					if (this._Advertiser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdvertiserIdChanging(value);
					this.SendPropertyChanging();
					this._AdvertiserId = value;
					this.SendPropertyChanged("AdvertiserId");
					this.OnAdvertiserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityId", DbType="Int NOT NULL")]
		public int CityId
		{
			get
			{
				return this._CityId;
			}
			set
			{
				if ((this._CityId != value))
				{
					if (this._City.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCityIdChanging(value);
					this.SendPropertyChanging();
					this._CityId = value;
					this.SendPropertyChanged("CityId");
					this.OnCityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapReferenceX", DbType="Float")]
		public System.Nullable<double> MapReferenceX
		{
			get
			{
				return this._MapReferenceX;
			}
			set
			{
				if ((this._MapReferenceX != value))
				{
					this.OnMapReferenceXChanging(value);
					this.SendPropertyChanging();
					this._MapReferenceX = value;
					this.SendPropertyChanged("MapReferenceX");
					this.OnMapReferenceXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapReferenceY", DbType="Float")]
		public System.Nullable<double> MapReferenceY
		{
			get
			{
				return this._MapReferenceY;
			}
			set
			{
				if ((this._MapReferenceY != value))
				{
					this.OnMapReferenceYChanging(value);
					this.SendPropertyChanging();
					this._MapReferenceY = value;
					this.SendPropertyChanged("MapReferenceY");
					this.OnMapReferenceYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FranchiseeId", DbType="Int NOT NULL")]
		public int FranchiseeId
		{
			get
			{
				return this._FranchiseeId;
			}
			set
			{
				if ((this._FranchiseeId != value))
				{
					if (this._Franchisee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFranchiseeIdChanging(value);
					this.SendPropertyChanging();
					this._FranchiseeId = value;
					this.SendPropertyChanged("FranchiseeId");
					this.OnFranchiseeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MunicipioId", DbType="Int NOT NULL")]
		public int MunicipioId
		{
			get
			{
				return this._MunicipioId;
			}
			set
			{
				if ((this._MunicipioId != value))
				{
					if (this._Municipio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMunicipioIdChanging(value);
					this.SendPropertyChanging();
					this._MunicipioId = value;
					this.SendPropertyChanged("MunicipioId");
					this.OnMunicipioIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="VarChar(20)")]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="VarChar(10)")]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Neibornhod", DbType="VarChar(50)")]
		public string Neibornhod
		{
			get
			{
				return this._Neibornhod;
			}
			set
			{
				if ((this._Neibornhod != value))
				{
					this.OnNeibornhodChanging(value);
					this.SendPropertyChanging();
					this._Neibornhod = value;
					this.SendPropertyChanged("Neibornhod");
					this.OnNeibornhodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Featured", DbType="Bit NOT NULL")]
		public bool Featured
		{
			get
			{
				return this._Featured;
			}
			set
			{
				if ((this._Featured != value))
				{
					this.OnFeaturedChanging(value);
					this.SendPropertyChanging();
					this._Featured = value;
					this.SendPropertyChanged("Featured");
					this.OnFeaturedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Franchisee_Office", Storage="_Franchisee", ThisKey="FranchiseeId", OtherKey="FranchiseeId", IsForeignKey=true)]
		public Franchisee Franchisee
		{
			get
			{
				return this._Franchisee.Entity;
			}
			set
			{
				Franchisee previousValue = this._Franchisee.Entity;
				if (((previousValue != value) 
							|| (this._Franchisee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Franchisee.Entity = null;
						previousValue.Offices.Remove(this);
					}
					this._Franchisee.Entity = value;
					if ((value != null))
					{
						value.Offices.Add(this);
						this._FranchiseeId = value.FranchiseeId;
					}
					else
					{
						this._FranchiseeId = default(int);
					}
					this.SendPropertyChanged("Franchisee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Municipio_Office", Storage="_Municipio", ThisKey="MunicipioId", OtherKey="MunicipioId", IsForeignKey=true)]
		public Municipio Municipio
		{
			get
			{
				return this._Municipio.Entity;
			}
			set
			{
				Municipio previousValue = this._Municipio.Entity;
				if (((previousValue != value) 
							|| (this._Municipio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Municipio.Entity = null;
						previousValue.Offices.Remove(this);
					}
					this._Municipio.Entity = value;
					if ((value != null))
					{
						value.Offices.Add(this);
						this._MunicipioId = value.MunicipioId;
					}
					else
					{
						this._MunicipioId = default(int);
					}
					this.SendPropertyChanged("Municipio");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Advertiser_Office", Storage="_Advertiser", ThisKey="AdvertiserId", OtherKey="AdvertiserId", IsForeignKey=true)]
		public Advertiser Advertiser
		{
			get
			{
				return this._Advertiser.Entity;
			}
			set
			{
				Advertiser previousValue = this._Advertiser.Entity;
				if (((previousValue != value) 
							|| (this._Advertiser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Advertiser.Entity = null;
						previousValue.Office.Remove(this);
					}
					this._Advertiser.Entity = value;
					if ((value != null))
					{
						value.Office.Add(this);
						this._AdvertiserId = value.AdvertiserId;
					}
					else
					{
						this._AdvertiserId = default(int);
					}
					this.SendPropertyChanged("Advertiser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_Office", Storage="_City", ThisKey="CityId", OtherKey="CityId", IsForeignKey=true)]
		public City City
		{
			get
			{
				return this._City.Entity;
			}
			set
			{
				City previousValue = this._City.Entity;
				if (((previousValue != value) 
							|| (this._City.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._City.Entity = null;
						previousValue.Office.Remove(this);
					}
					this._City.Entity = value;
					if ((value != null))
					{
						value.Office.Add(this);
						this._CityId = value.CityId;
					}
					else
					{
						this._CityId = default(int);
					}
					this.SendPropertyChanged("City");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Page")]
	public partial class Page : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PageId;
		
		private int _Number;
		
		private int _SyncNumber;
		
		private System.Nullable<System.DateTime> _SyncDate;
		
		private System.DateTime _CreatedOn;
		
		private System.Nullable<System.DateTime> _ModiefiedOn;
		
		private bool _Deleted;
		
		private EntitySet<Announce> _Announces;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPageIdChanging(int value);
    partial void OnPageIdChanged();
    partial void OnNumberChanging(int value);
    partial void OnNumberChanged();
    partial void OnSyncNumberChanging(int value);
    partial void OnSyncNumberChanged();
    partial void OnSyncDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSyncDateChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnModiefiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModiefiedOnChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public Page()
		{
			this._Announces = new EntitySet<Announce>(new Action<Announce>(this.attach_Announces), new Action<Announce>(this.detach_Announces));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PageId
		{
			get
			{
				return this._PageId;
			}
			set
			{
				if ((this._PageId != value))
				{
					this.OnPageIdChanging(value);
					this.SendPropertyChanging();
					this._PageId = value;
					this.SendPropertyChanged("PageId");
					this.OnPageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="Int NOT NULL")]
		public int Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SyncNumber", DbType="Int NOT NULL")]
		public int SyncNumber
		{
			get
			{
				return this._SyncNumber;
			}
			set
			{
				if ((this._SyncNumber != value))
				{
					this.OnSyncNumberChanging(value);
					this.SendPropertyChanging();
					this._SyncNumber = value;
					this.SendPropertyChanged("SyncNumber");
					this.OnSyncNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SyncDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SyncDate
		{
			get
			{
				return this._SyncDate;
			}
			set
			{
				if ((this._SyncDate != value))
				{
					this.OnSyncDateChanging(value);
					this.SendPropertyChanging();
					this._SyncDate = value;
					this.SendPropertyChanged("SyncDate");
					this.OnSyncDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModiefiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModiefiedOn
		{
			get
			{
				return this._ModiefiedOn;
			}
			set
			{
				if ((this._ModiefiedOn != value))
				{
					this.OnModiefiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModiefiedOn = value;
					this.SendPropertyChanged("ModiefiedOn");
					this.OnModiefiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Page_Announce", Storage="_Announces", ThisKey="PageId", OtherKey="PageId")]
		public EntitySet<Announce> Announces
		{
			get
			{
				return this._Announces;
			}
			set
			{
				this._Announces.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Announces(Announce entity)
		{
			this.SendPropertyChanging();
			entity.Page = this;
		}
		
		private void detach_Announces(Announce entity)
		{
			this.SendPropertyChanging();
			entity.Page = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Personal")]
	public partial class Personal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PersonalId;
		
		private string _Name;
		
		private int _FranchiseeId;
		
		private System.Nullable<System.Guid> _UserId;
		
		private int _PersonalTypeId;
		
		private bool _Deleted;
		
		private EntitySet<CouponSet> _CouponSets;
		
		private EntitySet<CouponSet> _CouponSets1;
		
		private EntitySet<Coupon> _Coupon1;
		
		private EntitySet<Coupon> _Coupon;
		
		private EntitySet<Advertiser> _Advertiser;
		
		private EntityRef<Franchisee> _Franchisee;
		
		private EntityRef<PersonalType> _PersonalType;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPersonalIdChanging(int value);
    partial void OnPersonalIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFranchiseeIdChanging(int value);
    partial void OnFranchiseeIdChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnPersonalTypeIdChanging(int value);
    partial void OnPersonalTypeIdChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public Personal()
		{
			this._CouponSets = new EntitySet<CouponSet>(new Action<CouponSet>(this.attach_CouponSets), new Action<CouponSet>(this.detach_CouponSets));
			this._CouponSets1 = new EntitySet<CouponSet>(new Action<CouponSet>(this.attach_CouponSets1), new Action<CouponSet>(this.detach_CouponSets1));
			this._Coupon1 = new EntitySet<Coupon>(new Action<Coupon>(this.attach_Coupon1), new Action<Coupon>(this.detach_Coupon1));
			this._Coupon = new EntitySet<Coupon>(new Action<Coupon>(this.attach_Coupon), new Action<Coupon>(this.detach_Coupon));
			this._Advertiser = new EntitySet<Advertiser>(new Action<Advertiser>(this.attach_Advertiser), new Action<Advertiser>(this.detach_Advertiser));
			this._Franchisee = default(EntityRef<Franchisee>);
			this._PersonalType = default(EntityRef<PersonalType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PersonalId
		{
			get
			{
				return this._PersonalId;
			}
			set
			{
				if ((this._PersonalId != value))
				{
					this.OnPersonalIdChanging(value);
					this.SendPropertyChanging();
					this._PersonalId = value;
					this.SendPropertyChanged("PersonalId");
					this.OnPersonalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FranchiseeId", DbType="Int NOT NULL")]
		public int FranchiseeId
		{
			get
			{
				return this._FranchiseeId;
			}
			set
			{
				if ((this._FranchiseeId != value))
				{
					if (this._Franchisee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFranchiseeIdChanging(value);
					this.SendPropertyChanging();
					this._FranchiseeId = value;
					this.SendPropertyChanged("FranchiseeId");
					this.OnFranchiseeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalTypeId", DbType="Int NOT NULL")]
		public int PersonalTypeId
		{
			get
			{
				return this._PersonalTypeId;
			}
			set
			{
				if ((this._PersonalTypeId != value))
				{
					if (this._PersonalType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonalTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PersonalTypeId = value;
					this.SendPropertyChanged("PersonalTypeId");
					this.OnPersonalTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personal_CouponSet", Storage="_CouponSets", ThisKey="PersonalId", OtherKey="CreatedBy")]
		public EntitySet<CouponSet> CouponSets
		{
			get
			{
				return this._CouponSets;
			}
			set
			{
				this._CouponSets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personal_CouponSet1", Storage="_CouponSets1", ThisKey="PersonalId", OtherKey="ModifiedBy")]
		public EntitySet<CouponSet> CouponSets1
		{
			get
			{
				return this._CouponSets1;
			}
			set
			{
				this._CouponSets1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personal_Coupon", Storage="_Coupon1", ThisKey="PersonalId", OtherKey="CreatedBy")]
		public EntitySet<Coupon> Coupon1
		{
			get
			{
				return this._Coupon1;
			}
			set
			{
				this._Coupon1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personal_Coupon1", Storage="_Coupon", ThisKey="PersonalId", OtherKey="ModifiedBy")]
		public EntitySet<Coupon> Coupon
		{
			get
			{
				return this._Coupon;
			}
			set
			{
				this._Coupon.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personal_Advertiser", Storage="_Advertiser", ThisKey="PersonalId", OtherKey="PersonalId")]
		public EntitySet<Advertiser> Advertiser
		{
			get
			{
				return this._Advertiser;
			}
			set
			{
				this._Advertiser.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Franchisee_Personal", Storage="_Franchisee", ThisKey="FranchiseeId", OtherKey="FranchiseeId", IsForeignKey=true)]
		public Franchisee Franchisee
		{
			get
			{
				return this._Franchisee.Entity;
			}
			set
			{
				Franchisee previousValue = this._Franchisee.Entity;
				if (((previousValue != value) 
							|| (this._Franchisee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Franchisee.Entity = null;
						previousValue.Personals.Remove(this);
					}
					this._Franchisee.Entity = value;
					if ((value != null))
					{
						value.Personals.Add(this);
						this._FranchiseeId = value.FranchiseeId;
					}
					else
					{
						this._FranchiseeId = default(int);
					}
					this.SendPropertyChanged("Franchisee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PersonalType_Personal", Storage="_PersonalType", ThisKey="PersonalTypeId", OtherKey="PersonalTypeId", IsForeignKey=true)]
		public PersonalType PersonalType
		{
			get
			{
				return this._PersonalType.Entity;
			}
			set
			{
				PersonalType previousValue = this._PersonalType.Entity;
				if (((previousValue != value) 
							|| (this._PersonalType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PersonalType.Entity = null;
						previousValue.Personals.Remove(this);
					}
					this._PersonalType.Entity = value;
					if ((value != null))
					{
						value.Personals.Add(this);
						this._PersonalTypeId = value.PersonalTypeId;
					}
					else
					{
						this._PersonalTypeId = default(int);
					}
					this.SendPropertyChanged("PersonalType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CouponSets(CouponSet entity)
		{
			this.SendPropertyChanging();
			entity.Personal = this;
		}
		
		private void detach_CouponSets(CouponSet entity)
		{
			this.SendPropertyChanging();
			entity.Personal = null;
		}
		
		private void attach_CouponSets1(CouponSet entity)
		{
			this.SendPropertyChanging();
			entity.Personal1 = this;
		}
		
		private void detach_CouponSets1(CouponSet entity)
		{
			this.SendPropertyChanging();
			entity.Personal1 = null;
		}
		
		private void attach_Coupon1(Coupon entity)
		{
			this.SendPropertyChanging();
			entity.Personal = this;
		}
		
		private void detach_Coupon1(Coupon entity)
		{
			this.SendPropertyChanging();
			entity.Personal = null;
		}
		
		private void attach_Coupon(Coupon entity)
		{
			this.SendPropertyChanging();
			entity.Personal1 = this;
		}
		
		private void detach_Coupon(Coupon entity)
		{
			this.SendPropertyChanging();
			entity.Personal1 = null;
		}
		
		private void attach_Advertiser(Advertiser entity)
		{
			this.SendPropertyChanging();
			entity.Personal = this;
		}
		
		private void detach_Advertiser(Advertiser entity)
		{
			this.SendPropertyChanging();
			entity.Personal = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PersonalType")]
	public partial class PersonalType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PersonalTypeId;
		
		private string _Description;
		
		private bool _Deleted;
		
		private EntitySet<Personal> _Personals;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPersonalTypeIdChanging(int value);
    partial void OnPersonalTypeIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public PersonalType()
		{
			this._Personals = new EntitySet<Personal>(new Action<Personal>(this.attach_Personals), new Action<Personal>(this.detach_Personals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PersonalTypeId
		{
			get
			{
				return this._PersonalTypeId;
			}
			set
			{
				if ((this._PersonalTypeId != value))
				{
					this.OnPersonalTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PersonalTypeId = value;
					this.SendPropertyChanged("PersonalTypeId");
					this.OnPersonalTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PersonalType_Personal", Storage="_Personals", ThisKey="PersonalTypeId", OtherKey="PersonalTypeId")]
		public EntitySet<Personal> Personals
		{
			get
			{
				return this._Personals;
			}
			set
			{
				this._Personals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Personals(Personal entity)
		{
			this.SendPropertyChanging();
			entity.PersonalType = this;
		}
		
		private void detach_Personals(Personal entity)
		{
			this.SendPropertyChanging();
			entity.PersonalType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Phone")]
	public partial class Phone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PhoneId;
		
		private int _AdvertiserId;
		
		private int _PhoneTypeId;
		
		private string _PhoneNumber;
		
		private bool _Deleted;
		
		private int _FranchiseeId;
		
		private EntityRef<Franchisee> _Franchisee;
		
		private EntityRef<PhoneType> _PhoneType;
		
		private EntityRef<Advertiser> _Advertiser;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhoneIdChanging(int value);
    partial void OnPhoneIdChanged();
    partial void OnAdvertiserIdChanging(int value);
    partial void OnAdvertiserIdChanged();
    partial void OnPhoneTypeIdChanging(int value);
    partial void OnPhoneTypeIdChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnFranchiseeIdChanging(int value);
    partial void OnFranchiseeIdChanged();
    #endregion
		
		public Phone()
		{
			this._Franchisee = default(EntityRef<Franchisee>);
			this._PhoneType = default(EntityRef<PhoneType>);
			this._Advertiser = default(EntityRef<Advertiser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PhoneId
		{
			get
			{
				return this._PhoneId;
			}
			set
			{
				if ((this._PhoneId != value))
				{
					this.OnPhoneIdChanging(value);
					this.SendPropertyChanging();
					this._PhoneId = value;
					this.SendPropertyChanged("PhoneId");
					this.OnPhoneIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertiserId", DbType="Int NOT NULL")]
		public int AdvertiserId
		{
			get
			{
				return this._AdvertiserId;
			}
			set
			{
				if ((this._AdvertiserId != value))
				{
					if (this._Advertiser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdvertiserIdChanging(value);
					this.SendPropertyChanging();
					this._AdvertiserId = value;
					this.SendPropertyChanged("AdvertiserId");
					this.OnAdvertiserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneTypeId", DbType="Int NOT NULL")]
		public int PhoneTypeId
		{
			get
			{
				return this._PhoneTypeId;
			}
			set
			{
				if ((this._PhoneTypeId != value))
				{
					if (this._PhoneType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhoneTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PhoneTypeId = value;
					this.SendPropertyChanged("PhoneTypeId");
					this.OnPhoneTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FranchiseeId", DbType="Int NOT NULL")]
		public int FranchiseeId
		{
			get
			{
				return this._FranchiseeId;
			}
			set
			{
				if ((this._FranchiseeId != value))
				{
					if (this._Franchisee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFranchiseeIdChanging(value);
					this.SendPropertyChanging();
					this._FranchiseeId = value;
					this.SendPropertyChanged("FranchiseeId");
					this.OnFranchiseeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Franchisee_Phone", Storage="_Franchisee", ThisKey="FranchiseeId", OtherKey="FranchiseeId", IsForeignKey=true)]
		public Franchisee Franchisee
		{
			get
			{
				return this._Franchisee.Entity;
			}
			set
			{
				Franchisee previousValue = this._Franchisee.Entity;
				if (((previousValue != value) 
							|| (this._Franchisee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Franchisee.Entity = null;
						previousValue.Phones.Remove(this);
					}
					this._Franchisee.Entity = value;
					if ((value != null))
					{
						value.Phones.Add(this);
						this._FranchiseeId = value.FranchiseeId;
					}
					else
					{
						this._FranchiseeId = default(int);
					}
					this.SendPropertyChanged("Franchisee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhoneType_Phone", Storage="_PhoneType", ThisKey="PhoneTypeId", OtherKey="PhoneTypeId", IsForeignKey=true)]
		public PhoneType PhoneType
		{
			get
			{
				return this._PhoneType.Entity;
			}
			set
			{
				PhoneType previousValue = this._PhoneType.Entity;
				if (((previousValue != value) 
							|| (this._PhoneType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhoneType.Entity = null;
						previousValue.Phones.Remove(this);
					}
					this._PhoneType.Entity = value;
					if ((value != null))
					{
						value.Phones.Add(this);
						this._PhoneTypeId = value.PhoneTypeId;
					}
					else
					{
						this._PhoneTypeId = default(int);
					}
					this.SendPropertyChanged("PhoneType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Advertiser_Phone", Storage="_Advertiser", ThisKey="AdvertiserId", OtherKey="AdvertiserId", IsForeignKey=true)]
		public Advertiser Advertiser
		{
			get
			{
				return this._Advertiser.Entity;
			}
			set
			{
				Advertiser previousValue = this._Advertiser.Entity;
				if (((previousValue != value) 
							|| (this._Advertiser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Advertiser.Entity = null;
						previousValue.Phone.Remove(this);
					}
					this._Advertiser.Entity = value;
					if ((value != null))
					{
						value.Phone.Add(this);
						this._AdvertiserId = value.AdvertiserId;
					}
					else
					{
						this._AdvertiserId = default(int);
					}
					this.SendPropertyChanged("Advertiser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhoneType")]
	public partial class PhoneType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PhoneTypeId;
		
		private string _Name;
		
		private bool _Deleted;
		
		private EntitySet<Phone> _Phones;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhoneTypeIdChanging(int value);
    partial void OnPhoneTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public PhoneType()
		{
			this._Phones = new EntitySet<Phone>(new Action<Phone>(this.attach_Phones), new Action<Phone>(this.detach_Phones));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PhoneTypeId
		{
			get
			{
				return this._PhoneTypeId;
			}
			set
			{
				if ((this._PhoneTypeId != value))
				{
					this.OnPhoneTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PhoneTypeId = value;
					this.SendPropertyChanged("PhoneTypeId");
					this.OnPhoneTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(20)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhoneType_Phone", Storage="_Phones", ThisKey="PhoneTypeId", OtherKey="PhoneTypeId")]
		public EntitySet<Phone> Phones
		{
			get
			{
				return this._Phones;
			}
			set
			{
				this._Phones.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Phones(Phone entity)
		{
			this.SendPropertyChanging();
			entity.PhoneType = this;
		}
		
		private void detach_Phones(Phone entity)
		{
			this.SendPropertyChanging();
			entity.PhoneType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Picture")]
	public partial class Picture : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PictureId;
		
		private int _GalleryId;
		
		private string _Description;
		
		private bool _Deleted;
		
		private int _FranchiseeId;
		
		private EntityRef<Franchisee> _Franchisee;
		
		private EntityRef<Gallery> _Gallery;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPictureIdChanging(int value);
    partial void OnPictureIdChanged();
    partial void OnGalleryIdChanging(int value);
    partial void OnGalleryIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnFranchiseeIdChanging(int value);
    partial void OnFranchiseeIdChanged();
    #endregion
		
		public Picture()
		{
			this._Franchisee = default(EntityRef<Franchisee>);
			this._Gallery = default(EntityRef<Gallery>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PictureId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PictureId
		{
			get
			{
				return this._PictureId;
			}
			set
			{
				if ((this._PictureId != value))
				{
					this.OnPictureIdChanging(value);
					this.SendPropertyChanging();
					this._PictureId = value;
					this.SendPropertyChanged("PictureId");
					this.OnPictureIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GalleryId", DbType="Int NOT NULL")]
		public int GalleryId
		{
			get
			{
				return this._GalleryId;
			}
			set
			{
				if ((this._GalleryId != value))
				{
					if (this._Gallery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGalleryIdChanging(value);
					this.SendPropertyChanging();
					this._GalleryId = value;
					this.SendPropertyChanged("GalleryId");
					this.OnGalleryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FranchiseeId", DbType="Int NOT NULL")]
		public int FranchiseeId
		{
			get
			{
				return this._FranchiseeId;
			}
			set
			{
				if ((this._FranchiseeId != value))
				{
					if (this._Franchisee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFranchiseeIdChanging(value);
					this.SendPropertyChanging();
					this._FranchiseeId = value;
					this.SendPropertyChanged("FranchiseeId");
					this.OnFranchiseeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Franchisee_Picture", Storage="_Franchisee", ThisKey="FranchiseeId", OtherKey="FranchiseeId", IsForeignKey=true)]
		public Franchisee Franchisee
		{
			get
			{
				return this._Franchisee.Entity;
			}
			set
			{
				Franchisee previousValue = this._Franchisee.Entity;
				if (((previousValue != value) 
							|| (this._Franchisee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Franchisee.Entity = null;
						previousValue.Pictures.Remove(this);
					}
					this._Franchisee.Entity = value;
					if ((value != null))
					{
						value.Pictures.Add(this);
						this._FranchiseeId = value.FranchiseeId;
					}
					else
					{
						this._FranchiseeId = default(int);
					}
					this.SendPropertyChanged("Franchisee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gallery_Picture", Storage="_Gallery", ThisKey="GalleryId", OtherKey="GalleryId", IsForeignKey=true)]
		public Gallery Gallery
		{
			get
			{
				return this._Gallery.Entity;
			}
			set
			{
				Gallery previousValue = this._Gallery.Entity;
				if (((previousValue != value) 
							|| (this._Gallery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Gallery.Entity = null;
						previousValue.Pictures.Remove(this);
					}
					this._Gallery.Entity = value;
					if ((value != null))
					{
						value.Pictures.Add(this);
						this._GalleryId = value.GalleryId;
					}
					else
					{
						this._GalleryId = default(int);
					}
					this.SendPropertyChanged("Gallery");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShareLevel")]
	public partial class ShareLevel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ShareLevelId;
		
		private string _Description;
		
		private int _Percentage;
		
		private bool _Deleted;
		
		private EntitySet<Franchisee> _Franchisees;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShareLevelIdChanging(int value);
    partial void OnShareLevelIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPercentageChanging(int value);
    partial void OnPercentageChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    #endregion
		
		public ShareLevel()
		{
			this._Franchisees = new EntitySet<Franchisee>(new Action<Franchisee>(this.attach_Franchisees), new Action<Franchisee>(this.detach_Franchisees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShareLevelId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ShareLevelId
		{
			get
			{
				return this._ShareLevelId;
			}
			set
			{
				if ((this._ShareLevelId != value))
				{
					this.OnShareLevelIdChanging(value);
					this.SendPropertyChanging();
					this._ShareLevelId = value;
					this.SendPropertyChanged("ShareLevelId");
					this.OnShareLevelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percentage", DbType="Int NOT NULL")]
		public int Percentage
		{
			get
			{
				return this._Percentage;
			}
			set
			{
				if ((this._Percentage != value))
				{
					this.OnPercentageChanging(value);
					this.SendPropertyChanging();
					this._Percentage = value;
					this.SendPropertyChanged("Percentage");
					this.OnPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShareLevel_Franchisee", Storage="_Franchisees", ThisKey="ShareLevelId", OtherKey="ShareLevelId")]
		public EntitySet<Franchisee> Franchisees
		{
			get
			{
				return this._Franchisees;
			}
			set
			{
				this._Franchisees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Franchisees(Franchisee entity)
		{
			this.SendPropertyChanging();
			entity.ShareLevel = this;
		}
		
		private void detach_Franchisees(Franchisee entity)
		{
			this.SendPropertyChanging();
			entity.ShareLevel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SqliteUpdate")]
	public partial class SqliteUpdate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SqliteUpdateId;
		
		private System.DateTime _UpdateDate;
		
		private int _ActiveRecords;
		
		private int _AndroidRecords;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSqliteUpdateIdChanging(int value);
    partial void OnSqliteUpdateIdChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnActiveRecordsChanging(int value);
    partial void OnActiveRecordsChanged();
    partial void OnAndroidRecordsChanging(int value);
    partial void OnAndroidRecordsChanged();
    #endregion
		
		public SqliteUpdate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SqliteUpdateId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SqliteUpdateId
		{
			get
			{
				return this._SqliteUpdateId;
			}
			set
			{
				if ((this._SqliteUpdateId != value))
				{
					this.OnSqliteUpdateIdChanging(value);
					this.SendPropertyChanging();
					this._SqliteUpdateId = value;
					this.SendPropertyChanged("SqliteUpdateId");
					this.OnSqliteUpdateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveRecords", DbType="Int NOT NULL")]
		public int ActiveRecords
		{
			get
			{
				return this._ActiveRecords;
			}
			set
			{
				if ((this._ActiveRecords != value))
				{
					this.OnActiveRecordsChanging(value);
					this.SendPropertyChanging();
					this._ActiveRecords = value;
					this.SendPropertyChanged("ActiveRecords");
					this.OnActiveRecordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AndroidRecords", DbType="Int NOT NULL")]
		public int AndroidRecords
		{
			get
			{
				return this._AndroidRecords;
			}
			set
			{
				if ((this._AndroidRecords != value))
				{
					this.OnAndroidRecordsChanging(value);
					this.SendPropertyChanging();
					this._AndroidRecords = value;
					this.SendPropertyChanged("AndroidRecords");
					this.OnAndroidRecordsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Status")]
	public partial class Status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StatusId;
		
		private string _Name;
		
		private bool _Deleted;
		
		private string _DisplayName;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatusIdChanging(int value);
    partial void OnStatusIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    #endregion
		
		public Status()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StatusId
		{
			get
			{
				return this._StatusId;
			}
			set
			{
				if ((this._StatusId != value))
				{
					this.OnStatusIdChanging(value);
					this.SendPropertyChanging();
					this._StatusId = value;
					this.SendPropertyChanged("StatusId");
					this.OnStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VwCategories")]
	public partial class VwCategory
	{
		
		private int _CategoryId;
		
		private int _CityId;
		
		private bool _Featured;
		
		private string _letter;
		
		private string _Name;
		
		private string _AdvertiserName;
		
		private string _Description;
		
		private string _Tags;
		
		public VwCategory()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int NOT NULL")]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this._CategoryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityId", DbType="Int NOT NULL")]
		public int CityId
		{
			get
			{
				return this._CityId;
			}
			set
			{
				if ((this._CityId != value))
				{
					this._CityId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Featured", DbType="Bit NOT NULL")]
		public bool Featured
		{
			get
			{
				return this._Featured;
			}
			set
			{
				if ((this._Featured != value))
				{
					this._Featured = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_letter", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string letter
		{
			get
			{
				return this._letter;
			}
			set
			{
				if ((this._letter != value))
				{
					this._letter = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertiserName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string AdvertiserName
		{
			get
			{
				return this._AdvertiserName;
			}
			set
			{
				if ((this._AdvertiserName != value))
				{
					this._AdvertiserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tags", DbType="VarChar(500)")]
		public string Tags
		{
			get
			{
				return this._Tags;
			}
			set
			{
				if ((this._Tags != value))
				{
					this._Tags = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Coupon")]
	public partial class Coupon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CouponId;
		
		private int _FranchiseeId;
		
		private int _AdvertiserId;
		
		private int _CouponSetId;
		
		private int _CouponStatusId;
		
		private string _Name;
		
		private string _Description;
		
		private string _Conditions;
		
		private string _HowToCash;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private bool _HasPicture;
		
		private bool _IsExpirable;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedOn;
		
		private System.Nullable<int> _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private bool _Deleted;
		
		private bool _IsNationale;
		
		private bool _isClub;
		
		private EntitySet<CouponCategory> _CouponCategory;
		
		private EntityRef<CouponSet> _CouponSet;
		
		private EntityRef<CouponStatus> _CouponStatus;
		
		private EntityRef<Franchisee> _Franchisee;
		
		private EntityRef<Personal> _Personal;
		
		private EntityRef<Personal> _Personal1;
		
		private EntityRef<Advertiser> _Advertiser;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCouponIdChanging(int value);
    partial void OnCouponIdChanged();
    partial void OnFranchiseeIdChanging(int value);
    partial void OnFranchiseeIdChanged();
    partial void OnAdvertiserIdChanging(int value);
    partial void OnAdvertiserIdChanged();
    partial void OnCouponSetIdChanging(int value);
    partial void OnCouponSetIdChanged();
    partial void OnCouponStatusIdChanging(int value);
    partial void OnCouponStatusIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnConditionsChanging(string value);
    partial void OnConditionsChanged();
    partial void OnHowToCashChanging(string value);
    partial void OnHowToCashChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnHasPictureChanging(bool value);
    partial void OnHasPictureChanged();
    partial void OnIsExpirableChanging(bool value);
    partial void OnIsExpirableChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnModifiedByChanging(System.Nullable<int> value);
    partial void OnModifiedByChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnIsNationaleChanging(bool value);
    partial void OnIsNationaleChanged();
    partial void OnisClubChanging(bool value);
    partial void OnisClubChanged();
    #endregion
		
		public Coupon()
		{
			this._CouponCategory = new EntitySet<CouponCategory>(new Action<CouponCategory>(this.attach_CouponCategory), new Action<CouponCategory>(this.detach_CouponCategory));
			this._CouponSet = default(EntityRef<CouponSet>);
			this._CouponStatus = default(EntityRef<CouponStatus>);
			this._Franchisee = default(EntityRef<Franchisee>);
			this._Personal = default(EntityRef<Personal>);
			this._Personal1 = default(EntityRef<Personal>);
			this._Advertiser = default(EntityRef<Advertiser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CouponId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CouponId
		{
			get
			{
				return this._CouponId;
			}
			set
			{
				if ((this._CouponId != value))
				{
					this.OnCouponIdChanging(value);
					this.SendPropertyChanging();
					this._CouponId = value;
					this.SendPropertyChanged("CouponId");
					this.OnCouponIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FranchiseeId", DbType="Int NOT NULL")]
		public int FranchiseeId
		{
			get
			{
				return this._FranchiseeId;
			}
			set
			{
				if ((this._FranchiseeId != value))
				{
					if (this._Franchisee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFranchiseeIdChanging(value);
					this.SendPropertyChanging();
					this._FranchiseeId = value;
					this.SendPropertyChanged("FranchiseeId");
					this.OnFranchiseeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertiserId", DbType="Int NOT NULL")]
		public int AdvertiserId
		{
			get
			{
				return this._AdvertiserId;
			}
			set
			{
				if ((this._AdvertiserId != value))
				{
					if (this._Advertiser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdvertiserIdChanging(value);
					this.SendPropertyChanging();
					this._AdvertiserId = value;
					this.SendPropertyChanged("AdvertiserId");
					this.OnAdvertiserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CouponSetId", DbType="Int NOT NULL")]
		public int CouponSetId
		{
			get
			{
				return this._CouponSetId;
			}
			set
			{
				if ((this._CouponSetId != value))
				{
					if (this._CouponSet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCouponSetIdChanging(value);
					this.SendPropertyChanging();
					this._CouponSetId = value;
					this.SendPropertyChanged("CouponSetId");
					this.OnCouponSetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CouponStatusId", DbType="Int NOT NULL")]
		public int CouponStatusId
		{
			get
			{
				return this._CouponStatusId;
			}
			set
			{
				if ((this._CouponStatusId != value))
				{
					if (this._CouponStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCouponStatusIdChanging(value);
					this.SendPropertyChanging();
					this._CouponStatusId = value;
					this.SendPropertyChanged("CouponStatusId");
					this.OnCouponStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Conditions", DbType="VarChar(500)")]
		public string Conditions
		{
			get
			{
				return this._Conditions;
			}
			set
			{
				if ((this._Conditions != value))
				{
					this.OnConditionsChanging(value);
					this.SendPropertyChanging();
					this._Conditions = value;
					this.SendPropertyChanged("Conditions");
					this.OnConditionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HowToCash", DbType="VarChar(500)")]
		public string HowToCash
		{
			get
			{
				return this._HowToCash;
			}
			set
			{
				if ((this._HowToCash != value))
				{
					this.OnHowToCashChanging(value);
					this.SendPropertyChanging();
					this._HowToCash = value;
					this.SendPropertyChanged("HowToCash");
					this.OnHowToCashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasPicture", DbType="Bit NOT NULL")]
		public bool HasPicture
		{
			get
			{
				return this._HasPicture;
			}
			set
			{
				if ((this._HasPicture != value))
				{
					this.OnHasPictureChanging(value);
					this.SendPropertyChanging();
					this._HasPicture = value;
					this.SendPropertyChanged("HasPicture");
					this.OnHasPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsExpirable", DbType="Bit NOT NULL")]
		public bool IsExpirable
		{
			get
			{
				return this._IsExpirable;
			}
			set
			{
				if ((this._IsExpirable != value))
				{
					this.OnIsExpirableChanging(value);
					this.SendPropertyChanging();
					this._IsExpirable = value;
					this.SendPropertyChanged("IsExpirable");
					this.OnIsExpirableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._Personal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int")]
		public System.Nullable<int> ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					if (this._Personal1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNationale", DbType="Bit NOT NULL")]
		public bool IsNationale
		{
			get
			{
				return this._IsNationale;
			}
			set
			{
				if ((this._IsNationale != value))
				{
					this.OnIsNationaleChanging(value);
					this.SendPropertyChanging();
					this._IsNationale = value;
					this.SendPropertyChanged("IsNationale");
					this.OnIsNationaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isClub", DbType="Bit NOT NULL")]
		public bool isClub
		{
			get
			{
				return this._isClub;
			}
			set
			{
				if ((this._isClub != value))
				{
					this.OnisClubChanging(value);
					this.SendPropertyChanging();
					this._isClub = value;
					this.SendPropertyChanged("isClub");
					this.OnisClubChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Coupon_CouponCategory", Storage="_CouponCategory", ThisKey="CouponId", OtherKey="CouponId")]
		public EntitySet<CouponCategory> CouponCategory
		{
			get
			{
				return this._CouponCategory;
			}
			set
			{
				this._CouponCategory.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CouponSet_Coupon", Storage="_CouponSet", ThisKey="CouponSetId", OtherKey="CouponSetId", IsForeignKey=true)]
		public CouponSet CouponSet
		{
			get
			{
				return this._CouponSet.Entity;
			}
			set
			{
				CouponSet previousValue = this._CouponSet.Entity;
				if (((previousValue != value) 
							|| (this._CouponSet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CouponSet.Entity = null;
						previousValue.Coupon.Remove(this);
					}
					this._CouponSet.Entity = value;
					if ((value != null))
					{
						value.Coupon.Add(this);
						this._CouponSetId = value.CouponSetId;
					}
					else
					{
						this._CouponSetId = default(int);
					}
					this.SendPropertyChanged("CouponSet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CouponStatus_Coupon", Storage="_CouponStatus", ThisKey="CouponStatusId", OtherKey="CouponStatusId", IsForeignKey=true)]
		public CouponStatus CouponStatus
		{
			get
			{
				return this._CouponStatus.Entity;
			}
			set
			{
				CouponStatus previousValue = this._CouponStatus.Entity;
				if (((previousValue != value) 
							|| (this._CouponStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CouponStatus.Entity = null;
						previousValue.Coupon.Remove(this);
					}
					this._CouponStatus.Entity = value;
					if ((value != null))
					{
						value.Coupon.Add(this);
						this._CouponStatusId = value.CouponStatusId;
					}
					else
					{
						this._CouponStatusId = default(int);
					}
					this.SendPropertyChanged("CouponStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Franchisee_Coupon", Storage="_Franchisee", ThisKey="FranchiseeId", OtherKey="FranchiseeId", IsForeignKey=true)]
		public Franchisee Franchisee
		{
			get
			{
				return this._Franchisee.Entity;
			}
			set
			{
				Franchisee previousValue = this._Franchisee.Entity;
				if (((previousValue != value) 
							|| (this._Franchisee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Franchisee.Entity = null;
						previousValue.Coupon.Remove(this);
					}
					this._Franchisee.Entity = value;
					if ((value != null))
					{
						value.Coupon.Add(this);
						this._FranchiseeId = value.FranchiseeId;
					}
					else
					{
						this._FranchiseeId = default(int);
					}
					this.SendPropertyChanged("Franchisee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personal_Coupon", Storage="_Personal", ThisKey="CreatedBy", OtherKey="PersonalId", IsForeignKey=true)]
		public Personal Personal
		{
			get
			{
				return this._Personal.Entity;
			}
			set
			{
				Personal previousValue = this._Personal.Entity;
				if (((previousValue != value) 
							|| (this._Personal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personal.Entity = null;
						previousValue.Coupon1.Remove(this);
					}
					this._Personal.Entity = value;
					if ((value != null))
					{
						value.Coupon1.Add(this);
						this._CreatedBy = value.PersonalId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("Personal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personal_Coupon1", Storage="_Personal1", ThisKey="ModifiedBy", OtherKey="PersonalId", IsForeignKey=true)]
		public Personal Personal1
		{
			get
			{
				return this._Personal1.Entity;
			}
			set
			{
				Personal previousValue = this._Personal1.Entity;
				if (((previousValue != value) 
							|| (this._Personal1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personal1.Entity = null;
						previousValue.Coupon.Remove(this);
					}
					this._Personal1.Entity = value;
					if ((value != null))
					{
						value.Coupon.Add(this);
						this._ModifiedBy = value.PersonalId;
					}
					else
					{
						this._ModifiedBy = default(Nullable<int>);
					}
					this.SendPropertyChanged("Personal1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Advertiser_Coupon", Storage="_Advertiser", ThisKey="AdvertiserId", OtherKey="AdvertiserId", IsForeignKey=true)]
		public Advertiser Advertiser
		{
			get
			{
				return this._Advertiser.Entity;
			}
			set
			{
				Advertiser previousValue = this._Advertiser.Entity;
				if (((previousValue != value) 
							|| (this._Advertiser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Advertiser.Entity = null;
						previousValue.Coupon.Remove(this);
					}
					this._Advertiser.Entity = value;
					if ((value != null))
					{
						value.Coupon.Add(this);
						this._AdvertiserId = value.AdvertiserId;
					}
					else
					{
						this._AdvertiserId = default(int);
					}
					this.SendPropertyChanged("Advertiser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CouponCategory(CouponCategory entity)
		{
			this.SendPropertyChanging();
			entity.Coupon = this;
		}
		
		private void detach_CouponCategory(CouponCategory entity)
		{
			this.SendPropertyChanging();
			entity.Coupon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PublicityAdvertiser")]
	public partial class PublicityAdvertiser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PublicityID;
		
		private System.Nullable<int> _AdvertiserId;
		
		private int _EstadoId;
		
		private int _MunicipioId;
		
		private string _UrlPublicity;
		
		private EntityRef<Estado> _Estado;
		
		private EntityRef<Municipio> _Municipio;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPublicityIDChanging(int value);
    partial void OnPublicityIDChanged();
    partial void OnAdvertiserIdChanging(System.Nullable<int> value);
    partial void OnAdvertiserIdChanged();
    partial void OnEstadoIdChanging(int value);
    partial void OnEstadoIdChanged();
    partial void OnMunicipioIdChanging(int value);
    partial void OnMunicipioIdChanged();
    partial void OnUrlPublicityChanging(string value);
    partial void OnUrlPublicityChanged();
    #endregion
		
		public PublicityAdvertiser()
		{
			this._Estado = default(EntityRef<Estado>);
			this._Municipio = default(EntityRef<Municipio>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicityID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PublicityID
		{
			get
			{
				return this._PublicityID;
			}
			set
			{
				if ((this._PublicityID != value))
				{
					this.OnPublicityIDChanging(value);
					this.SendPropertyChanging();
					this._PublicityID = value;
					this.SendPropertyChanged("PublicityID");
					this.OnPublicityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertiserId", DbType="Int")]
		public System.Nullable<int> AdvertiserId
		{
			get
			{
				return this._AdvertiserId;
			}
			set
			{
				if ((this._AdvertiserId != value))
				{
					this.OnAdvertiserIdChanging(value);
					this.SendPropertyChanging();
					this._AdvertiserId = value;
					this.SendPropertyChanged("AdvertiserId");
					this.OnAdvertiserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstadoId", DbType="Int NOT NULL")]
		public int EstadoId
		{
			get
			{
				return this._EstadoId;
			}
			set
			{
				if ((this._EstadoId != value))
				{
					if (this._Estado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstadoIdChanging(value);
					this.SendPropertyChanging();
					this._EstadoId = value;
					this.SendPropertyChanged("EstadoId");
					this.OnEstadoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MunicipioId", DbType="Int NOT NULL")]
		public int MunicipioId
		{
			get
			{
				return this._MunicipioId;
			}
			set
			{
				if ((this._MunicipioId != value))
				{
					if (this._Municipio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMunicipioIdChanging(value);
					this.SendPropertyChanging();
					this._MunicipioId = value;
					this.SendPropertyChanged("MunicipioId");
					this.OnMunicipioIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlPublicity", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string UrlPublicity
		{
			get
			{
				return this._UrlPublicity;
			}
			set
			{
				if ((this._UrlPublicity != value))
				{
					this.OnUrlPublicityChanging(value);
					this.SendPropertyChanging();
					this._UrlPublicity = value;
					this.SendPropertyChanged("UrlPublicity");
					this.OnUrlPublicityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_PublicityAdvertiser", Storage="_Estado", ThisKey="EstadoId", OtherKey="EstadoId", IsForeignKey=true)]
		public Estado Estado
		{
			get
			{
				return this._Estado.Entity;
			}
			set
			{
				Estado previousValue = this._Estado.Entity;
				if (((previousValue != value) 
							|| (this._Estado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estado.Entity = null;
						previousValue.PublicityAdvertiser.Remove(this);
					}
					this._Estado.Entity = value;
					if ((value != null))
					{
						value.PublicityAdvertiser.Add(this);
						this._EstadoId = value.EstadoId;
					}
					else
					{
						this._EstadoId = default(int);
					}
					this.SendPropertyChanged("Estado");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Municipio_PublicityAdvertiser", Storage="_Municipio", ThisKey="MunicipioId", OtherKey="MunicipioId", IsForeignKey=true)]
		public Municipio Municipio
		{
			get
			{
				return this._Municipio.Entity;
			}
			set
			{
				Municipio previousValue = this._Municipio.Entity;
				if (((previousValue != value) 
							|| (this._Municipio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Municipio.Entity = null;
						previousValue.PublicityAdvertiser.Remove(this);
					}
					this._Municipio.Entity = value;
					if ((value != null))
					{
						value.PublicityAdvertiser.Add(this);
						this._MunicipioId = value.MunicipioId;
					}
					else
					{
						this._MunicipioId = default(int);
					}
					this.SendPropertyChanged("Municipio");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VwAdvertiser")]
	public partial class VwAdvertiser
	{
		
		private int _AdvertiserId;
		
		private int _CategoryId;
		
		private int _CityId;
		
		private string _Letter;
		
		private string _Name;
		
		private string _Address;
		
		private string _WebPage;
		
		private string _Description;
		
		private string _CityName;
		
		private string _Tags;
		
		private bool _Featured;
		
		private string _PromocionesClub;
		
		public VwAdvertiser()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertiserId", DbType="Int NOT NULL")]
		public int AdvertiserId
		{
			get
			{
				return this._AdvertiserId;
			}
			set
			{
				if ((this._AdvertiserId != value))
				{
					this._AdvertiserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int NOT NULL")]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this._CategoryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityId", DbType="Int NOT NULL")]
		public int CityId
		{
			get
			{
				return this._CityId;
			}
			set
			{
				if ((this._CityId != value))
				{
					this._CityId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Letter", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Letter
		{
			get
			{
				return this._Letter;
			}
			set
			{
				if ((this._Letter != value))
				{
					this._Letter = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebPage", DbType="VarChar(100)")]
		public string WebPage
		{
			get
			{
				return this._WebPage;
			}
			set
			{
				if ((this._WebPage != value))
				{
					this._WebPage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CityName
		{
			get
			{
				return this._CityName;
			}
			set
			{
				if ((this._CityName != value))
				{
					this._CityName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tags", DbType="VarChar(500)")]
		public string Tags
		{
			get
			{
				return this._Tags;
			}
			set
			{
				if ((this._Tags != value))
				{
					this._Tags = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Featured", DbType="Bit NOT NULL")]
		public bool Featured
		{
			get
			{
				return this._Featured;
			}
			set
			{
				if ((this._Featured != value))
				{
					this._Featured = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromocionesClub", DbType="VarChar(110)")]
		public string PromocionesClub
		{
			get
			{
				return this._PromocionesClub;
			}
			set
			{
				if ((this._PromocionesClub != value))
				{
					this._PromocionesClub = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Advertiser")]
	public partial class Advertiser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AdvertiserId;
		
		private System.Guid _UserId;
		
		private int _CityId;
		
		private string _Name;
		
		private string _Description;
		
		private string _Address;
		
		private string _Contact;
		
		private string _WebPage;
		
		private string _Tags;
		
		private string _Facebook;
		
		private string _Twitter;
		
		private System.Nullable<double> _MapReferenceX;
		
		private System.Nullable<double> _MapReferenceY;
		
		private System.DateTime _CreatedOn;
		
		private bool _Deleted;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private int _Priority;
		
		private string _AditionalInfo;
		
		private int _FranchiseeId;
		
		private int _PersonalId;
		
		private System.Nullable<int> _UserCreatedOn;
		
		private System.Nullable<int> _UserModifiedOn;
		
		private System.Nullable<int> _FiscalDetailId;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private int _EstadoId;
		
		private int _MunicipioId;
		
		private System.Nullable<int> _ExternalKey;
		
		private string _NumberKey;
		
		private string _DV;
		
		private string _YoutubeVideo;
		
		private bool _Featured;
		
		private string _PromocionesClub;
		
		private EntitySet<Tag> _Tag;
		
		private EntitySet<AccountDetail> _AccountDetail;
		
		private EntitySet<AdvertiserCategory> _AdvertiserCategory;
		
		private EntitySet<Announce> _Announce;
		
		private EntitySet<Contract> _Contract;
		
		private EntitySet<CouponSet> _CouponSet;
		
		private EntitySet<Email> _Email;
		
		private EntitySet<Gallery> _Gallery;
		
		private EntitySet<Office> _Office;
		
		private EntitySet<Phone> _Phone;
		
		private EntitySet<Coupon> _Coupon;
		
		private EntitySet<ClubCard> _ClubCard;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
		private EntityRef<Estado> _Estado;
		
		private EntityRef<FiscalDetail> _FiscalDetail;
		
		private EntityRef<Franchisee> _Franchisee;
		
		private EntityRef<Municipio> _Municipio;
		
		private EntityRef<Personal> _Personal;
		
		private EntityRef<City> _City;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdvertiserIdChanging(int value);
    partial void OnAdvertiserIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnCityIdChanging(int value);
    partial void OnCityIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnContactChanging(string value);
    partial void OnContactChanged();
    partial void OnWebPageChanging(string value);
    partial void OnWebPageChanged();
    partial void OnTagsChanging(string value);
    partial void OnTagsChanged();
    partial void OnFacebookChanging(string value);
    partial void OnFacebookChanged();
    partial void OnTwitterChanging(string value);
    partial void OnTwitterChanged();
    partial void OnMapReferenceXChanging(System.Nullable<double> value);
    partial void OnMapReferenceXChanged();
    partial void OnMapReferenceYChanging(System.Nullable<double> value);
    partial void OnMapReferenceYChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnPriorityChanging(int value);
    partial void OnPriorityChanged();
    partial void OnAditionalInfoChanging(string value);
    partial void OnAditionalInfoChanged();
    partial void OnFranchiseeIdChanging(int value);
    partial void OnFranchiseeIdChanged();
    partial void OnPersonalIdChanging(int value);
    partial void OnPersonalIdChanged();
    partial void OnUserCreatedOnChanging(System.Nullable<int> value);
    partial void OnUserCreatedOnChanged();
    partial void OnUserModifiedOnChanging(System.Nullable<int> value);
    partial void OnUserModifiedOnChanged();
    partial void OnFiscalDetailIdChanging(System.Nullable<int> value);
    partial void OnFiscalDetailIdChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEstadoIdChanging(int value);
    partial void OnEstadoIdChanged();
    partial void OnMunicipioIdChanging(int value);
    partial void OnMunicipioIdChanged();
    partial void OnExternalKeyChanging(System.Nullable<int> value);
    partial void OnExternalKeyChanged();
    partial void OnNumberKeyChanging(string value);
    partial void OnNumberKeyChanged();
    partial void OnDVChanging(string value);
    partial void OnDVChanged();
    partial void OnYoutubeVideoChanging(string value);
    partial void OnYoutubeVideoChanged();
    partial void OnFeaturedChanging(bool value);
    partial void OnFeaturedChanged();
    partial void OnPromocionesClubChanging(string value);
    partial void OnPromocionesClubChanged();
    #endregion
		
		public Advertiser()
		{
			this._Tag = new EntitySet<Tag>(new Action<Tag>(this.attach_Tag), new Action<Tag>(this.detach_Tag));
			this._AccountDetail = new EntitySet<AccountDetail>(new Action<AccountDetail>(this.attach_AccountDetail), new Action<AccountDetail>(this.detach_AccountDetail));
			this._AdvertiserCategory = new EntitySet<AdvertiserCategory>(new Action<AdvertiserCategory>(this.attach_AdvertiserCategory), new Action<AdvertiserCategory>(this.detach_AdvertiserCategory));
			this._Announce = new EntitySet<Announce>(new Action<Announce>(this.attach_Announce), new Action<Announce>(this.detach_Announce));
			this._Contract = new EntitySet<Contract>(new Action<Contract>(this.attach_Contract), new Action<Contract>(this.detach_Contract));
			this._CouponSet = new EntitySet<CouponSet>(new Action<CouponSet>(this.attach_CouponSet), new Action<CouponSet>(this.detach_CouponSet));
			this._Email = new EntitySet<Email>(new Action<Email>(this.attach_Email), new Action<Email>(this.detach_Email));
			this._Gallery = new EntitySet<Gallery>(new Action<Gallery>(this.attach_Gallery), new Action<Gallery>(this.detach_Gallery));
			this._Office = new EntitySet<Office>(new Action<Office>(this.attach_Office), new Action<Office>(this.detach_Office));
			this._Phone = new EntitySet<Phone>(new Action<Phone>(this.attach_Phone), new Action<Phone>(this.detach_Phone));
			this._Coupon = new EntitySet<Coupon>(new Action<Coupon>(this.attach_Coupon), new Action<Coupon>(this.detach_Coupon));
			this._ClubCard = new EntitySet<ClubCard>(new Action<ClubCard>(this.attach_ClubCard), new Action<ClubCard>(this.detach_ClubCard));
			this._aspnet_User = default(EntityRef<aspnet_User>);
			this._Estado = default(EntityRef<Estado>);
			this._FiscalDetail = default(EntityRef<FiscalDetail>);
			this._Franchisee = default(EntityRef<Franchisee>);
			this._Municipio = default(EntityRef<Municipio>);
			this._Personal = default(EntityRef<Personal>);
			this._City = default(EntityRef<City>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertiserId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AdvertiserId
		{
			get
			{
				return this._AdvertiserId;
			}
			set
			{
				if ((this._AdvertiserId != value))
				{
					this.OnAdvertiserIdChanging(value);
					this.SendPropertyChanging();
					this._AdvertiserId = value;
					this.SendPropertyChanged("AdvertiserId");
					this.OnAdvertiserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityId", DbType="Int NOT NULL")]
		public int CityId
		{
			get
			{
				return this._CityId;
			}
			set
			{
				if ((this._CityId != value))
				{
					if (this._City.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCityIdChanging(value);
					this.SendPropertyChanging();
					this._CityId = value;
					this.SendPropertyChanged("CityId");
					this.OnCityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact", DbType="VarChar(50)")]
		public string Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					this.OnContactChanging(value);
					this.SendPropertyChanging();
					this._Contact = value;
					this.SendPropertyChanged("Contact");
					this.OnContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebPage", DbType="VarChar(100)")]
		public string WebPage
		{
			get
			{
				return this._WebPage;
			}
			set
			{
				if ((this._WebPage != value))
				{
					this.OnWebPageChanging(value);
					this.SendPropertyChanging();
					this._WebPage = value;
					this.SendPropertyChanged("WebPage");
					this.OnWebPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tags", DbType="VarChar(500)")]
		public string Tags
		{
			get
			{
				return this._Tags;
			}
			set
			{
				if ((this._Tags != value))
				{
					this.OnTagsChanging(value);
					this.SendPropertyChanging();
					this._Tags = value;
					this.SendPropertyChanged("Tags");
					this.OnTagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Facebook", DbType="VarChar(100)")]
		public string Facebook
		{
			get
			{
				return this._Facebook;
			}
			set
			{
				if ((this._Facebook != value))
				{
					this.OnFacebookChanging(value);
					this.SendPropertyChanging();
					this._Facebook = value;
					this.SendPropertyChanged("Facebook");
					this.OnFacebookChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Twitter", DbType="VarChar(40)")]
		public string Twitter
		{
			get
			{
				return this._Twitter;
			}
			set
			{
				if ((this._Twitter != value))
				{
					this.OnTwitterChanging(value);
					this.SendPropertyChanging();
					this._Twitter = value;
					this.SendPropertyChanged("Twitter");
					this.OnTwitterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapReferenceX", DbType="Float")]
		public System.Nullable<double> MapReferenceX
		{
			get
			{
				return this._MapReferenceX;
			}
			set
			{
				if ((this._MapReferenceX != value))
				{
					this.OnMapReferenceXChanging(value);
					this.SendPropertyChanging();
					this._MapReferenceX = value;
					this.SendPropertyChanged("MapReferenceX");
					this.OnMapReferenceXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapReferenceY", DbType="Float")]
		public System.Nullable<double> MapReferenceY
		{
			get
			{
				return this._MapReferenceY;
			}
			set
			{
				if ((this._MapReferenceY != value))
				{
					this.OnMapReferenceYChanging(value);
					this.SendPropertyChanging();
					this._MapReferenceY = value;
					this.SendPropertyChanged("MapReferenceY");
					this.OnMapReferenceYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int NOT NULL")]
		public int Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AditionalInfo", DbType="VarChar(MAX)")]
		public string AditionalInfo
		{
			get
			{
				return this._AditionalInfo;
			}
			set
			{
				if ((this._AditionalInfo != value))
				{
					this.OnAditionalInfoChanging(value);
					this.SendPropertyChanging();
					this._AditionalInfo = value;
					this.SendPropertyChanged("AditionalInfo");
					this.OnAditionalInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FranchiseeId", DbType="Int NOT NULL")]
		public int FranchiseeId
		{
			get
			{
				return this._FranchiseeId;
			}
			set
			{
				if ((this._FranchiseeId != value))
				{
					if (this._Franchisee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFranchiseeIdChanging(value);
					this.SendPropertyChanging();
					this._FranchiseeId = value;
					this.SendPropertyChanged("FranchiseeId");
					this.OnFranchiseeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalId", DbType="Int NOT NULL")]
		public int PersonalId
		{
			get
			{
				return this._PersonalId;
			}
			set
			{
				if ((this._PersonalId != value))
				{
					if (this._Personal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonalIdChanging(value);
					this.SendPropertyChanging();
					this._PersonalId = value;
					this.SendPropertyChanged("PersonalId");
					this.OnPersonalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCreatedOn", DbType="Int")]
		public System.Nullable<int> UserCreatedOn
		{
			get
			{
				return this._UserCreatedOn;
			}
			set
			{
				if ((this._UserCreatedOn != value))
				{
					this.OnUserCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._UserCreatedOn = value;
					this.SendPropertyChanged("UserCreatedOn");
					this.OnUserCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserModifiedOn", DbType="Int")]
		public System.Nullable<int> UserModifiedOn
		{
			get
			{
				return this._UserModifiedOn;
			}
			set
			{
				if ((this._UserModifiedOn != value))
				{
					this.OnUserModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._UserModifiedOn = value;
					this.SendPropertyChanged("UserModifiedOn");
					this.OnUserModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FiscalDetailId", DbType="Int")]
		public System.Nullable<int> FiscalDetailId
		{
			get
			{
				return this._FiscalDetailId;
			}
			set
			{
				if ((this._FiscalDetailId != value))
				{
					if (this._FiscalDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFiscalDetailIdChanging(value);
					this.SendPropertyChanging();
					this._FiscalDetailId = value;
					this.SendPropertyChanged("FiscalDetailId");
					this.OnFiscalDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstadoId", DbType="Int NOT NULL")]
		public int EstadoId
		{
			get
			{
				return this._EstadoId;
			}
			set
			{
				if ((this._EstadoId != value))
				{
					if (this._Estado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstadoIdChanging(value);
					this.SendPropertyChanging();
					this._EstadoId = value;
					this.SendPropertyChanged("EstadoId");
					this.OnEstadoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MunicipioId", DbType="Int NOT NULL")]
		public int MunicipioId
		{
			get
			{
				return this._MunicipioId;
			}
			set
			{
				if ((this._MunicipioId != value))
				{
					if (this._Municipio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMunicipioIdChanging(value);
					this.SendPropertyChanging();
					this._MunicipioId = value;
					this.SendPropertyChanged("MunicipioId");
					this.OnMunicipioIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExternalKey", DbType="Int")]
		public System.Nullable<int> ExternalKey
		{
			get
			{
				return this._ExternalKey;
			}
			set
			{
				if ((this._ExternalKey != value))
				{
					this.OnExternalKeyChanging(value);
					this.SendPropertyChanging();
					this._ExternalKey = value;
					this.SendPropertyChanged("ExternalKey");
					this.OnExternalKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberKey", DbType="VarChar(10)")]
		public string NumberKey
		{
			get
			{
				return this._NumberKey;
			}
			set
			{
				if ((this._NumberKey != value))
				{
					this.OnNumberKeyChanging(value);
					this.SendPropertyChanging();
					this._NumberKey = value;
					this.SendPropertyChanged("NumberKey");
					this.OnNumberKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DV", DbType="VarChar(5)")]
		public string DV
		{
			get
			{
				return this._DV;
			}
			set
			{
				if ((this._DV != value))
				{
					this.OnDVChanging(value);
					this.SendPropertyChanging();
					this._DV = value;
					this.SendPropertyChanged("DV");
					this.OnDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YoutubeVideo", DbType="VarChar(1024)")]
		public string YoutubeVideo
		{
			get
			{
				return this._YoutubeVideo;
			}
			set
			{
				if ((this._YoutubeVideo != value))
				{
					this.OnYoutubeVideoChanging(value);
					this.SendPropertyChanging();
					this._YoutubeVideo = value;
					this.SendPropertyChanged("YoutubeVideo");
					this.OnYoutubeVideoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Featured", DbType="Bit NOT NULL")]
		public bool Featured
		{
			get
			{
				return this._Featured;
			}
			set
			{
				if ((this._Featured != value))
				{
					this.OnFeaturedChanging(value);
					this.SendPropertyChanging();
					this._Featured = value;
					this.SendPropertyChanged("Featured");
					this.OnFeaturedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromocionesClub", DbType="VarChar(110)")]
		public string PromocionesClub
		{
			get
			{
				return this._PromocionesClub;
			}
			set
			{
				if ((this._PromocionesClub != value))
				{
					this.OnPromocionesClubChanging(value);
					this.SendPropertyChanging();
					this._PromocionesClub = value;
					this.SendPropertyChanged("PromocionesClub");
					this.OnPromocionesClubChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Advertiser_Tag", Storage="_Tag", ThisKey="AdvertiserId", OtherKey="AdvertiserId")]
		public EntitySet<Tag> Tag
		{
			get
			{
				return this._Tag;
			}
			set
			{
				this._Tag.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Advertiser_AccountDetail", Storage="_AccountDetail", ThisKey="AdvertiserId", OtherKey="AdvertiserId")]
		public EntitySet<AccountDetail> AccountDetail
		{
			get
			{
				return this._AccountDetail;
			}
			set
			{
				this._AccountDetail.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Advertiser_AdvertiserCategory", Storage="_AdvertiserCategory", ThisKey="AdvertiserId", OtherKey="AdvertiserId")]
		public EntitySet<AdvertiserCategory> AdvertiserCategory
		{
			get
			{
				return this._AdvertiserCategory;
			}
			set
			{
				this._AdvertiserCategory.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Advertiser_Announce", Storage="_Announce", ThisKey="AdvertiserId", OtherKey="AdvertiserId")]
		public EntitySet<Announce> Announce
		{
			get
			{
				return this._Announce;
			}
			set
			{
				this._Announce.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Advertiser_Contract", Storage="_Contract", ThisKey="AdvertiserId", OtherKey="AdvertiserId")]
		public EntitySet<Contract> Contract
		{
			get
			{
				return this._Contract;
			}
			set
			{
				this._Contract.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Advertiser_CouponSet", Storage="_CouponSet", ThisKey="AdvertiserId", OtherKey="AdvertiserId")]
		public EntitySet<CouponSet> CouponSet
		{
			get
			{
				return this._CouponSet;
			}
			set
			{
				this._CouponSet.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Advertiser_Email", Storage="_Email", ThisKey="AdvertiserId", OtherKey="AdvertiserId")]
		public EntitySet<Email> Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				this._Email.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Advertiser_Gallery", Storage="_Gallery", ThisKey="AdvertiserId", OtherKey="AdvertiserId")]
		public EntitySet<Gallery> Gallery
		{
			get
			{
				return this._Gallery;
			}
			set
			{
				this._Gallery.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Advertiser_Office", Storage="_Office", ThisKey="AdvertiserId", OtherKey="AdvertiserId")]
		public EntitySet<Office> Office
		{
			get
			{
				return this._Office;
			}
			set
			{
				this._Office.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Advertiser_Phone", Storage="_Phone", ThisKey="AdvertiserId", OtherKey="AdvertiserId")]
		public EntitySet<Phone> Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				this._Phone.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Advertiser_Coupon", Storage="_Coupon", ThisKey="AdvertiserId", OtherKey="AdvertiserId")]
		public EntitySet<Coupon> Coupon
		{
			get
			{
				return this._Coupon;
			}
			set
			{
				this._Coupon.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Advertiser_ClubCard", Storage="_ClubCard", ThisKey="AdvertiserId", OtherKey="AdvertiserId")]
		public EntitySet<ClubCard> ClubCard
		{
			get
			{
				return this._ClubCard;
			}
			set
			{
				this._ClubCard.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_Advertiser", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.Advertiser.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.Advertiser.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_Advertiser", Storage="_Estado", ThisKey="EstadoId", OtherKey="EstadoId", IsForeignKey=true)]
		public Estado Estado
		{
			get
			{
				return this._Estado.Entity;
			}
			set
			{
				Estado previousValue = this._Estado.Entity;
				if (((previousValue != value) 
							|| (this._Estado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estado.Entity = null;
						previousValue.Advertiser.Remove(this);
					}
					this._Estado.Entity = value;
					if ((value != null))
					{
						value.Advertiser.Add(this);
						this._EstadoId = value.EstadoId;
					}
					else
					{
						this._EstadoId = default(int);
					}
					this.SendPropertyChanged("Estado");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FiscalDetail_Advertiser", Storage="_FiscalDetail", ThisKey="FiscalDetailId", OtherKey="FiscalDetailId", IsForeignKey=true)]
		public FiscalDetail FiscalDetail
		{
			get
			{
				return this._FiscalDetail.Entity;
			}
			set
			{
				FiscalDetail previousValue = this._FiscalDetail.Entity;
				if (((previousValue != value) 
							|| (this._FiscalDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FiscalDetail.Entity = null;
						previousValue.Advertiser.Remove(this);
					}
					this._FiscalDetail.Entity = value;
					if ((value != null))
					{
						value.Advertiser.Add(this);
						this._FiscalDetailId = value.FiscalDetailId;
					}
					else
					{
						this._FiscalDetailId = default(Nullable<int>);
					}
					this.SendPropertyChanged("FiscalDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Franchisee_Advertiser", Storage="_Franchisee", ThisKey="FranchiseeId", OtherKey="FranchiseeId", IsForeignKey=true)]
		public Franchisee Franchisee
		{
			get
			{
				return this._Franchisee.Entity;
			}
			set
			{
				Franchisee previousValue = this._Franchisee.Entity;
				if (((previousValue != value) 
							|| (this._Franchisee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Franchisee.Entity = null;
						previousValue.Advertiser.Remove(this);
					}
					this._Franchisee.Entity = value;
					if ((value != null))
					{
						value.Advertiser.Add(this);
						this._FranchiseeId = value.FranchiseeId;
					}
					else
					{
						this._FranchiseeId = default(int);
					}
					this.SendPropertyChanged("Franchisee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Municipio_Advertiser", Storage="_Municipio", ThisKey="MunicipioId", OtherKey="MunicipioId", IsForeignKey=true)]
		public Municipio Municipio
		{
			get
			{
				return this._Municipio.Entity;
			}
			set
			{
				Municipio previousValue = this._Municipio.Entity;
				if (((previousValue != value) 
							|| (this._Municipio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Municipio.Entity = null;
						previousValue.Advertiser.Remove(this);
					}
					this._Municipio.Entity = value;
					if ((value != null))
					{
						value.Advertiser.Add(this);
						this._MunicipioId = value.MunicipioId;
					}
					else
					{
						this._MunicipioId = default(int);
					}
					this.SendPropertyChanged("Municipio");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personal_Advertiser", Storage="_Personal", ThisKey="PersonalId", OtherKey="PersonalId", IsForeignKey=true)]
		public Personal Personal
		{
			get
			{
				return this._Personal.Entity;
			}
			set
			{
				Personal previousValue = this._Personal.Entity;
				if (((previousValue != value) 
							|| (this._Personal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personal.Entity = null;
						previousValue.Advertiser.Remove(this);
					}
					this._Personal.Entity = value;
					if ((value != null))
					{
						value.Advertiser.Add(this);
						this._PersonalId = value.PersonalId;
					}
					else
					{
						this._PersonalId = default(int);
					}
					this.SendPropertyChanged("Personal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_Advertiser", Storage="_City", ThisKey="CityId", OtherKey="CityId", IsForeignKey=true)]
		public City City
		{
			get
			{
				return this._City.Entity;
			}
			set
			{
				City previousValue = this._City.Entity;
				if (((previousValue != value) 
							|| (this._City.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._City.Entity = null;
						previousValue.Advertiser.Remove(this);
					}
					this._City.Entity = value;
					if ((value != null))
					{
						value.Advertiser.Add(this);
						this._CityId = value.CityId;
					}
					else
					{
						this._CityId = default(int);
					}
					this.SendPropertyChanged("City");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tag(Tag entity)
		{
			this.SendPropertyChanging();
			entity.Advertiser = this;
		}
		
		private void detach_Tag(Tag entity)
		{
			this.SendPropertyChanging();
			entity.Advertiser = null;
		}
		
		private void attach_AccountDetail(AccountDetail entity)
		{
			this.SendPropertyChanging();
			entity.Advertiser = this;
		}
		
		private void detach_AccountDetail(AccountDetail entity)
		{
			this.SendPropertyChanging();
			entity.Advertiser = null;
		}
		
		private void attach_AdvertiserCategory(AdvertiserCategory entity)
		{
			this.SendPropertyChanging();
			entity.Advertiser = this;
		}
		
		private void detach_AdvertiserCategory(AdvertiserCategory entity)
		{
			this.SendPropertyChanging();
			entity.Advertiser = null;
		}
		
		private void attach_Announce(Announce entity)
		{
			this.SendPropertyChanging();
			entity.Advertiser = this;
		}
		
		private void detach_Announce(Announce entity)
		{
			this.SendPropertyChanging();
			entity.Advertiser = null;
		}
		
		private void attach_Contract(Contract entity)
		{
			this.SendPropertyChanging();
			entity.Advertiser = this;
		}
		
		private void detach_Contract(Contract entity)
		{
			this.SendPropertyChanging();
			entity.Advertiser = null;
		}
		
		private void attach_CouponSet(CouponSet entity)
		{
			this.SendPropertyChanging();
			entity.Advertiser = this;
		}
		
		private void detach_CouponSet(CouponSet entity)
		{
			this.SendPropertyChanging();
			entity.Advertiser = null;
		}
		
		private void attach_Email(Email entity)
		{
			this.SendPropertyChanging();
			entity.Advertiser = this;
		}
		
		private void detach_Email(Email entity)
		{
			this.SendPropertyChanging();
			entity.Advertiser = null;
		}
		
		private void attach_Gallery(Gallery entity)
		{
			this.SendPropertyChanging();
			entity.Advertiser = this;
		}
		
		private void detach_Gallery(Gallery entity)
		{
			this.SendPropertyChanging();
			entity.Advertiser = null;
		}
		
		private void attach_Office(Office entity)
		{
			this.SendPropertyChanging();
			entity.Advertiser = this;
		}
		
		private void detach_Office(Office entity)
		{
			this.SendPropertyChanging();
			entity.Advertiser = null;
		}
		
		private void attach_Phone(Phone entity)
		{
			this.SendPropertyChanging();
			entity.Advertiser = this;
		}
		
		private void detach_Phone(Phone entity)
		{
			this.SendPropertyChanging();
			entity.Advertiser = null;
		}
		
		private void attach_Coupon(Coupon entity)
		{
			this.SendPropertyChanging();
			entity.Advertiser = this;
		}
		
		private void detach_Coupon(Coupon entity)
		{
			this.SendPropertyChanging();
			entity.Advertiser = null;
		}
		
		private void attach_ClubCard(ClubCard entity)
		{
			this.SendPropertyChanging();
			entity.Advertiser = this;
		}
		
		private void detach_ClubCard(ClubCard entity)
		{
			this.SendPropertyChanging();
			entity.Advertiser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClubCard")]
	public partial class ClubCard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CardID;
		
		private System.Nullable<int> _AdvertiserId;
		
		private System.Nullable<int> _GuestId;
		
		private System.Nullable<System.DateTime> _FechaExpedicion;
		
		private System.Nullable<System.DateTime> _Expira;
		
		private System.Nullable<long> _Folio;
		
		private EntityRef<Advertiser> _Advertiser;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCardIDChanging(int value);
    partial void OnCardIDChanged();
    partial void OnAdvertiserIdChanging(System.Nullable<int> value);
    partial void OnAdvertiserIdChanged();
    partial void OnGuestIdChanging(System.Nullable<int> value);
    partial void OnGuestIdChanged();
    partial void OnFechaExpedicionChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaExpedicionChanged();
    partial void OnExpiraChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiraChanged();
    partial void OnFolioChanging(System.Nullable<long> value);
    partial void OnFolioChanged();
    #endregion
		
		public ClubCard()
		{
			this._Advertiser = default(EntityRef<Advertiser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CardID
		{
			get
			{
				return this._CardID;
			}
			set
			{
				if ((this._CardID != value))
				{
					this.OnCardIDChanging(value);
					this.SendPropertyChanging();
					this._CardID = value;
					this.SendPropertyChanged("CardID");
					this.OnCardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertiserId", DbType="Int")]
		public System.Nullable<int> AdvertiserId
		{
			get
			{
				return this._AdvertiserId;
			}
			set
			{
				if ((this._AdvertiserId != value))
				{
					if (this._Advertiser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdvertiserIdChanging(value);
					this.SendPropertyChanging();
					this._AdvertiserId = value;
					this.SendPropertyChanged("AdvertiserId");
					this.OnAdvertiserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuestId", DbType="Int")]
		public System.Nullable<int> GuestId
		{
			get
			{
				return this._GuestId;
			}
			set
			{
				if ((this._GuestId != value))
				{
					this.OnGuestIdChanging(value);
					this.SendPropertyChanging();
					this._GuestId = value;
					this.SendPropertyChanged("GuestId");
					this.OnGuestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaExpedicion", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaExpedicion
		{
			get
			{
				return this._FechaExpedicion;
			}
			set
			{
				if ((this._FechaExpedicion != value))
				{
					this.OnFechaExpedicionChanging(value);
					this.SendPropertyChanging();
					this._FechaExpedicion = value;
					this.SendPropertyChanged("FechaExpedicion");
					this.OnFechaExpedicionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expira", AutoSync=AutoSync.Always, DbType="DateTime", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Expira
		{
			get
			{
				return this._Expira;
			}
			set
			{
				if ((this._Expira != value))
				{
					this.OnExpiraChanging(value);
					this.SendPropertyChanging();
					this._Expira = value;
					this.SendPropertyChanged("Expira");
					this.OnExpiraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Folio", DbType="BigInt")]
		public System.Nullable<long> Folio
		{
			get
			{
				return this._Folio;
			}
			set
			{
				if ((this._Folio != value))
				{
					this.OnFolioChanging(value);
					this.SendPropertyChanging();
					this._Folio = value;
					this.SendPropertyChanged("Folio");
					this.OnFolioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Advertiser_ClubCard", Storage="_Advertiser", ThisKey="AdvertiserId", OtherKey="AdvertiserId", IsForeignKey=true)]
		public Advertiser Advertiser
		{
			get
			{
				return this._Advertiser.Entity;
			}
			set
			{
				Advertiser previousValue = this._Advertiser.Entity;
				if (((previousValue != value) 
							|| (this._Advertiser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Advertiser.Entity = null;
						previousValue.ClubCard.Remove(this);
					}
					this._Advertiser.Entity = value;
					if ((value != null))
					{
						value.ClubCard.Add(this);
						this._AdvertiserId = value.AdvertiserId;
					}
					else
					{
						this._AdvertiserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Advertiser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VwCardClubGuest")]
	public partial class VwCardClubGuest
	{
		
		private int _CardID;
		
		private System.Nullable<int> _AdvertiserId;
		
		private System.Nullable<long> _Folio;
		
		private System.Nullable<System.DateTime> _FechaExpedicion;
		
		private System.Nullable<System.DateTime> _Expira;
		
		private string _Name;
		
		private string _City;
		
		private string _Email;
		
		public VwCardClubGuest()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardID", DbType="Int NOT NULL")]
		public int CardID
		{
			get
			{
				return this._CardID;
			}
			set
			{
				if ((this._CardID != value))
				{
					this._CardID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvertiserId", DbType="Int")]
		public System.Nullable<int> AdvertiserId
		{
			get
			{
				return this._AdvertiserId;
			}
			set
			{
				if ((this._AdvertiserId != value))
				{
					this._AdvertiserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Folio", DbType="BigInt")]
		public System.Nullable<long> Folio
		{
			get
			{
				return this._Folio;
			}
			set
			{
				if ((this._Folio != value))
				{
					this._Folio = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaExpedicion", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaExpedicion
		{
			get
			{
				return this._FechaExpedicion;
			}
			set
			{
				if ((this._FechaExpedicion != value))
				{
					this._FechaExpedicion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expira", DbType="DateTime")]
		public System.Nullable<System.DateTime> Expira
		{
			get
			{
				return this._Expira;
			}
			set
			{
				if ((this._Expira != value))
				{
					this._Expira = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.City")]
	public partial class City : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CityId;
		
		private string _Name;
		
		private bool _Deleted;
		
		private System.Nullable<int> _EstadoId;
		
		private System.Nullable<int> _ZonaId;
		
		private EntitySet<Office> _Office;
		
		private EntitySet<Advertiser> _Advertiser;
		
		private EntitySet<Publicity> _Publicity;
		
		private EntityRef<Estado> _Estado;
		
		private EntityRef<ZonaMetropolitana> _ZonaMetropolitana;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCityIdChanging(int value);
    partial void OnCityIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnEstadoIdChanging(System.Nullable<int> value);
    partial void OnEstadoIdChanged();
    partial void OnZonaIdChanging(System.Nullable<int> value);
    partial void OnZonaIdChanged();
    #endregion
		
		public City()
		{
			this._Office = new EntitySet<Office>(new Action<Office>(this.attach_Office), new Action<Office>(this.detach_Office));
			this._Advertiser = new EntitySet<Advertiser>(new Action<Advertiser>(this.attach_Advertiser), new Action<Advertiser>(this.detach_Advertiser));
			this._Publicity = new EntitySet<Publicity>(new Action<Publicity>(this.attach_Publicity), new Action<Publicity>(this.detach_Publicity));
			this._Estado = default(EntityRef<Estado>);
			this._ZonaMetropolitana = default(EntityRef<ZonaMetropolitana>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CityId
		{
			get
			{
				return this._CityId;
			}
			set
			{
				if ((this._CityId != value))
				{
					this.OnCityIdChanging(value);
					this.SendPropertyChanging();
					this._CityId = value;
					this.SendPropertyChanged("CityId");
					this.OnCityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstadoId", DbType="Int")]
		public System.Nullable<int> EstadoId
		{
			get
			{
				return this._EstadoId;
			}
			set
			{
				if ((this._EstadoId != value))
				{
					if (this._Estado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstadoIdChanging(value);
					this.SendPropertyChanging();
					this._EstadoId = value;
					this.SendPropertyChanged("EstadoId");
					this.OnEstadoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZonaId", DbType="Int")]
		public System.Nullable<int> ZonaId
		{
			get
			{
				return this._ZonaId;
			}
			set
			{
				if ((this._ZonaId != value))
				{
					if (this._ZonaMetropolitana.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnZonaIdChanging(value);
					this.SendPropertyChanging();
					this._ZonaId = value;
					this.SendPropertyChanged("ZonaId");
					this.OnZonaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_Office", Storage="_Office", ThisKey="CityId", OtherKey="CityId")]
		public EntitySet<Office> Office
		{
			get
			{
				return this._Office;
			}
			set
			{
				this._Office.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_Advertiser", Storage="_Advertiser", ThisKey="CityId", OtherKey="CityId")]
		public EntitySet<Advertiser> Advertiser
		{
			get
			{
				return this._Advertiser;
			}
			set
			{
				this._Advertiser.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_Publicity", Storage="_Publicity", ThisKey="CityId", OtherKey="CityId")]
		public EntitySet<Publicity> Publicity
		{
			get
			{
				return this._Publicity;
			}
			set
			{
				this._Publicity.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estado_City", Storage="_Estado", ThisKey="EstadoId", OtherKey="EstadoId", IsForeignKey=true)]
		public Estado Estado
		{
			get
			{
				return this._Estado.Entity;
			}
			set
			{
				Estado previousValue = this._Estado.Entity;
				if (((previousValue != value) 
							|| (this._Estado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estado.Entity = null;
						previousValue.City.Remove(this);
					}
					this._Estado.Entity = value;
					if ((value != null))
					{
						value.City.Add(this);
						this._EstadoId = value.EstadoId;
					}
					else
					{
						this._EstadoId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Estado");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ZonaMetropolitana_City", Storage="_ZonaMetropolitana", ThisKey="ZonaId", OtherKey="ZonaId", IsForeignKey=true)]
		public ZonaMetropolitana ZonaMetropolitana
		{
			get
			{
				return this._ZonaMetropolitana.Entity;
			}
			set
			{
				ZonaMetropolitana previousValue = this._ZonaMetropolitana.Entity;
				if (((previousValue != value) 
							|| (this._ZonaMetropolitana.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ZonaMetropolitana.Entity = null;
						previousValue.City.Remove(this);
					}
					this._ZonaMetropolitana.Entity = value;
					if ((value != null))
					{
						value.City.Add(this);
						this._ZonaId = value.ZonaId;
					}
					else
					{
						this._ZonaId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ZonaMetropolitana");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Office(Office entity)
		{
			this.SendPropertyChanging();
			entity.City = this;
		}
		
		private void detach_Office(Office entity)
		{
			this.SendPropertyChanging();
			entity.City = null;
		}
		
		private void attach_Advertiser(Advertiser entity)
		{
			this.SendPropertyChanging();
			entity.City = this;
		}
		
		private void detach_Advertiser(Advertiser entity)
		{
			this.SendPropertyChanging();
			entity.City = null;
		}
		
		private void attach_Publicity(Publicity entity)
		{
			this.SendPropertyChanging();
			entity.City = this;
		}
		
		private void detach_Publicity(Publicity entity)
		{
			this.SendPropertyChanging();
			entity.City = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ZonaMetropolitana")]
	public partial class ZonaMetropolitana : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ZonaId;
		
		private string _Name;
		
		private EntitySet<City> _City;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnZonaIdChanging(int value);
    partial void OnZonaIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ZonaMetropolitana()
		{
			this._City = new EntitySet<City>(new Action<City>(this.attach_City), new Action<City>(this.detach_City));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZonaId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ZonaId
		{
			get
			{
				return this._ZonaId;
			}
			set
			{
				if ((this._ZonaId != value))
				{
					this.OnZonaIdChanging(value);
					this.SendPropertyChanging();
					this._ZonaId = value;
					this.SendPropertyChanged("ZonaId");
					this.OnZonaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ZonaMetropolitana_City", Storage="_City", ThisKey="ZonaId", OtherKey="ZonaId")]
		public EntitySet<City> City
		{
			get
			{
				return this._City;
			}
			set
			{
				this._City.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_City(City entity)
		{
			this.SendPropertyChanging();
			entity.ZonaMetropolitana = this;
		}
		
		private void detach_City(City entity)
		{
			this.SendPropertyChanging();
			entity.ZonaMetropolitana = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Publicity")]
	public partial class Publicity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PublicityID;
		
		private System.Nullable<int> _CityId;
		
		private string _WebPage;
		
		private System.Nullable<int> _Prioridad;
		
		private string _Picture;
		
		private EntityRef<City> _City;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPublicityIDChanging(int value);
    partial void OnPublicityIDChanged();
    partial void OnCityIdChanging(System.Nullable<int> value);
    partial void OnCityIdChanged();
    partial void OnWebPageChanging(string value);
    partial void OnWebPageChanged();
    partial void OnPrioridadChanging(System.Nullable<int> value);
    partial void OnPrioridadChanged();
    partial void OnPictureChanging(string value);
    partial void OnPictureChanged();
    #endregion
		
		public Publicity()
		{
			this._City = default(EntityRef<City>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicityID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PublicityID
		{
			get
			{
				return this._PublicityID;
			}
			set
			{
				if ((this._PublicityID != value))
				{
					this.OnPublicityIDChanging(value);
					this.SendPropertyChanging();
					this._PublicityID = value;
					this.SendPropertyChanged("PublicityID");
					this.OnPublicityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityId", DbType="Int")]
		public System.Nullable<int> CityId
		{
			get
			{
				return this._CityId;
			}
			set
			{
				if ((this._CityId != value))
				{
					if (this._City.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCityIdChanging(value);
					this.SendPropertyChanging();
					this._CityId = value;
					this.SendPropertyChanged("CityId");
					this.OnCityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebPage", DbType="VarChar(120)")]
		public string WebPage
		{
			get
			{
				return this._WebPage;
			}
			set
			{
				if ((this._WebPage != value))
				{
					this.OnWebPageChanging(value);
					this.SendPropertyChanging();
					this._WebPage = value;
					this.SendPropertyChanged("WebPage");
					this.OnWebPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prioridad", DbType="Int")]
		public System.Nullable<int> Prioridad
		{
			get
			{
				return this._Prioridad;
			}
			set
			{
				if ((this._Prioridad != value))
				{
					this.OnPrioridadChanging(value);
					this.SendPropertyChanging();
					this._Prioridad = value;
					this.SendPropertyChanged("Prioridad");
					this.OnPrioridadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="VarChar(100)")]
		public string Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_Publicity", Storage="_City", ThisKey="CityId", OtherKey="CityId", IsForeignKey=true)]
		public City City
		{
			get
			{
				return this._City.Entity;
			}
			set
			{
				City previousValue = this._City.Entity;
				if (((previousValue != value) 
							|| (this._City.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._City.Entity = null;
						previousValue.Publicity.Remove(this);
					}
					this._City.Entity = value;
					if ((value != null))
					{
						value.Publicity.Add(this);
						this._CityId = value.CityId;
					}
					else
					{
						this._CityId = default(Nullable<int>);
					}
					this.SendPropertyChanged("City");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
